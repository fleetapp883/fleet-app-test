{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { collection, addDoc, query, where, getDocs, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\";\nimport Auth from \"./components/Auth\";\nimport UploadForm from \"./components/UploadForm\";\nimport ManualEntryForm from \"./components/ManualEntryForm\";\nimport \"./App.css\";\nconst [searchField, setSearchField] = useState(\"UniqueNo\");\nconst [startDate, setStartDate] = useState(\"\");\nconst [endDate, setEndDate] = useState(\"\");\nconst handleExport = () => {\n  import(\"xlsx\").then(xlsx => {\n    const rows = history.map(row => {\n      const flatRow = {};\n      Object.keys(row).forEach(k => {\n        const value = row[k];\n        flatRow[k] = typeof value === \"object\" && (value === null || value === void 0 ? void 0 : value.seconds) ? new Date(value.seconds * 1000).toLocaleString() : String(value !== null && value !== void 0 ? value : \"\");\n      });\n      return flatRow;\n    });\n    const worksheet = xlsx.utils.json_to_sheet(rows);\n    const workbook = xlsx.utils.book_new();\n    xlsx.utils.book_append_sheet(workbook, worksheet, \"History\");\n    xlsx.writeFile(workbook, \"Fleet_Full_Version_History.xlsx\");\n  });\n};\nconst labelToKey = {\n  \"Indent No\": \"IndentNo\",\n  \"Indent Date\": \"IndentDate\",\n  \"Placement Date\": \"PlacementDate\",\n  \"Customer\": \"Customer\",\n  \"Customer Type\": \"CustomerType\",\n  \"Customer Billing Type\": \"CustomerBillingType\",\n  \"Sourcing (Vendor)\": \"SourcingVendor\",\n  \"Vendor Type\": \"VendorType\",\n  \"Vendor Billing Type\": \"VendorBillingType\",\n  \"Origin\": \"Origin\",\n  \"Destination\": \"Destination\",\n  \"Vehicle No\": \"VehicleNo\",\n  \"Vehicle type\": \"VehicleType\",\n  \"Driver No\": \"DriverNo\",\n  \"Dispatch Date\": \"DispatchDate\",\n  \"Deliver Date\": \"DeliverDate\",\n  \"Offloading Date\": \"OffloadingDate\",\n  \"E-way Bill\": \"EwayBill\",\n  \"LR No.\": \"LRNo\",\n  \"Soft Copy POD Rec\": \"SoftCopyPODRec\",\n  \"Hard Copy POD Rec\": \"HardCopyPODRec\",\n  \"Customer -Sale rate\": \"CustomerSaleRate\",\n  \"Advance to be Paid\": \"AdvanceToBePaid\",\n  \"Advance Rec\": \"AdvanceRec\",\n  \"Advance UTR\": \"AdvanceUTR\",\n  \"Advance Rec-Date\": \"AdvanceRecDate\",\n  \"Balance Pending\": \"BalancePending\",\n  \"Detention Charges\": \"DetentionCharges\",\n  \"Loading/Unloading Charges\": \"LoadingUnloadingCharges\",\n  \"Miscellaneous Charges.\": \"MiscCharges\",\n  \"Processing Charges\": \"ProcessingCharges\",\n  \"Net Balance\": \"NetBalance\",\n  \"Balance Rec Amount\": \"BalanceRecAmount\",\n  \"Balance UTR\": \"BalanceUTR\",\n  \"Balance Rec Date\": \"BalanceRecDate\",\n  \"Remaining Balance\": \"RemainingBalance\",\n  \"Remaining Balance UTR\": \"RemainingBalanceUTR\",\n  \"Remaining Balance Date\": \"RemainingBalanceDate\",\n  \"Supplier Buy Rate\": \"SupplierBuyRate\",\n  \"Supplier Advance Pay\": \"SupplierAdvancePay\",\n  \"Supplier Advance Paid\": \"SupplierAdvancePaid\",\n  \"Supplier Mis Charges\": \"SupplierMisCharges\",\n  \"Supplier Invoice No.\": \"SupplierInvoiceNo\",\n  \"Supplier Advance UTR\": \"SupplierAdvanceUTR\",\n  \"Supplier Advance Pay-Date\": \"SupplierAdvancePayDate\",\n  \"Supplier Balance Pending\": \"SupplierBalancePending\",\n  \"Supplier Balance Paid Amount\": \"SupplierBalancePaidAmount\",\n  \"Supplier Balance Paid UTR\": \"SupplierBalancePaidUTR\",\n  \"Supplier Balance Paid Date\": \"SupplierBalancePaidDate\",\n  \"Remaining Supplier Amount\": \"RemainingSupplierAmount\",\n  \"POD Rec Date\": \"PODRecDate\",\n  \"POD Send to Customer Date\": \"PODSendToCustomerDate\",\n  \"POD Docket No.\": \"PODDocketNo\",\n  \"POD Rec By Customer\": \"PODRecByCustomer\",\n  \"POD Deduction If any\": \"PODDeductionIfAny\",\n  \"Gross Profit\": \"GrossProfit\",\n  \"Bad Debts\": \"BadDebts\",\n  \"Net Profit\": \"NetProfit\",\n  \"UniqueNo\": \"UniqueNo\",\n  \"isCurrent\": \"isCurrent\",\n  \"createdBy\": \"createdBy\",\n  \"createdAt\": \"createdAt\"\n};\nconst keyToLabel = Object.fromEntries(Object.entries(labelToKey).map(([k, v]) => [v, k]));\nconst testConnection = async () => {\n  try {\n    const docRef = await addDoc(collection(db, \"test_connection\"), {\n      message: \"Testing Firestore connection\",\n      timestamp: new Date()\n    });\n    console.log(\"✅ Firestore write succeeded with ID:\", docRef.id);\n    alert(\"✅ Firebase is connected. Test document written!\");\n  } catch (error) {\n    console.error(\"❌ Firebase connection failed:\", error);\n    alert(\"❌ Firebase connection failed: \" + error.message);\n  }\n};\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"UniqueNo\");\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      console.log(\"🔥 Auth State Changed. User:\", currentUser);\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSave = async () => {\n    try {\n      const batch = records.map(record => addDoc(collection(db, \"fleet_records\"), {\n        ...record,\n        createdBy: user.email,\n        createdAt: new Date(),\n        isCurrent: true,\n        versionDate: new Date()\n      }));\n      await Promise.all(batch);\n      alert(\"Records saved to Firestore!\");\n    } catch (error) {\n      alert(\"Error saving records: \" + error.message);\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      const hq = query(collection(db, \"fleet_records\"), where(searchField, \"==\", searchKey));\n      const hSnapshot = await getDocs(hq);\n      const allVersions = [];\n      const currentOnly = [];\n      hSnapshot.forEach(docSnap => {\n        var _row$versionDate;\n        const row = {\n          id: docSnap.id,\n          ...docSnap.data()\n        };\n        if (row.isCurrent === undefined) row.isCurrent = true;\n        const versionTimestamp = ((_row$versionDate = row.versionDate) === null || _row$versionDate === void 0 ? void 0 : _row$versionDate.seconds) ? new Date(row.versionDate.seconds * 1000) : null;\n        if (startDate && endDate && versionTimestamp && (versionTimestamp < new Date(startDate) || versionTimestamp > new Date(endDate))) {\n          return;\n        }\n        allVersions.push(row);\n        if (row.isCurrent === true) currentOnly.push(row);\n      });\n      setRecords(currentOnly);\n      setHistory(allVersions);\n    } catch (error) {\n      alert(\"Search failed: \" + error.message);\n    }\n  };\n  const handleUpdate = async row => {\n    try {\n      const {\n        id,\n        ...rest\n      } = row;\n      const cleanData = {};\n      for (const key in rest) {\n        var _rest$key;\n        cleanData[key] = typeof rest[key] === \"string\" || typeof rest[key] === \"number\" ? rest[key] : String((_rest$key = rest[key]) !== null && _rest$key !== void 0 ? _rest$key : \"\");\n      }\n      await updateDoc(doc(db, \"fleet_records\", id), {\n        isCurrent: false,\n        expiredAt: new Date(),\n        modifiedBy: user.email\n      });\n      const newVersion = {\n        ...cleanData,\n        createdAt: new Date(),\n        createdBy: user.email,\n        isCurrent: true,\n        versionDate: new Date()\n      };\n      const docRef = await addDoc(collection(db, \"fleet_records\"), newVersion);\n      const updatedRecords = records.map(r => r.id === id ? {\n        ...newVersion,\n        id: docRef.id\n      } : r);\n      setRecords(updatedRecords);\n      handleSearch();\n      alert(\"🆕 SCD Type 2 update saved successfully.\");\n    } catch (error) {\n      alert(\"❌ Update failed: \" + error.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteDoc(doc(db, \"fleet_records\", id));\n      setRecords(records.filter(r => r.id !== id));\n      alert(\"🗑️ Record deleted successfully.\");\n    } catch (error) {\n      alert(\"❌ Delete failed: \" + error.message);\n    }\n  };\n  if (!user) return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, \"Welcome, \", user.email), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => signOut(auth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: testConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, \"Test Firebase Connection\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UploadForm, {\n    onDataParsed: data => setRecords([...records, ...data]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManualEntryForm, {\n    onAddRow: row => setRecords([...records, row]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 1\n    }\n  }, \"Search Existing Records\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: searchField,\n    onChange: e => setSearchField(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"UniqueNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 3\n    }\n  }, \"UniqueNo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Broker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 3\n    }\n  }, \"Broker\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search value\",\n    value: searchKey,\n    onChange: e => setSearchKey(e.target.value),\n    style: {\n      margin: \"0 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 1\n    }\n  }, \"From: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 1\n    }\n  }, \"To: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: endDate,\n    onChange: e => setEndDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    style: {\n      marginLeft: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 1\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \"Editable Current Records\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 3\n    }\n  }, Object.keys(labelToKey).map(label => /*#__PURE__*/React.createElement(\"th\", {\n    key: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, label)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 1\n    }\n  }, records.map((row, rowIndex) => {\n    if (!row.UniqueNo) {\n      row.UniqueNo = `UNQ-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    }\n    const readOnlyFields = [\"UniqueNo\", \"createdAt\", \"createdBy\", \"isCurrent\"];\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: rowIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 7\n      }\n    }, Object.entries(labelToKey).map(([label, key]) => {\n      var _row$key, _row$key2;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: typeof row[key] === \"object\" && ((_row$key = row[key]) === null || _row$key === void 0 ? void 0 : _row$key.seconds) ? new Date(row[key].seconds * 1000).toLocaleString() : String((_row$key2 = row[key]) !== null && _row$key2 !== void 0 ? _row$key2 : \"\"),\n        onChange: e => {\n          const updated = [...records];\n          updated[rowIndex][key] = e.target.value;\n          setRecords(updated);\n        },\n        style: {\n          width: \"120px\"\n        },\n        readOnly: readOnlyFields.includes(key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleUpdate(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (window.confirm(\"Are you sure you want to delete this record?\")) {\n          handleDelete(row.id);\n        }\n      },\n      style: {\n        marginLeft: \"8px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n  })))), history.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }\n  }, \"\\uD83D\\uDD0D Full Version History\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 5\n    }\n  }, \"\\uD83D\\uDCC4 Export to Excel\"), (() => {\n    const allKeys = new Set();\n    history.forEach(row => Object.keys(row).forEach(k => allKeys.add(k)));\n    const columnList = Array.from(allKeys);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-scroll-x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 7\n      }\n    }, columnList.map(col => /*#__PURE__*/React.createElement(\"th\", {\n      key: col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }\n    }, col)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 5\n      }\n    }, [...history].sort((a, b) => {\n      var _a$expiredAt, _b$expiredAt;\n      if (a.isCurrent) return -1;\n      if (b.isCurrent) return 1;\n      const aTime = ((_a$expiredAt = a.expiredAt) === null || _a$expiredAt === void 0 ? void 0 : _a$expiredAt.seconds) || 0;\n      const bTime = ((_b$expiredAt = b.expiredAt) === null || _b$expiredAt === void 0 ? void 0 : _b$expiredAt.seconds) || 0;\n      return bTime - aTime;\n    }).map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 11\n      }\n    }, columnList.map((col, j) => {\n      var _row$col, _row$col2;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }\n      }, typeof row[col] === 'object' && ((_row$col = row[col]) === null || _row$col === void 0 ? void 0 : _row$col.seconds) ? new Date(row[col].seconds * 1000).toLocaleString() : String((_row$col2 = row[col]) !== null && _row$col2 !== void 0 ? _row$col2 : \"\"));\n    }))))));\n  })()));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","onAuthStateChanged","signOut","collection","addDoc","query","where","getDocs","updateDoc","deleteDoc","doc","auth","db","Auth","UploadForm","ManualEntryForm","searchField","setSearchField","startDate","setStartDate","endDate","setEndDate","handleExport","then","xlsx","rows","history","map","row","flatRow","Object","keys","forEach","k","value","seconds","Date","toLocaleString","String","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","labelToKey","keyToLabel","fromEntries","entries","v","testConnection","docRef","message","timestamp","console","log","id","alert","error","App","user","setUser","records","setRecords","setHistory","searchKey","setSearchKey","unsubscribe","currentUser","handleSave","batch","record","createdBy","email","createdAt","isCurrent","versionDate","Promise","all","handleSearch","hq","hSnapshot","allVersions","currentOnly","docSnap","_row$versionDate","data","undefined","versionTimestamp","push","handleUpdate","rest","cleanData","key","_rest$key","expiredAt","modifiedBy","newVersion","updatedRecords","r","handleDelete","filter","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","onDataParsed","onAddRow","onChange","e","target","type","placeholder","margin","marginLeft","className","label","rowIndex","UniqueNo","now","Math","floor","random","readOnlyFields","_row$key","_row$key2","updated","width","readOnly","includes","window","confirm","color","length","Fragment","allKeys","Set","add","columnList","Array","from","col","sort","a","b","_a$expiredAt","_b$expiredAt","aTime","bTime","i","j","_row$col","_row$col2"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport {\n  collection,\n  addDoc,\n  query,\n  where,\n  getDocs,\n  updateDoc,\n  deleteDoc,\n  doc\n} from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\";\nimport Auth from \"./components/Auth\";\nimport UploadForm from \"./components/UploadForm\";\nimport ManualEntryForm from \"./components/ManualEntryForm\";\nimport \"./App.css\";\n\nconst [searchField, setSearchField] = useState(\"UniqueNo\");\nconst [startDate, setStartDate] = useState(\"\");\nconst [endDate, setEndDate] = useState(\"\");\n\nconst handleExport = () => {\n  import(\"xlsx\").then((xlsx) => {\n    const rows = history.map((row) => {\n      const flatRow = {};\n      Object.keys(row).forEach((k) => {\n        const value = row[k];\n        flatRow[k] =\n          typeof value === \"object\" && value?.seconds\n            ? new Date(value.seconds * 1000).toLocaleString()\n            : String(value ?? \"\");\n      });\n      return flatRow;\n    });\n\n    const worksheet = xlsx.utils.json_to_sheet(rows);\n    const workbook = xlsx.utils.book_new();\n    xlsx.utils.book_append_sheet(workbook, worksheet, \"History\");\n\n    xlsx.writeFile(workbook, \"Fleet_Full_Version_History.xlsx\");\n  });\n};\n\nconst labelToKey = {\n  \"Indent No\": \"IndentNo\",\n  \"Indent Date\": \"IndentDate\",\n  \"Placement Date\": \"PlacementDate\",\n  \"Customer\": \"Customer\",\n  \"Customer Type\": \"CustomerType\",\n  \"Customer Billing Type\": \"CustomerBillingType\",\n  \"Sourcing (Vendor)\": \"SourcingVendor\",\n  \"Vendor Type\": \"VendorType\",\n  \"Vendor Billing Type\": \"VendorBillingType\",\n  \"Origin\": \"Origin\",\n  \"Destination\": \"Destination\",\n  \"Vehicle No\": \"VehicleNo\",\n  \"Vehicle type\": \"VehicleType\",\n  \"Driver No\": \"DriverNo\",\n  \"Dispatch Date\": \"DispatchDate\",\n  \"Deliver Date\": \"DeliverDate\",\n  \"Offloading Date\": \"OffloadingDate\",\n  \"E-way Bill\": \"EwayBill\",\n  \"LR No.\": \"LRNo\",\n  \"Soft Copy POD Rec\": \"SoftCopyPODRec\",\n  \"Hard Copy POD Rec\": \"HardCopyPODRec\",\n  \"Customer -Sale rate\": \"CustomerSaleRate\",\n  \"Advance to be Paid\": \"AdvanceToBePaid\",\n  \"Advance Rec\": \"AdvanceRec\",\n  \"Advance UTR\": \"AdvanceUTR\",\n  \"Advance Rec-Date\": \"AdvanceRecDate\",\n  \"Balance Pending\": \"BalancePending\",\n  \"Detention Charges\": \"DetentionCharges\",\n  \"Loading/Unloading Charges\": \"LoadingUnloadingCharges\",\n  \"Miscellaneous Charges.\": \"MiscCharges\",\n  \"Processing Charges\": \"ProcessingCharges\",\n  \"Net Balance\": \"NetBalance\",\n  \"Balance Rec Amount\": \"BalanceRecAmount\",\n  \"Balance UTR\": \"BalanceUTR\",\n  \"Balance Rec Date\": \"BalanceRecDate\",\n  \"Remaining Balance\": \"RemainingBalance\",\n  \"Remaining Balance UTR\": \"RemainingBalanceUTR\",\n  \"Remaining Balance Date\": \"RemainingBalanceDate\",\n  \"Supplier Buy Rate\": \"SupplierBuyRate\",\n  \"Supplier Advance Pay\": \"SupplierAdvancePay\",\n  \"Supplier Advance Paid\": \"SupplierAdvancePaid\",\n  \"Supplier Mis Charges\": \"SupplierMisCharges\",\n  \"Supplier Invoice No.\": \"SupplierInvoiceNo\",\n  \"Supplier Advance UTR\": \"SupplierAdvanceUTR\",\n  \"Supplier Advance Pay-Date\": \"SupplierAdvancePayDate\",\n  \"Supplier Balance Pending\": \"SupplierBalancePending\",\n  \"Supplier Balance Paid Amount\": \"SupplierBalancePaidAmount\",\n  \"Supplier Balance Paid UTR\": \"SupplierBalancePaidUTR\",\n  \"Supplier Balance Paid Date\": \"SupplierBalancePaidDate\",\n  \"Remaining Supplier Amount\": \"RemainingSupplierAmount\",\n  \"POD Rec Date\": \"PODRecDate\",\n  \"POD Send to Customer Date\": \"PODSendToCustomerDate\",\n  \"POD Docket No.\": \"PODDocketNo\",\n  \"POD Rec By Customer\": \"PODRecByCustomer\",\n  \"POD Deduction If any\": \"PODDeductionIfAny\",\n  \"Gross Profit\": \"GrossProfit\",\n  \"Bad Debts\": \"BadDebts\",\n  \"Net Profit\": \"NetProfit\",\n  \"UniqueNo\": \"UniqueNo\",\n  \"isCurrent\": \"isCurrent\",\n  \"createdBy\": \"createdBy\",\n  \"createdAt\": \"createdAt\"\n};\n\nconst keyToLabel = Object.fromEntries(Object.entries(labelToKey).map(([k, v]) => [v, k]));\n\n\nconst testConnection = async () => {\n  try {\n    const docRef = await addDoc(collection(db, \"test_connection\"), {\n      message: \"Testing Firestore connection\",\n      timestamp: new Date()\n    });\n    console.log(\"✅ Firestore write succeeded with ID:\", docRef.id);\n    alert(\"✅ Firebase is connected. Test document written!\");\n  } catch (error) {\n    console.error(\"❌ Firebase connection failed:\", error);\n    alert(\"❌ Firebase connection failed: \" + error.message);\n  }\n};\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"UniqueNo\");\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      console.log(\"🔥 Auth State Changed. User:\", currentUser);\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleSave = async () => {\n    try {\n      const batch = records.map(record =>\n        addDoc(collection(db, \"fleet_records\"), {\n          ...record,\n          createdBy: user.email,\n          createdAt: new Date(),\n          isCurrent: true,\n          versionDate: new Date()\n        })\n      );\n      await Promise.all(batch);\n      alert(\"Records saved to Firestore!\");\n    } catch (error) {\n      alert(\"Error saving records: \" + error.message);\n    }\n  };\n\n  const handleSearch = async () => {\n  try {\n    const hq = query(collection(db, \"fleet_records\"), where(searchField, \"==\", searchKey));\n    const hSnapshot = await getDocs(hq);\n    const allVersions = [];\n    const currentOnly = [];\n\n    hSnapshot.forEach((docSnap) => {\n      const row = { id: docSnap.id, ...docSnap.data() };\n      if (row.isCurrent === undefined) row.isCurrent = true;\n\n      const versionTimestamp = row.versionDate?.seconds\n        ? new Date(row.versionDate.seconds * 1000)\n        : null;\n\n      if (\n        startDate &&\n        endDate &&\n        versionTimestamp &&\n        (versionTimestamp < new Date(startDate) || versionTimestamp > new Date(endDate))\n      ) {\n        return;\n      }\n\n      allVersions.push(row);\n      if (row.isCurrent === true) currentOnly.push(row);\n    });\n\n    setRecords(currentOnly);\n    setHistory(allVersions);\n  } catch (error) {\n    alert(\"Search failed: \" + error.message);\n  }\n};\n\n\n  const handleUpdate = async (row) => {\n    try {\n      const { id, ...rest } = row;\n      const cleanData = {};\n      for (const key in rest) {\n        cleanData[key] =\n          typeof rest[key] === \"string\" || typeof rest[key] === \"number\"\n            ? rest[key]\n            : String(rest[key] ?? \"\");\n      }\n\n      await updateDoc(doc(db, \"fleet_records\", id), {\n        isCurrent: false,\n        expiredAt: new Date(),\n        modifiedBy: user.email\n      });\n\n      const newVersion = {\n        ...cleanData,\n        createdAt: new Date(),\n        createdBy: user.email,\n        isCurrent: true,\n        versionDate: new Date()\n      };\n\n      const docRef = await addDoc(collection(db, \"fleet_records\"), newVersion);\n\n      const updatedRecords = records.map((r) =>\n        r.id === id ? { ...newVersion, id: docRef.id } : r\n      );\n      setRecords(updatedRecords);\n      handleSearch();\n\n      alert(\"🆕 SCD Type 2 update saved successfully.\");\n    } catch (error) {\n      alert(\"❌ Update failed: \" + error.message);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteDoc(doc(db, \"fleet_records\", id));\n      setRecords(records.filter((r) => r.id !== id));\n      alert(\"🗑️ Record deleted successfully.\");\n    } catch (error) {\n      alert(\"❌ Delete failed: \" + error.message);\n    }\n  };\n\n  if (!user) return <Auth />;\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Welcome, {user.email}</h2>\n      <button onClick={() => signOut(auth)}>Logout</button>\n      <br />\n      <button onClick={testConnection}>Test Firebase Connection</button>\n      <hr />\n\n      <UploadForm onDataParsed={(data) => setRecords([...records, ...data])} />\n      <ManualEntryForm onAddRow={(row) => setRecords([...records, row])} />\n\n      <hr />\n     \n<h4>Search Existing Records</h4>\n\n<select value={searchField} onChange={(e) => setSearchField(e.target.value)}>\n  <option value=\"UniqueNo\">UniqueNo</option>\n  <option value=\"Broker\">Broker</option>\n</select>\n\n<input\n  type=\"text\"\n  placeholder=\"Search value\"\n  value={searchKey}\n  onChange={(e) => setSearchKey(e.target.value)}\n  style={{ margin: \"0 10px\" }}\n/>\n\n<label>From: </label>\n<input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n\n<label style={{ marginLeft: \"10px\" }}>To: </label>\n<input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n\n<button onClick={handleSearch} style={{ marginLeft: \"10px\" }}>Search</button>\n\n\n      <hr />\n      <h4>Editable Current Records</h4>\n<div className=\"table-scroll-x\">\n  <table>\n    <thead>\n  <tr>\n    {Object.keys(labelToKey).map((label) => (\n      <th key={label}>{label}</th>\n    ))}\n    <th>Action</th>\n  </tr>\n</thead>\n<tbody>\n  {records.map((row, rowIndex) => {\n    if (!row.UniqueNo) {\n      row.UniqueNo = `UNQ-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    }\n\n    const readOnlyFields = [\"UniqueNo\", \"createdAt\", \"createdBy\", \"isCurrent\"];\n\n    return (\n      <tr key={rowIndex}>\n        {Object.entries(labelToKey).map(([label, key]) => (\n          <td key={key}>\n            <input\n              type=\"text\"\n              value={\n                typeof row[key] === \"object\" && row[key]?.seconds\n                  ? new Date(row[key].seconds * 1000).toLocaleString()\n                  : String(row[key] ?? \"\")\n              }\n              onChange={(e) => {\n                const updated = [...records];\n                updated[rowIndex][key] = e.target.value;\n                setRecords(updated);\n              }}\n              style={{ width: \"120px\" }}\n              readOnly={readOnlyFields.includes(key)}\n            />\n          </td>\n        ))}\n        <td>\n          <button onClick={() => handleUpdate(row)}>Save</button>\n          <button\n            onClick={() => {\n              if (window.confirm(\"Are you sure you want to delete this record?\")) {\n                handleDelete(row.id);\n              }\n            }}\n            style={{ marginLeft: \"8px\", color: \"red\" }}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  })}\n</tbody>\n\n  </table>\n</div>\n\n\n\n      {history.length > 0 && (\n  <>\n    <hr />\n    <h4>🔍 Full Version History</h4>\n    <button onClick={handleExport}>📄 Export to Excel</button>\n\n\n    {/* ✅ Dynamically build all unique columns across all rows */}\n    {(() => {\n      const allKeys = new Set();\n      history.forEach(row => Object.keys(row).forEach(k => allKeys.add(k)));\n      const columnList = Array.from(allKeys);\n\n      return (\n        <div className=\"table-scroll-x\">\n  <table>\n    <thead>\n      <tr>\n        {columnList.map((col) => (\n          <th key={col}>{col}</th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {[...history]\n        .sort((a, b) => {\n          if (a.isCurrent) return -1;\n          if (b.isCurrent) return 1;\n          const aTime = a.expiredAt?.seconds || 0;\n          const bTime = b.expiredAt?.seconds || 0;\n          return bTime - aTime;\n        })\n        .map((row, i) => (\n          <tr key={i}>\n            {columnList.map((col, j) => (\n              <td key={j}>\n                {typeof row[col] === 'object' && row[col]?.seconds\n                  ? new Date(row[col].seconds * 1000).toLocaleString()\n                  : String(row[col] ?? \"\")}\n              </td>\n            ))}\n          </tr>\n        ))}\n    </tbody>\n  </table>\n</div>\n      );\n    })()}\n  </>\n)}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}