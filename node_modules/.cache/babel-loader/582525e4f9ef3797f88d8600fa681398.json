{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\components\\\\ManualEntryForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, updateDoc, doc, runTransaction, Timestamp, getDoc } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase\";\nconst fixedFieldsInitial = {\n  date: \"\",\n  months: \"\",\n  origin: \"\",\n  destination: \"\",\n  customer: \"\",\n  customerType: \"\",\n  vehicleNo: \"\",\n  vendor: \"\",\n  salesRate: \"\",\n  buyRate: \"\"\n};\nconst customerFields = {\n  toBeAdvance: \"\",\n  advanceReceived: \"\",\n  advDeviation: \"\",\n  advanceRecDate: \"\",\n  validatedAdvanceUTRDescription: \"\",\n  validatedAdvanceAmount: \"\",\n  balance: \"\",\n  processingCharges: \"\",\n  inwardMisCharges: \"\",\n  outwardMisCharges: \"\",\n  balanceReceived: \"\",\n  remainingBalance: \"\",\n  balanceRecDate: \"\",\n  validatedBalanceUTR: \"\",\n  validatedBalanceUTRAmount: \"\"\n};\nconst vendorFields = {\n  vendorOutwardPayment: \"\",\n  paidAmount: \"\",\n  balancePending: \"\",\n  vendorRemark: \"\"\n};\nconst podFields = {\n  podVendorDate: \"\",\n  podSendToCustomerDate: \"\",\n  docNo: \"\",\n  podCustomerRec: \"\",\n  today: \"\",\n  balanceOverdueDays: \"\",\n  toBeCollectedAmount: \"\"\n};\nconst flattenObject = (obj, prefix = \"\") => {\n  let result = {};\n  for (const key in obj) {\n    const value = obj[key];\n    const fullKey = prefix ? `${prefix}.${key}` : key;\n    if (value && typeof value === \"object\" && !value.seconds) {\n      Object.assign(result, flattenObject(value, fullKey));\n    } else {\n      result[fullKey] = value;\n    }\n  }\n  return result;\n};\nconst ManualEntryForm = ({\n  onAddRow\n}) => {\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\n  const [customerData, setCustomerData] = useState(customerFields);\n  const [vendorData, setVendorData] = useState(vendorFields);\n  const [podData, setPodData] = useState(podFields);\n  const [indentNumber, setIndentNumber] = useState(null);\n  const [docId, setDocId] = useState(null);\n  const [showCustomer, setShowCustomer] = useState(false);\n  const [showVendor, setShowVendor] = useState(false);\n  const [showPod, setShowPod] = useState(false);\n  const [customerSaved, setCustomerSaved] = useState(false);\n  const [vendorSaved, setVendorSaved] = useState(false);\n  const [podSaved, setPodSaved] = useState(false);\n  useEffect(() => {\n    const storedIndentNo = localStorage.getItem(\"inProgressIndentNumber\");\n    const storedFixed = localStorage.getItem(\"fixedFields\");\n    const storedCustomer = localStorage.getItem(\"customerFields\");\n    const storedVendor = localStorage.getItem(\"vendorFields\");\n    const storedPod = localStorage.getItem(\"podFields\");\n    const storedDocId = localStorage.getItem(\"docId\");\n    if (storedDocId) setDocId(storedDocId);\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\n    if (storedPod) setPodData(JSON.parse(storedPod));\n  }, []);\n  const convertDateFields = (data, allowedKeys = []) => {\n    const result = {};\n    Object.entries(data).forEach(([key, value]) => {\n      if (allowedKeys.includes(key) && value) {\n        const parsed = new Date(value);\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\n      } else {\n        result[key] = value;\n      }\n    });\n    return result;\n  };\n  const handleFixedChange = e => {\n    const updated = {\n      ...fixedFields,\n      [e.target.name]: e.target.value\n    };\n    setFixedFields(updated);\n    localStorage.setItem(\"fixedFields\", JSON.stringify(updated)); // ✅ Save\n  };\n  const handleSectionChange = (e, section) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (section === \"customer\") {\n      const updated = {\n        ...customerData,\n        [name]: value\n      };\n      setCustomerData(updated);\n      localStorage.setItem(\"customerFields\", JSON.stringify(updated));\n    }\n    if (section === \"vendor\") {\n      const updated = {\n        ...vendorData,\n        [name]: value\n      };\n      setVendorData(updated);\n      localStorage.setItem(\"vendorFields\", JSON.stringify(updated));\n    }\n    if (section === \"pod\") {\n      const updated = {\n        ...podData,\n        [name]: value\n      };\n      setPodData(updated);\n      localStorage.setItem(\"podFields\", JSON.stringify(updated));\n    }\n  };\n  const getNextIndentNumber = async () => {\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\n    const newIndentNo = await runTransaction(db, async transaction => {\n      const docSnap = await transaction.get(counterRef);\n      if (!docSnap.exists()) throw new Error(\"Counter doc missing\");\n      const current = docSnap.data().nextFleetNo || 1;\n      transaction.update(counterRef, {\n        nextFleetNo: current + 1\n      });\n      return current;\n    });\n    return newIndentNo;\n  };\n  const handleFixedSave = async () => {\n    try {\n      const user = auth.currentUser;\n      const indentNo = await getNextIndentNumber();\n      const enrichedData = {\n        indentNumber: indentNo,\n        ...convertDateFields(fixedFields, [\"date\"]),\n        createdAt: new Date(),\n        createdBy: (user === null || user === void 0 ? void 0 : user.email) || \"anonymous\",\n        isCurrent: true,\n        versionDate: new Date(),\n        updateDescription: \"\"\n      };\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\n      setIndentNumber(indentNo);\n      setDocId(docRef.id);\n      localStorage.setItem(\"docId\", docRef.id);\n      localStorage.setItem(\"inProgressIndentNumber\", indentNo);\n      await navigator.clipboard.writeText(String(indentNo));\n      alert(`✅ Fixed fields saved. Indent Number copied: ${indentNo}`);\n    } catch (err) {\n      alert(\"❌ Error saving fixed fields: \" + err.message);\n    }\n  };\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\n    if (!docId) {\n      alert(\"⚠️ Save fixed fields first.\");\n      return;\n    }\n    try {\n      const docRef = doc(db, \"fleet_records\", docId);\n      await updateDoc(docRef, {\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\n      });\n      if (sectionName === \"customerMaster\") setCustomerSaved(true);\n      if (sectionName === \"vendorMaster\") setVendorSaved(true);\n      if (sectionName === \"podMaster\") setPodSaved(true);\n      alert(`✅ ${sectionName} saved.`);\n    } catch (err) {\n      alert(\"❌ Save error: \" + err.message);\n    }\n  };\n  const handleFinalSubmit = async () => {\n    if (!docId) return alert(\"Fleet data not ready.\");\n\n    // Save any unsaved sections first\n    if (showCustomer && !customerSaved) {\n      await saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]);\n    }\n    if (showVendor && !vendorSaved) {\n      await saveSection(\"vendorMaster\", vendorData);\n    }\n    if (showPod && !podSaved) {\n      await saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]);\n    }\n    const docSnap = await getDoc(doc(db, \"fleet_records\", docId));\n    if (!docSnap.exists()) return alert(\"Data not found.\");\n    const data = {\n      id: docSnap.id,\n      ...docSnap.data()\n    };\n    onAddRow(flattenObject(data), true);\n\n    // Reset all state\n    setFixedFields(fixedFieldsInitial);\n    setCustomerData(customerFields);\n    setVendorData(vendorFields);\n    setPodData(podFields);\n    setIndentNumber(null);\n    setDocId(null);\n    setShowCustomer(false);\n    setShowVendor(false);\n    setShowPod(false);\n    setCustomerSaved(false);\n    setVendorSaved(false);\n    setPodSaved(false);\n    localStorage.removeItem(\"fixedFields\");\n    localStorage.removeItem(\"customerFields\");\n    localStorage.removeItem(\"vendorFields\");\n    localStorage.removeItem(\"podFields\");\n    localStorage.removeItem(\"inProgressIndentNumber\");\n    localStorage.removeItem(\"docId\");\n    alert(\"✅ Record submitted and ready in editable table.\");\n  };\n  const handleNewRecord = () => {\n    if (!window.confirm(\"Start a new entry? Unsaved data will be lost.\")) return;\n    setFixedFields(fixedFieldsInitial);\n    setCustomerData(customerFields);\n    setVendorData(vendorFields);\n    setPodData(podFields);\n    setIndentNumber(null);\n    setDocId(null);\n    setShowCustomer(false);\n    setShowVendor(false);\n    setShowPod(false);\n    setCustomerSaved(false);\n    setVendorSaved(false);\n    setPodSaved(false);\n    localStorage.removeItem(\"fixedFields\");\n    localStorage.removeItem(\"customerFields\");\n    localStorage.removeItem(\"vendorFields\");\n    localStorage.removeItem(\"podFields\");\n    localStorage.removeItem(\"inProgressIndentNumber\");\n    localStorage.removeItem(\"docId\");\n    alert(\"🆕 Ready to start a new record.\");\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \"Step 1: Fixed Fields\"), Object.keys(fixedFieldsInitial).map(key => {\n    const isDate = key.toLowerCase().includes(\"date\");\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key === \"months\" ? \"months (e.g. Jul-2025)\" : key;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      key: key,\n      name: key,\n      placeholder: label,\n      value: fixedFields[key],\n      onChange: handleFixedChange,\n      disabled: !!indentNumber,\n      style: {\n        margin: 4,\n        width: \"220px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    });\n  }), !indentNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFixedSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCBE Save & Continue\"), indentNumber && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }, \"\\u2705 Saved. Indent No: \", indentNumber), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, \"Step 2: Select Master Sections\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showCustomer,\n    onChange: () => setShowCustomer(!showCustomer),\n    disabled: customerSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }\n  }), \" Customer Master\"), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showVendor,\n    onChange: () => setShowVendor(!showVendor),\n    disabled: vendorSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 13\n    }\n  }), \" Vendor Master\"), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showPod,\n    onChange: () => setShowPod(!showPod),\n    disabled: podSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }\n  }), \" POD Master\"), showCustomer && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, \"Customer Master\"), Object.keys(customerFields).map(key => {\n    const isDate = [\"advanceRecDate\", \"balanceRecDate\"].includes(key);\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      key: key,\n      name: key,\n      placeholder: label,\n      value: customerData[key],\n      onChange: e => handleSectionChange(e, \"customer\"),\n      style: {\n        margin: 4,\n        width: \"220px\"\n      },\n      disabled: customerSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    });\n  }), !customerSaved && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }\n  }, \"Save Customer\")), showVendor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, \"Vendor Master\"), Object.keys(vendorFields).map(key => /*#__PURE__*/React.createElement(\"input\", {\n    key: key,\n    name: key,\n    placeholder: key,\n    value: vendorData[key],\n    onChange: e => handleSectionChange(e, \"vendor\"),\n    style: {\n      margin: 4,\n      width: \"220px\"\n    },\n    disabled: vendorSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }\n  })), !vendorSaved && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveSection(\"vendorMaster\", vendorData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }\n  }, \"Save Vendor\")), showPod && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 15\n    }\n  }, \"POD Master\"), Object.keys(podFields).map(key => {\n    const isDate = [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"].includes(key);\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key;\n    return /*#__PURE__*/React.createElement(\"input\", {\n      key: key,\n      name: key,\n      placeholder: label,\n      value: podData[key],\n      onChange: e => handleSectionChange(e, \"pod\"),\n      style: {\n        margin: 4,\n        width: \"220px\"\n      },\n      disabled: podSaved,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    });\n  }), !podSaved && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  }, \"Save POD\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFinalSubmit,\n    style: {\n      backgroundColor: \"#4caf50\",\n      marginRight: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 3\n    }\n  }, \"\\u2705 Submit Record\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNewRecord,\n    style: {\n      backgroundColor: \"#2196f3\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 3\n    }\n  }, \"\\u2795 Add New Record\"))));\n};\nexport default ManualEntryForm;","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","updateDoc","doc","runTransaction","Timestamp","getDoc","db","auth","fixedFieldsInitial","date","months","origin","destination","customer","customerType","vehicleNo","vendor","salesRate","buyRate","customerFields","toBeAdvance","advanceReceived","advDeviation","advanceRecDate","validatedAdvanceUTRDescription","validatedAdvanceAmount","balance","processingCharges","inwardMisCharges","outwardMisCharges","balanceReceived","remainingBalance","balanceRecDate","validatedBalanceUTR","validatedBalanceUTRAmount","vendorFields","vendorOutwardPayment","paidAmount","balancePending","vendorRemark","podFields","podVendorDate","podSendToCustomerDate","docNo","podCustomerRec","today","balanceOverdueDays","toBeCollectedAmount","flattenObject","obj","prefix","result","key","value","fullKey","seconds","Object","assign","ManualEntryForm","onAddRow","fixedFields","setFixedFields","customerData","setCustomerData","vendorData","setVendorData","podData","setPodData","indentNumber","setIndentNumber","docId","setDocId","showCustomer","setShowCustomer","showVendor","setShowVendor","showPod","setShowPod","customerSaved","setCustomerSaved","vendorSaved","setVendorSaved","podSaved","setPodSaved","storedIndentNo","localStorage","getItem","storedFixed","storedCustomer","storedVendor","storedPod","storedDocId","Number","JSON","parse","convertDateFields","data","allowedKeys","entries","forEach","includes","parsed","Date","isNaN","fromDate","handleFixedChange","e","updated","target","name","setItem","stringify","handleSectionChange","section","getNextIndentNumber","counterRef","newIndentNo","transaction","docSnap","get","exists","Error","current","nextFleetNo","update","handleFixedSave","user","currentUser","indentNo","enrichedData","createdAt","createdBy","email","isCurrent","versionDate","updateDescription","docRef","id","navigator","clipboard","writeText","String","alert","err","message","saveSection","sectionName","sectionData","dateFields","handleFinalSubmit","removeItem","handleNewRecord","window","confirm","createElement","style","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","keys","map","isDate","toLowerCase","label","placeholder","onChange","disabled","margin","width","onClick","Fragment","color","type","checked","marginLeft","backgroundColor","marginRight"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/ManualEntryForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  updateDoc,\r\n  doc,\r\n  runTransaction,\r\n  Timestamp,\r\n  getDoc\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase\";\r\n\r\n\r\n\r\n\r\n\r\nconst fixedFieldsInitial = {\r\n  date: \"\",\r\n  months: \"\",\r\n  origin: \"\",\r\n  destination: \"\",\r\n  customer: \"\",\r\n  customerType: \"\",\r\n  vehicleNo: \"\",\r\n  vendor: \"\",\r\n  salesRate: \"\",\r\n  buyRate: \"\"\r\n};\r\n\r\nconst customerFields = {\r\n  toBeAdvance: \"\",\r\n  advanceReceived: \"\",\r\n  advDeviation: \"\",\r\n  advanceRecDate: \"\",\r\n  validatedAdvanceUTRDescription: \"\",\r\n  validatedAdvanceAmount: \"\",\r\n  balance: \"\",\r\n  processingCharges: \"\",\r\n  inwardMisCharges: \"\",\r\n  outwardMisCharges: \"\",\r\n  balanceReceived: \"\",\r\n  remainingBalance: \"\",\r\n  balanceRecDate: \"\",\r\n  validatedBalanceUTR: \"\",\r\n  validatedBalanceUTRAmount: \"\"\r\n};\r\n\r\nconst vendorFields = {\r\n  vendorOutwardPayment: \"\",\r\n  paidAmount: \"\",\r\n  balancePending: \"\",\r\n  vendorRemark: \"\"\r\n};\r\n\r\nconst podFields = {\r\n  podVendorDate: \"\",\r\n  podSendToCustomerDate: \"\",\r\n  docNo: \"\",\r\n  podCustomerRec: \"\",\r\n  today: \"\",\r\n  balanceOverdueDays: \"\",\r\n  toBeCollectedAmount: \"\"\r\n};\r\nconst flattenObject = (obj, prefix = \"\") => {\r\n  let result = {};\r\n  for (const key in obj) {\r\n    const value = obj[key];\r\n    const fullKey = prefix ? `${prefix}.${key}` : key;\r\n    if (value && typeof value === \"object\" && !value.seconds) {\r\n      Object.assign(result, flattenObject(value, fullKey));\r\n    } else {\r\n      result[fullKey] = value;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst ManualEntryForm = ({ onAddRow }) => {\r\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\r\n  const [customerData, setCustomerData] = useState(customerFields);\r\n  const [vendorData, setVendorData] = useState(vendorFields);\r\n  const [podData, setPodData] = useState(podFields);\r\n  const [indentNumber, setIndentNumber] = useState(null);\r\n  const [docId, setDocId] = useState(null);\r\n\r\n  const [showCustomer, setShowCustomer] = useState(false);\r\n  const [showVendor, setShowVendor] = useState(false);\r\n  const [showPod, setShowPod] = useState(false);\r\n\r\n  const [customerSaved, setCustomerSaved] = useState(false);\r\n  const [vendorSaved, setVendorSaved] = useState(false);\r\n  const [podSaved, setPodSaved] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const storedIndentNo = localStorage.getItem(\"inProgressIndentNumber\");\r\n    const storedFixed = localStorage.getItem(\"fixedFields\");\r\n    const storedCustomer = localStorage.getItem(\"customerFields\");\r\n    const storedVendor = localStorage.getItem(\"vendorFields\");\r\n    const storedPod = localStorage.getItem(\"podFields\");\r\n    const storedDocId = localStorage.getItem(\"docId\");\r\n    \r\n    \r\n    if (storedDocId) setDocId(storedDocId);\r\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\r\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\r\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\r\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\r\n    if (storedPod) setPodData(JSON.parse(storedPod));\r\n  }, []);\r\n\r\n  const convertDateFields = (data, allowedKeys = []) => {\r\n    const result = {};\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (allowedKeys.includes(key) && value) {\r\n        const parsed = new Date(value);\r\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\r\n      } else {\r\n        result[key] = value;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handleFixedChange = (e) => {\r\n  const updated = { ...fixedFields, [e.target.name]: e.target.value };\r\n  setFixedFields(updated);\r\n  localStorage.setItem(\"fixedFields\", JSON.stringify(updated));  // ✅ Save\r\n};\r\n\r\n\r\n  const handleSectionChange = (e, section) => {\r\n  const { name, value } = e.target;\r\n  if (section === \"customer\") {\r\n    const updated = { ...customerData, [name]: value };\r\n    setCustomerData(updated);\r\n    localStorage.setItem(\"customerFields\", JSON.stringify(updated));\r\n  }\r\n  if (section === \"vendor\") {\r\n    const updated = { ...vendorData, [name]: value };\r\n    setVendorData(updated);\r\n    localStorage.setItem(\"vendorFields\", JSON.stringify(updated));\r\n  }\r\n  if (section === \"pod\") {\r\n    const updated = { ...podData, [name]: value };\r\n    setPodData(updated);\r\n    localStorage.setItem(\"podFields\", JSON.stringify(updated));\r\n  }\r\n};\r\n\r\n\r\n  const getNextIndentNumber = async () => {\r\n  const counterRef = doc(db, \"Counters\", \"fleet_counter\");\r\n  const newIndentNo = await runTransaction(db, async (transaction) => {\r\n    const docSnap = await transaction.get(counterRef);\r\n    if (!docSnap.exists()) throw new Error(\"Counter doc missing\");\r\n    const current = docSnap.data().nextFleetNo || 1;\r\n    transaction.update(counterRef, { nextFleetNo: current + 1 });\r\n    return current;\r\n  });\r\n  return newIndentNo;\r\n};\r\n\r\n\r\n  const handleFixedSave = async () => {\r\n    try {\r\n      const user = auth.currentUser;\r\n      const indentNo  = await getNextIndentNumber();\r\n      const enrichedData = {\r\n        indentNumber: indentNo,\r\n        ...convertDateFields(fixedFields, [\"date\"]),\r\n        createdAt: new Date(),\r\n        createdBy: user?.email || \"anonymous\",\r\n        isCurrent: true,\r\n        versionDate: new Date(),\r\n        updateDescription: \"\"\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\r\n      setIndentNumber(indentNo);\r\n      setDocId(docRef.id);\r\n      localStorage.setItem(\"docId\", docRef.id);\r\n      localStorage.setItem(\"inProgressIndentNumber\", indentNo);\r\n      await navigator.clipboard.writeText(String(indentNo));\r\n      alert(`✅ Fixed fields saved. Indent Number copied: ${indentNo}`);\r\n    } catch (err) {\r\n      alert(\"❌ Error saving fixed fields: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\r\n    if (!docId) {\r\n      alert(\"⚠️ Save fixed fields first.\");\r\n      return;\r\n    }\r\n    try {\r\n      const docRef = doc(db, \"fleet_records\", docId);\r\n      await updateDoc(docRef, {\r\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\r\n      });\r\n      if (sectionName === \"customerMaster\") setCustomerSaved(true);\r\n      if (sectionName === \"vendorMaster\") setVendorSaved(true);\r\n      if (sectionName === \"podMaster\") setPodSaved(true);\r\n      alert(`✅ ${sectionName} saved.`);\r\n    } catch (err) {\r\n      alert(\"❌ Save error: \" + err.message);\r\n    }\r\n  };\r\n\r\n const handleFinalSubmit = async () => {\r\n  if (!docId) return alert(\"Fleet data not ready.\");\r\n\r\n  // Save any unsaved sections first\r\n  if (showCustomer && !customerSaved) {\r\n    await saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]);\r\n  }\r\n  if (showVendor && !vendorSaved) {\r\n    await saveSection(\"vendorMaster\", vendorData);\r\n  }\r\n  if (showPod && !podSaved) {\r\n    await saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]);\r\n  }\r\n\r\n  const docSnap = await getDoc(doc(db, \"fleet_records\", docId));\r\n  if (!docSnap.exists()) return alert(\"Data not found.\");\r\n  const data = { id: docSnap.id, ...docSnap.data() };\r\n  onAddRow(flattenObject(data), true);\r\n\r\n\r\n  // Reset all state\r\n  setFixedFields(fixedFieldsInitial);\r\n  setCustomerData(customerFields);\r\n  setVendorData(vendorFields);\r\n  setPodData(podFields);\r\n  setIndentNumber(null);\r\n  setDocId(null);\r\n  setShowCustomer(false);\r\n  setShowVendor(false);\r\n  setShowPod(false);\r\n  setCustomerSaved(false);\r\n  setVendorSaved(false);\r\n  setPodSaved(false);\r\n\r\n  localStorage.removeItem(\"fixedFields\");\r\n  localStorage.removeItem(\"customerFields\");\r\n  localStorage.removeItem(\"vendorFields\");\r\n  localStorage.removeItem(\"podFields\");\r\n  localStorage.removeItem(\"inProgressIndentNumber\");\r\n  localStorage.removeItem(\"docId\");\r\n\r\n\r\n\r\n  alert(\"✅ Record submitted and ready in editable table.\");\r\n};\r\n\r\nconst handleNewRecord = () => {\r\n  if (!window.confirm(\"Start a new entry? Unsaved data will be lost.\")) return;\r\n\r\n  setFixedFields(fixedFieldsInitial);\r\n  setCustomerData(customerFields);\r\n  setVendorData(vendorFields);\r\n  setPodData(podFields);\r\n  setIndentNumber(null);\r\n  setDocId(null);\r\n  setShowCustomer(false);\r\n  setShowVendor(false);\r\n  setShowPod(false);\r\n  setCustomerSaved(false);\r\n  setVendorSaved(false);\r\n  setPodSaved(false);\r\n\r\n  localStorage.removeItem(\"fixedFields\");\r\n  localStorage.removeItem(\"customerFields\");\r\n  localStorage.removeItem(\"vendorFields\");\r\n  localStorage.removeItem(\"podFields\");\r\n  localStorage.removeItem(\"inProgressIndentNumber\");\r\n  localStorage.removeItem(\"docId\");\r\n\r\n  alert(\"🆕 Ready to start a new record.\");\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h4>Step 1: Fixed Fields</h4>\r\n      {Object.keys(fixedFieldsInitial).map((key) => {\r\n        const isDate = key.toLowerCase().includes(\"date\");\r\n        const label = isDate ? `${key} (dd/mm/yyyy)` : key === \"months\" ? \"months (e.g. Jul-2025)\" : key;\r\n        return (\r\n          <input\r\n            key={key}\r\n            name={key}\r\n            placeholder={label}\r\n            value={fixedFields[key]}\r\n            onChange={handleFixedChange}\r\n            disabled={!!indentNumber}\r\n            style={{ margin: 4, width: \"220px\" }}\r\n          />\r\n        );\r\n      })}\r\n      {!indentNumber && (\r\n        <button onClick={handleFixedSave}>💾 Save & Continue</button>\r\n      )}\r\n      {indentNumber  && (\r\n        <>\r\n          <p style={{ color: \"green\" }}>✅ Saved. Indent No: {indentNumber}</p>\r\n\r\n          <h4>Step 2: Select Master Sections</h4>\r\n          <label>\r\n            <input type=\"checkbox\" checked={showCustomer} onChange={() => setShowCustomer(!showCustomer)} disabled={customerSaved} /> Customer Master\r\n          </label>\r\n          <label style={{ marginLeft: 15 }}>\r\n            <input type=\"checkbox\" checked={showVendor} onChange={() => setShowVendor(!showVendor)} disabled={vendorSaved} /> Vendor Master\r\n          </label>\r\n          <label style={{ marginLeft: 15 }}>\r\n            <input type=\"checkbox\" checked={showPod} onChange={() => setShowPod(!showPod)} disabled={podSaved} /> POD Master\r\n          </label>\r\n\r\n          {showCustomer && (\r\n            <>\r\n              <h5>Customer Master</h5>\r\n              {Object.keys(customerFields).map((key) => {\r\n                const isDate = [\"advanceRecDate\", \"balanceRecDate\"].includes(key);\r\n                const label = isDate ? `${key} (dd/mm/yyyy)` : key;\r\n                return (\r\n                  <input\r\n                    key={key}\r\n                    name={key}\r\n                    placeholder={label}\r\n                    value={customerData[key]}\r\n                    onChange={(e) => handleSectionChange(e, \"customer\")}\r\n                    style={{ margin: 4, width: \"220px\" }}\r\n                    disabled={customerSaved}\r\n                  />\r\n                );\r\n              })}\r\n              {!customerSaved && (\r\n                <button onClick={() => saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"])}>Save Customer</button>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {showVendor && (\r\n            <>\r\n              <h5>Vendor Master</h5>\r\n              {Object.keys(vendorFields).map((key) => (\r\n                <input\r\n                  key={key}\r\n                  name={key}\r\n                  placeholder={key}\r\n                  value={vendorData[key]}\r\n                  onChange={(e) => handleSectionChange(e, \"vendor\")}\r\n                  style={{ margin: 4, width: \"220px\" }}\r\n                  disabled={vendorSaved}\r\n                />\r\n              ))}\r\n              {!vendorSaved && (\r\n                <button onClick={() => saveSection(\"vendorMaster\", vendorData)}>Save Vendor</button>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {showPod && (\r\n            <>\r\n              <h5>POD Master</h5>\r\n              {Object.keys(podFields).map((key) => {\r\n                const isDate = [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"].includes(key);\r\n                const label = isDate ? `${key} (dd/mm/yyyy)` : key;\r\n                return (\r\n                  <input\r\n                    key={key}\r\n                    name={key}\r\n                    placeholder={label}\r\n                    value={podData[key]}\r\n                    onChange={(e) => handleSectionChange(e, \"pod\")}\r\n                    style={{ margin: 4, width: \"220px\" }}\r\n                    disabled={podSaved}\r\n                  />\r\n                );\r\n              })}\r\n              {!podSaved && (\r\n                <button onClick={() => saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"])}>Save POD</button>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          <br />\r\n          <div style={{ marginTop: 10 }}>\r\n  <button onClick={handleFinalSubmit} style={{ backgroundColor: \"#4caf50\", marginRight: 10 }}>\r\n    ✅ Submit Record\r\n  </button>\r\n\r\n  <button onClick={handleNewRecord} style={{ backgroundColor: \"#2196f3\" }}>\r\n    ➕ Add New Record\r\n  </button>\r\n</div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}