{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\components\\\\ManualEntryForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { collection, addDoc, updateDoc, doc, runTransaction, Timestamp, getDoc } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase\";\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { confirmAlert } from 'react-confirm-alert';\nconst fixedFieldsInitial = {\n  date: \"\",\n  months: \"\",\n  origin: \"\",\n  destination: \"\",\n  customer: \"\",\n  customerType: \"\",\n  vehicleNo: \"\",\n  vendor: \"\",\n  salesRate: \"\",\n  buyRate: \"\"\n};\nconst customerFields = {\n  toBeAdvance: \"\",\n  advanceReceived: \"\",\n  advDeviation: \"\",\n  advanceRecDate: \"\",\n  validatedAdvanceUTRDescription: \"\",\n  validatedAdvanceAmount: \"\",\n  balance: \"\",\n  processingCharges: \"\",\n  inwardMisCharges: \"\",\n  outwardMisCharges: \"\",\n  balanceReceived: \"\",\n  remainingBalance: \"\",\n  balanceRecDate: \"\",\n  validatedBalanceUTR: \"\",\n  validatedBalanceUTRAmount: \"\"\n};\nconst vendorFields = {\n  vendorOutwardPayment: \"\",\n  paidAmount: \"\",\n  balancePending: \"\",\n  vendorRemark: \"\"\n};\nconst podFields = {\n  podVendorDate: \"\",\n  podSendToCustomerDate: \"\",\n  docNo: \"\",\n  podCustomerRec: \"\",\n  today: \"\",\n  balanceOverdueDays: \"\",\n  toBeCollectedAmount: \"\"\n};\nconst flattenObject = (obj, prefix = \"\") => {\n  let result = {};\n  for (const key in obj) {\n    const value = obj[key];\n    const fullKey = prefix ? `${prefix}.${key}` : key;\n    if (value && typeof value === \"object\" && !value.seconds) {\n      Object.assign(result, flattenObject(value, fullKey));\n    } else {\n      result[fullKey] = value;\n    }\n  }\n  return result;\n};\nconst ManualEntryForm = ({\n  onAddRow\n}) => {\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\n  const [customerData, setCustomerData] = useState(customerFields);\n  const [vendorData, setVendorData] = useState(vendorFields);\n  const [podData, setPodData] = useState(podFields);\n  const [indentNumber, setIndentNumber] = useState(null);\n  const [docId, setDocId] = useState(null);\n  const [showCustomer, setShowCustomer] = useState(false);\n  const [showVendor, setShowVendor] = useState(false);\n  const [showPod, setShowPod] = useState(false);\n  const [customerSaved, setCustomerSaved] = useState(false);\n  const [vendorSaved, setVendorSaved] = useState(false);\n  const [podSaved, setPodSaved] = useState(false);\n  useEffect(() => {\n    const storedIndentNo = localStorage.getItem(\"inProgressIndentNumber\");\n    const storedFixed = localStorage.getItem(\"fixedFields\");\n    const storedCustomer = localStorage.getItem(\"customerFields\");\n    const storedVendor = localStorage.getItem(\"vendorFields\");\n    const storedPod = localStorage.getItem(\"podFields\");\n    const storedDocId = localStorage.getItem(\"docId\");\n    if (storedDocId) setDocId(storedDocId);\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\n    if (storedPod) setPodData(JSON.parse(storedPod));\n  }, []);\n  const formatLabel = key => {\n    return key.replace(/([a-z])([A-Z])/g, \"$1 $2\") // add space before uppercase\n    .replace(/_/g, \" \") // replace underscore with space\n    .replace(/^./, str => str.toUpperCase()); // capitalize first letter\n  };\n  const resetAll = () => {\n    setFixedFields(fixedFieldsInitial);\n    setCustomerData(customerFields);\n    setVendorData(vendorFields);\n    setPodData(podFields);\n    setIndentNumber(null);\n    setDocId(null);\n    setShowCustomer(false);\n    setShowVendor(false);\n    setShowPod(false);\n    setCustomerSaved(false);\n    setVendorSaved(false);\n    setPodSaved(false);\n    localStorage.removeItem(\"fixedFields\");\n    localStorage.removeItem(\"customerFields\");\n    localStorage.removeItem(\"vendorFields\");\n    localStorage.removeItem(\"podFields\");\n    localStorage.removeItem(\"inProgressIndentNumber\");\n    localStorage.removeItem(\"docId\");\n  };\n  const convertDateFields = (data, allowedKeys = []) => {\n    const result = {};\n    Object.entries(data).forEach(([key, value]) => {\n      if (allowedKeys.includes(key) && value) {\n        const parsed = new Date(value);\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\n      } else {\n        result[key] = value;\n      }\n    });\n    return result;\n  };\n  const handleFixedChange = e => {\n    const updated = {\n      ...fixedFields,\n      [e.target.name]: e.target.value\n    };\n    setFixedFields(updated);\n    localStorage.setItem(\"fixedFields\", JSON.stringify(updated)); // ✅ Save\n  };\n  const handleSectionChange = (e, section) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (section === \"customer\") {\n      const updated = {\n        ...customerData,\n        [name]: value\n      };\n      setCustomerData(updated);\n      localStorage.setItem(\"customerFields\", JSON.stringify(updated));\n    }\n    if (section === \"vendor\") {\n      const updated = {\n        ...vendorData,\n        [name]: value\n      };\n      setVendorData(updated);\n      localStorage.setItem(\"vendorFields\", JSON.stringify(updated));\n    }\n    if (section === \"pod\") {\n      const updated = {\n        ...podData,\n        [name]: value\n      };\n      setPodData(updated);\n      localStorage.setItem(\"podFields\", JSON.stringify(updated));\n    }\n  };\n  const getNextIndentNumber = async () => {\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\n    const newIndentNo = await runTransaction(db, async transaction => {\n      const docSnap = await transaction.get(counterRef);\n      if (!docSnap.exists()) throw new Error(\"Counter doc missing\");\n      const current = docSnap.data().nextFleetNo || 1;\n      transaction.update(counterRef, {\n        nextFleetNo: current + 1\n      });\n      return current;\n    });\n    return newIndentNo;\n  };\n  const handleFixedSave = async () => {\n    const hasAnyValue = Object.values(fixedFields).some(val => String(val !== null && val !== void 0 ? val : \"\").trim() !== \"\");\n    if (!hasAnyValue) {\n      confirmAlert({\n        title: 'Validation Error',\n        message: '⚠️ Please fill at least one field before continuing.',\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n      return;\n    }\n    try {\n      const user = auth.currentUser;\n      const indentNo = await getNextIndentNumber();\n      const enrichedData = {\n        indentNumber: indentNo,\n        ...convertDateFields(fixedFields, [\"date\"]),\n        createdAt: new Date(),\n        createdBy: (user === null || user === void 0 ? void 0 : user.email) || \"anonymous\",\n        isCurrent: true,\n        versionDate: new Date(),\n        updateDescription: \"\"\n      };\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\n      setIndentNumber(indentNo);\n      setDocId(docRef.id);\n      localStorage.setItem(\"docId\", docRef.id);\n      localStorage.setItem(\"inProgressIndentNumber\", indentNo);\n      await navigator.clipboard.writeText(String(indentNo));\n      confirmAlert({\n        title: 'Success',\n        message: `✅ Fixed fields saved. Indent Number copied: ${indentNo}`,\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n    } catch (err) {\n      alert(\"❌ Error saving fixed fields: \" + err.message);\n    }\n  };\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\n    if (!docId) {\n      confirmAlert({\n        title: 'Missing Info',\n        message: '⚠️ Save fixed fields first.',\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n      return;\n    }\n    try {\n      const docRef = doc(db, \"fleet_records\", docId);\n      await updateDoc(docRef, {\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\n      });\n      if (sectionName === \"customerMaster\") setCustomerSaved(true);\n      if (sectionName === \"vendorMaster\") setVendorSaved(true);\n      if (sectionName === \"podMaster\") setPodSaved(true);\n      confirmAlert({\n        title: 'Saved',\n        message: `✅ ${sectionName} saved.`,\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n    } catch (err) {\n      confirmAlert({\n        title: 'Error',\n        message: \"❌ Save error: \" + err.message,\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n    }\n  };\n  const handleFinalSubmit = async () => {\n    if (!docId) {\n      confirmAlert({\n        title: 'Error',\n        message: 'Fleet data not ready.',\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n      return;\n    }\n\n    // Save any unsaved sections first\n    if (showCustomer && !customerSaved) {\n      await saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]);\n    }\n    if (showVendor && !vendorSaved) {\n      await saveSection(\"vendorMaster\", vendorData);\n    }\n    if (showPod && !podSaved) {\n      await saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]);\n    }\n    const docSnap = await getDoc(doc(db, \"fleet_records\", docId));\n    if (!docSnap.exists()) {\n      confirmAlert({\n        title: 'Error',\n        message: 'Data not found.',\n        buttons: [{\n          label: 'OK'\n        }]\n      });\n      return;\n    }\n    const data = {\n      id: docSnap.id,\n      ...docSnap.data()\n    };\n    onAddRow(flattenObject(data), true);\n\n    // Reset all state\n    setFixedFields(fixedFieldsInitial);\n    setCustomerData(customerFields);\n    setVendorData(vendorFields);\n    setPodData(podFields);\n    setIndentNumber(null);\n    setDocId(null);\n    setShowCustomer(false);\n    setShowVendor(false);\n    setShowPod(false);\n    setCustomerSaved(false);\n    setVendorSaved(false);\n    setPodSaved(false);\n    localStorage.removeItem(\"fixedFields\");\n    localStorage.removeItem(\"customerFields\");\n    localStorage.removeItem(\"vendorFields\");\n    localStorage.removeItem(\"podFields\");\n    localStorage.removeItem(\"inProgressIndentNumber\");\n    localStorage.removeItem(\"docId\");\n    confirmAlert({\n      title: 'Done',\n      message: '✅ Record submitted and ready in editable table.',\n      buttons: [{\n        label: 'OK'\n      }]\n    });\n  };\n  const handleNewRecord = () => {\n    confirmAlert({\n      title: 'Confirm New Entry',\n      message: 'Start a new entry? Unsaved data will be lost.',\n      buttons: [{\n        label: 'Yes',\n        onClick: () => {\n          resetAll();\n          confirmAlert({\n            title: 'Ready',\n            message: '🆕 Ready to start a new record.',\n            buttons: [{\n              label: 'OK'\n            }]\n          });\n        }\n      }, {\n        label: 'No'\n      }]\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }\n  }, \"Step 1: Fixed Fields\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-fields-grid\",\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(5, 1fr)\",\n      gap: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 3\n    }\n  }, Object.keys(fixedFieldsInitial).map(key => {\n    const isDate = key.toLowerCase().includes(\"date\");\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key === \"months\" ? \"months (e.g. Jul-2025)\" : key;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }\n    }, formatLabel(key)), /*#__PURE__*/React.createElement(\"input\", {\n      name: key,\n      className: \"form-control\",\n      placeholder: \"\",\n      value: fixedFields[key],\n      onChange: handleFixedChange,\n      disabled: !!indentNumber,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 1\n      }\n    }));\n  })), !indentNumber && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20px\",\n      width: \"100%\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleFixedSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 5\n    }\n  }, \"\\uD83D\\uDCBE Save & Continue\"))), indentNumber && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, \"\\u2705 Saved. Indent No: \", indentNumber), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 11\n    }\n  }, \"Step 2: Select Master Sections\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showCustomer,\n    onChange: () => setShowCustomer(!showCustomer),\n    disabled: customerSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  }), \" Customer Master\"), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showVendor,\n    onChange: () => setShowVendor(!showVendor),\n    disabled: vendorSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }\n  }), \" Vendor Master\"), /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      marginLeft: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showPod,\n    onChange: () => setShowPod(!showPod),\n    disabled: podSaved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }\n  }), \" POD Master\"), showCustomer && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }\n  }, \"Customer Master\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(5, 1fr)\",\n      gap: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }\n  }, Object.keys(customerFields).map(key => {\n    const isDate = [\"advanceRecDate\", \"balanceRecDate\"].includes(key);\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 15\n      }\n    }, formatLabel(key)), /*#__PURE__*/React.createElement(\"input\", {\n      name: key,\n      className: \"form-control\",\n      placeholder: \"\",\n      value: customerData[key],\n      onChange: e => handleSectionChange(e, \"customer\"),\n      disabled: customerSaved,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 1\n      }\n    }));\n  })), !customerSaved && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 5\n    }\n  }, \"Save Customer\")))), showVendor && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 5\n    }\n  }, \"Vendor Master\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(5, 1fr)\",\n      gap: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }\n  }, Object.keys(vendorFields).map(key => {\n    const label = key;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 15\n      }\n    }, formatLabel(key)), /*#__PURE__*/React.createElement(\"input\", {\n      name: key,\n      className: \"form-control\",\n      placeholder: \"\",\n      value: vendorData[key],\n      onChange: e => handleSectionChange(e, \"vendor\"),\n      disabled: vendorSaved,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 1\n      }\n    }));\n  })), !vendorSaved && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    onClick: () => saveSection(\"vendorMaster\", vendorData),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 9\n    }\n  }, \"Save Vendor\")))), showPod && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 5\n    }\n  }, \"POD Master\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card p-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(5, 1fr)\",\n      gap: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 7\n    }\n  }, Object.keys(podFields).map(key => {\n    const isDate = [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"].includes(key);\n    const label = isDate ? `${key} (dd/mm/yyyy)` : key;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-label\",\n      style: {\n        fontWeight: \"500\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 15\n      }\n    }, formatLabel(key)), /*#__PURE__*/React.createElement(\"input\", {\n      name: key,\n      className: \"form-control\",\n      placeholder: \"\",\n      value: podData[key],\n      onChange: e => handleSectionChange(e, \"pod\"),\n      disabled: podSaved,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 1\n      }\n    }));\n  })), !podSaved && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: \"right\",\n      marginTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary mt-3\",\n    onClick: () => saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 9\n    }\n  }, \"Save POD\")))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      width: \"100%\",\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFinalSubmit,\n    className: \"btn btn-success me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 3\n    }\n  }, \"\\u2705 Submit Record\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNewRecord,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 3\n    }\n  }, \"\\u2795 Add New Record\"))));\n};\nexport default ManualEntryForm;","map":{"version":3,"names":["React","useState","useEffect","collection","addDoc","updateDoc","doc","runTransaction","Timestamp","getDoc","db","auth","confirmAlert","fixedFieldsInitial","date","months","origin","destination","customer","customerType","vehicleNo","vendor","salesRate","buyRate","customerFields","toBeAdvance","advanceReceived","advDeviation","advanceRecDate","validatedAdvanceUTRDescription","validatedAdvanceAmount","balance","processingCharges","inwardMisCharges","outwardMisCharges","balanceReceived","remainingBalance","balanceRecDate","validatedBalanceUTR","validatedBalanceUTRAmount","vendorFields","vendorOutwardPayment","paidAmount","balancePending","vendorRemark","podFields","podVendorDate","podSendToCustomerDate","docNo","podCustomerRec","today","balanceOverdueDays","toBeCollectedAmount","flattenObject","obj","prefix","result","key","value","fullKey","seconds","Object","assign","ManualEntryForm","onAddRow","fixedFields","setFixedFields","customerData","setCustomerData","vendorData","setVendorData","podData","setPodData","indentNumber","setIndentNumber","docId","setDocId","showCustomer","setShowCustomer","showVendor","setShowVendor","showPod","setShowPod","customerSaved","setCustomerSaved","vendorSaved","setVendorSaved","podSaved","setPodSaved","storedIndentNo","localStorage","getItem","storedFixed","storedCustomer","storedVendor","storedPod","storedDocId","Number","JSON","parse","formatLabel","replace","str","toUpperCase","resetAll","removeItem","convertDateFields","data","allowedKeys","entries","forEach","includes","parsed","Date","isNaN","fromDate","handleFixedChange","e","updated","target","name","setItem","stringify","handleSectionChange","section","getNextIndentNumber","counterRef","newIndentNo","transaction","docSnap","get","exists","Error","current","nextFleetNo","update","handleFixedSave","hasAnyValue","values","some","val","String","trim","title","message","buttons","label","user","currentUser","indentNo","enrichedData","createdAt","createdBy","email","isCurrent","versionDate","updateDescription","docRef","id","navigator","clipboard","writeText","err","alert","saveSection","sectionName","sectionData","dateFields","handleFinalSubmit","handleNewRecord","onClick","createElement","style","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","display","gridTemplateColumns","gap","keys","map","isDate","toLowerCase","fontWeight","placeholder","onChange","disabled","type","width","textAlign","Fragment","color","checked","marginLeft"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/ManualEntryForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  updateDoc,\r\n  doc,\r\n  runTransaction,\r\n  Timestamp,\r\n  getDoc\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase\";\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst fixedFieldsInitial = {\r\n  date: \"\",\r\n  months: \"\",\r\n  origin: \"\",\r\n  destination: \"\",\r\n  customer: \"\",\r\n  customerType: \"\",\r\n  vehicleNo: \"\",\r\n  vendor: \"\",\r\n  salesRate: \"\",\r\n  buyRate: \"\"\r\n};\r\n\r\nconst customerFields = {\r\n  toBeAdvance: \"\",\r\n  advanceReceived: \"\",\r\n  advDeviation: \"\",\r\n  advanceRecDate: \"\",\r\n  validatedAdvanceUTRDescription: \"\",\r\n  validatedAdvanceAmount: \"\",\r\n  balance: \"\",\r\n  processingCharges: \"\",\r\n  inwardMisCharges: \"\",\r\n  outwardMisCharges: \"\",\r\n  balanceReceived: \"\",\r\n  remainingBalance: \"\",\r\n  balanceRecDate: \"\",\r\n  validatedBalanceUTR: \"\",\r\n  validatedBalanceUTRAmount: \"\"\r\n};\r\n\r\nconst vendorFields = {\r\n  vendorOutwardPayment: \"\",\r\n  paidAmount: \"\",\r\n  balancePending: \"\",\r\n  vendorRemark: \"\"\r\n};\r\n\r\nconst podFields = {\r\n  podVendorDate: \"\",\r\n  podSendToCustomerDate: \"\",\r\n  docNo: \"\",\r\n  podCustomerRec: \"\",\r\n  today: \"\",\r\n  balanceOverdueDays: \"\",\r\n  toBeCollectedAmount: \"\"\r\n};\r\nconst flattenObject = (obj, prefix = \"\") => {\r\n  let result = {};\r\n  for (const key in obj) {\r\n    const value = obj[key];\r\n    const fullKey = prefix ? `${prefix}.${key}` : key;\r\n    if (value && typeof value === \"object\" && !value.seconds) {\r\n      Object.assign(result, flattenObject(value, fullKey));\r\n    } else {\r\n      result[fullKey] = value;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst ManualEntryForm = ({ onAddRow }) => {\r\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\r\n  const [customerData, setCustomerData] = useState(customerFields);\r\n  const [vendorData, setVendorData] = useState(vendorFields);\r\n  const [podData, setPodData] = useState(podFields);\r\n  const [indentNumber, setIndentNumber] = useState(null);\r\n  const [docId, setDocId] = useState(null);\r\n\r\n  const [showCustomer, setShowCustomer] = useState(false);\r\n  const [showVendor, setShowVendor] = useState(false);\r\n  const [showPod, setShowPod] = useState(false);\r\n\r\n  const [customerSaved, setCustomerSaved] = useState(false);\r\n  const [vendorSaved, setVendorSaved] = useState(false);\r\n  const [podSaved, setPodSaved] = useState(false);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const storedIndentNo = localStorage.getItem(\"inProgressIndentNumber\");\r\n    const storedFixed = localStorage.getItem(\"fixedFields\");\r\n    const storedCustomer = localStorage.getItem(\"customerFields\");\r\n    const storedVendor = localStorage.getItem(\"vendorFields\");\r\n    const storedPod = localStorage.getItem(\"podFields\");\r\n    const storedDocId = localStorage.getItem(\"docId\");\r\n    \r\n    \r\n    if (storedDocId) setDocId(storedDocId);\r\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\r\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\r\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\r\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\r\n    if (storedPod) setPodData(JSON.parse(storedPod));\r\n  }, []);\r\n\r\n  const formatLabel = (key) => {\r\n  return key\r\n    .replace(/([a-z])([A-Z])/g, \"$1 $2\")   // add space before uppercase\r\n    .replace(/_/g, \" \")                   // replace underscore with space\r\n    .replace(/^./, (str) => str.toUpperCase()); // capitalize first letter\r\n};\r\n\r\n  const resetAll = () => {\r\n  setFixedFields(fixedFieldsInitial);\r\n  setCustomerData(customerFields);\r\n  setVendorData(vendorFields);\r\n  setPodData(podFields);\r\n  setIndentNumber(null);\r\n  setDocId(null);\r\n  setShowCustomer(false);\r\n  setShowVendor(false);\r\n  setShowPod(false);\r\n  setCustomerSaved(false);\r\n  setVendorSaved(false);\r\n  setPodSaved(false);\r\n\r\n  localStorage.removeItem(\"fixedFields\");\r\n  localStorage.removeItem(\"customerFields\");\r\n  localStorage.removeItem(\"vendorFields\");\r\n  localStorage.removeItem(\"podFields\");\r\n  localStorage.removeItem(\"inProgressIndentNumber\");\r\n  localStorage.removeItem(\"docId\");\r\n};\r\n\r\n  const convertDateFields = (data, allowedKeys = []) => {\r\n    const result = {};\r\n    Object.entries(data).forEach(([key, value]) => {\r\n      if (allowedKeys.includes(key) && value) {\r\n        const parsed = new Date(value);\r\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\r\n      } else {\r\n        result[key] = value;\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const handleFixedChange = (e) => {\r\n  const updated = { ...fixedFields, [e.target.name]: e.target.value };\r\n  setFixedFields(updated);\r\n  localStorage.setItem(\"fixedFields\", JSON.stringify(updated));  // ✅ Save\r\n};\r\n\r\n\r\n  const handleSectionChange = (e, section) => {\r\n  const { name, value } = e.target;\r\n  if (section === \"customer\") {\r\n    const updated = { ...customerData, [name]: value };\r\n    setCustomerData(updated);\r\n    localStorage.setItem(\"customerFields\", JSON.stringify(updated));\r\n  }\r\n  if (section === \"vendor\") {\r\n    const updated = { ...vendorData, [name]: value };\r\n    setVendorData(updated);\r\n    localStorage.setItem(\"vendorFields\", JSON.stringify(updated));\r\n  }\r\n  if (section === \"pod\") {\r\n    const updated = { ...podData, [name]: value };\r\n    setPodData(updated);\r\n    localStorage.setItem(\"podFields\", JSON.stringify(updated));\r\n  }\r\n};\r\n\r\n\r\n  const getNextIndentNumber = async () => {\r\n  const counterRef = doc(db, \"Counters\", \"fleet_counter\");\r\n  const newIndentNo = await runTransaction(db, async (transaction) => {\r\n    const docSnap = await transaction.get(counterRef);\r\n    if (!docSnap.exists()) throw new Error(\"Counter doc missing\");\r\n    const current = docSnap.data().nextFleetNo || 1;\r\n    transaction.update(counterRef, { nextFleetNo: current + 1 });\r\n    return current;\r\n  });\r\n  return newIndentNo;\r\n};\r\n\r\n\r\n  const handleFixedSave = async () => {\r\n    const hasAnyValue = Object.values(fixedFields).some(\r\n  val => String(val ?? \"\").trim() !== \"\"\r\n);\r\n\r\nif (!hasAnyValue) {\r\n  confirmAlert({\r\n    title: 'Validation Error',\r\n    message: '⚠️ Please fill at least one field before continuing.',\r\n    buttons: [\r\n      {\r\n        label: 'OK'\r\n      }\r\n    ]\r\n  });\r\n  return;\r\n}\r\n\r\n\r\n    try {\r\n      const user = auth.currentUser;\r\n      const indentNo  = await getNextIndentNumber();\r\n      const enrichedData = {\r\n        indentNumber: indentNo,\r\n        ...convertDateFields(fixedFields, [\"date\"]),\r\n        createdAt: new Date(),\r\n        createdBy: user?.email || \"anonymous\",\r\n        isCurrent: true,\r\n        versionDate: new Date(),\r\n        updateDescription: \"\"\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\r\n      setIndentNumber(indentNo);\r\n      setDocId(docRef.id);\r\n      localStorage.setItem(\"docId\", docRef.id);\r\n      localStorage.setItem(\"inProgressIndentNumber\", indentNo);\r\n      await navigator.clipboard.writeText(String(indentNo));\r\n      confirmAlert({\r\n  title: 'Success',\r\n  message: `✅ Fixed fields saved. Indent Number copied: ${indentNo}`,\r\n  buttons: [\r\n    { label: 'OK' }\r\n  ]\r\n});\r\n\r\n    } catch (err) {\r\n      alert(\"❌ Error saving fixed fields: \" + err.message);\r\n    }\r\n  };\r\n\r\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\r\n    if (!docId) {\r\n  confirmAlert({\r\n    title: 'Missing Info',\r\n    message: '⚠️ Save fixed fields first.',\r\n    buttons: [{ label: 'OK' }]\r\n  });\r\n  return;\r\n}\r\n\r\n    try {\r\n      const docRef = doc(db, \"fleet_records\", docId);\r\n      await updateDoc(docRef, {\r\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\r\n      });\r\n      if (sectionName === \"customerMaster\") setCustomerSaved(true);\r\n      if (sectionName === \"vendorMaster\") setVendorSaved(true);\r\n      if (sectionName === \"podMaster\") setPodSaved(true);\r\n      confirmAlert({\r\n  title: 'Saved',\r\n  message: `✅ ${sectionName} saved.`,\r\n  buttons: [{ label: 'OK' }]\r\n});\r\n\r\n    } catch (err) {\r\n      confirmAlert({\r\n  title: 'Error',\r\n  message: \"❌ Save error: \" + err.message,\r\n  buttons: [{ label: 'OK' }]\r\n});\r\n\r\n    }\r\n  };\r\n\r\n const handleFinalSubmit = async () => {\r\n  if (!docId) {\r\n  confirmAlert({\r\n    title: 'Error',\r\n    message: 'Fleet data not ready.',\r\n    buttons: [{ label: 'OK' }]\r\n  });\r\n  return;\r\n}\r\n\r\n\r\n  // Save any unsaved sections first\r\n  if (showCustomer && !customerSaved) {\r\n    await saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"]);\r\n  }\r\n  if (showVendor && !vendorSaved) {\r\n    await saveSection(\"vendorMaster\", vendorData);\r\n  }\r\n  if (showPod && !podSaved) {\r\n    await saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"]);\r\n  }\r\n\r\n  const docSnap = await getDoc(doc(db, \"fleet_records\", docId));\r\n  if (!docSnap.exists()) {\r\n  confirmAlert({\r\n    title: 'Error',\r\n    message: 'Data not found.',\r\n    buttons: [{ label: 'OK' }]\r\n  });\r\n  return;\r\n}\r\n\r\n  const data = { id: docSnap.id, ...docSnap.data() };\r\n  onAddRow(flattenObject(data), true);\r\n\r\n\r\n  // Reset all state\r\n  setFixedFields(fixedFieldsInitial);\r\n  setCustomerData(customerFields);\r\n  setVendorData(vendorFields);\r\n  setPodData(podFields);\r\n  setIndentNumber(null);\r\n  setDocId(null);\r\n  setShowCustomer(false);\r\n  setShowVendor(false);\r\n  setShowPod(false);\r\n  setCustomerSaved(false);\r\n  setVendorSaved(false);\r\n  setPodSaved(false);\r\n\r\n  localStorage.removeItem(\"fixedFields\");\r\n  localStorage.removeItem(\"customerFields\");\r\n  localStorage.removeItem(\"vendorFields\");\r\n  localStorage.removeItem(\"podFields\");\r\n  localStorage.removeItem(\"inProgressIndentNumber\");\r\n  localStorage.removeItem(\"docId\");\r\n\r\n\r\n\r\n  confirmAlert({\r\n  title: 'Done',\r\n  message: '✅ Record submitted and ready in editable table.',\r\n  buttons: [{ label: 'OK' }]\r\n});\r\n\r\n};\r\n\r\nconst handleNewRecord = () => {\r\n  confirmAlert({\r\n    title: 'Confirm New Entry',\r\n    message: 'Start a new entry? Unsaved data will be lost.',\r\n    buttons: [\r\n      {\r\n        label: 'Yes',\r\n        onClick: () => {\r\n          resetAll();\r\n          confirmAlert({\r\n            title: 'Ready',\r\n            message: '🆕 Ready to start a new record.',\r\n            buttons: [{ label: 'OK' }]\r\n          });\r\n        }\r\n      },\r\n      {\r\n        label: 'No'\r\n      }\r\n    ]\r\n  });\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h4>Step 1: Fixed Fields</h4>\r\n<div className=\"card p-4 mb-4\">\r\n  <div\r\n    className=\"fixed-fields-grid\"\r\n    style={{\r\n      display: \"grid\",\r\n      gridTemplateColumns: \"repeat(5, 1fr)\",\r\n      gap: \"16px\",\r\n    }}\r\n  >\r\n    {Object.keys(fixedFieldsInitial).map((key) => {\r\n      const isDate = key.toLowerCase().includes(\"date\");\r\n      const label =\r\n        isDate\r\n          ? `${key} (dd/mm/yyyy)`\r\n          : key === \"months\"\r\n          ? \"months (e.g. Jul-2025)\"\r\n          : key;\r\n\r\n      return (\r\n        <div key={key}>\r\n          <label className=\"form-label\" style={{ fontWeight: \"500\" }}>\r\n  {formatLabel(key)}\r\n</label>\r\n<input\r\n  name={key}\r\n  className=\"form-control\"\r\n  placeholder=\"\"\r\n  value={fixedFields[key]}\r\n  onChange={handleFixedChange}\r\n  disabled={!!indentNumber}\r\n  type=\"text\"\r\n/>\r\n\r\n        </div>\r\n      );\r\n    })}\r\n  </div>\r\n\r\n  {!indentNumber && (\r\n  <div style={{ marginTop: \"20px\", width: \"100%\", textAlign: \"right\" }}>\r\n    <button className=\"btn btn-primary\" onClick={handleFixedSave}>\r\n      💾 Save & Continue\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n \r\n\r\n</div>\r\n\r\n\r\n      {indentNumber  && (\r\n        <>\r\n          <p style={{ color: \"green\" }}>✅ Saved. Indent No: {indentNumber}</p>\r\n\r\n          <h4>Step 2: Select Master Sections</h4>\r\n          <label>\r\n            <input type=\"checkbox\" checked={showCustomer} onChange={() => setShowCustomer(!showCustomer)} disabled={customerSaved} /> Customer Master\r\n          </label>\r\n          <label style={{ marginLeft: 15 }}>\r\n            <input type=\"checkbox\" checked={showVendor} onChange={() => setShowVendor(!showVendor)} disabled={vendorSaved} /> Vendor Master\r\n          </label>\r\n          <label style={{ marginLeft: 15 }}>\r\n            <input type=\"checkbox\" checked={showPod} onChange={() => setShowPod(!showPod)} disabled={podSaved} /> POD Master\r\n          </label>\r\n\r\n          {showCustomer && (\r\n  <>\r\n    <h5>Customer Master</h5>\r\n    <div className=\"card p-3 mb-3\">\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(5, 1fr)\",\r\n          gap: \"16px\",\r\n        }}\r\n      >\r\n        {Object.keys(customerFields).map((key) => {\r\n          const isDate = [\"advanceRecDate\", \"balanceRecDate\"].includes(key);\r\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\r\n          return (\r\n            <div key={key}>\r\n              <label className=\"form-label\" style={{ fontWeight: \"500\" }}>\r\n  {formatLabel(key)}\r\n</label>\r\n<input\r\n  name={key}\r\n  className=\"form-control\"\r\n  placeholder=\"\"\r\n                value={customerData[key]}\r\n                onChange={(e) => handleSectionChange(e, \"customer\")}\r\n                disabled={customerSaved}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {!customerSaved && (\r\n  <div style={{ textAlign: \"right\", marginTop: \"16px\" }}>\r\n    <button\r\n      className=\"btn btn-primary\"\r\n      onClick={() => saveSection(\"customerMaster\", customerData, [\"advanceRecDate\", \"balanceRecDate\"])}\r\n    >\r\n      Save Customer\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n    </div>\r\n  </>\r\n)}\r\n\r\n\r\n          {showVendor && (\r\n  <>\r\n    <h5>Vendor Master</h5>\r\n    <div className=\"card p-3 mb-3\">\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(5, 1fr)\",\r\n          gap: \"16px\",\r\n        }}\r\n      >\r\n        {Object.keys(vendorFields).map((key) => {\r\n          const label = key;\r\n          return (\r\n            <div key={key}>\r\n              <label className=\"form-label\" style={{ fontWeight: \"500\" }}>\r\n  {formatLabel(key)}\r\n</label>\r\n<input\r\n  name={key}\r\n  className=\"form-control\"\r\n  placeholder=\"\"\r\n                value={vendorData[key]}\r\n                onChange={(e) => handleSectionChange(e, \"vendor\")}\r\n                disabled={vendorSaved}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {!vendorSaved && (\r\n        <div style={{ textAlign: \"right\", marginTop: \"16px\" }}>\r\n        <button className=\"btn btn-primary mt-3\" onClick={() => saveSection(\"vendorMaster\", vendorData)}>\r\n          Save Vendor\r\n        </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </>\r\n)}\r\n\r\n\r\n          {showPod && (\r\n  <>\r\n    <h5>POD Master</h5>\r\n    <div className=\"card p-3 mb-3\">\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(5, 1fr)\",\r\n          gap: \"16px\",\r\n        }}\r\n      >\r\n        {Object.keys(podFields).map((key) => {\r\n          const isDate = [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"].includes(key);\r\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\r\n          return (\r\n            <div key={key}>\r\n              <label className=\"form-label\" style={{ fontWeight: \"500\" }}>\r\n  {formatLabel(key)}\r\n</label>\r\n<input\r\n  name={key}\r\n  className=\"form-control\"\r\n  placeholder=\"\"\r\n                value={podData[key]}\r\n                onChange={(e) => handleSectionChange(e, \"pod\")}\r\n                disabled={podSaved}\r\n                type=\"text\"\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      {!podSaved && (\r\n        <div style={{ textAlign: \"right\", marginTop: \"16px\" }}>\r\n        <button className=\"btn btn-primary mt-3\" onClick={() => saveSection(\"podMaster\", podData, [\"podVendorDate\", \"podSendToCustomerDate\", \"podCustomerRec\", \"today\"])}>\r\n          Save POD\r\n        </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  </>\r\n)}\r\n\r\n\r\n          <br />\r\n          <div style={{ marginTop: 10, width: \"100%\", textAlign: \"right\" }}>\r\n  <button onClick={handleFinalSubmit} className=\"btn btn-success me-2\">\r\n    ✅ Submit Record\r\n  </button>\r\n  <button onClick={handleNewRecord} className=\"btn btn-primary\">\r\n    ➕ Add New Record\r\n  </button>\r\n</div>\r\n\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}