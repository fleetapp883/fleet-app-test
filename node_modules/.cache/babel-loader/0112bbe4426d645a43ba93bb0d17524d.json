{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { collection, addDoc, query, where, getDocs, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\";\nimport Auth from \"./components/Auth\";\nimport UploadForm from \"./components/UploadForm\";\nimport ManualEntryForm from \"./components/ManualEntryForm\";\nimport \"./App.css\";\nconst testConnection = async () => {\n  try {\n    const docRef = await addDoc(collection(db, \"test_connection\"), {\n      message: \"Testing Firestore connection\",\n      timestamp: new Date()\n    });\n    console.log(\"✅ Firestore write succeeded with ID:\", docRef.id);\n    alert(\"✅ Firebase is connected. Test document written!\");\n  } catch (error) {\n    console.error(\"❌ Firebase connection failed:\", error);\n    alert(\"❌ Firebase connection failed: \" + error.message);\n  }\n};\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"UniqueNo\");\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      console.log(\"🔥 Auth State Changed. User:\", currentUser);\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleSave = async () => {\n    try {\n      const batch = records.map(record => addDoc(collection(db, \"fleet_records\"), {\n        ...record,\n        createdBy: user.email,\n        createdAt: new Date(),\n        isCurrent: true,\n        versionDate: new Date()\n      }));\n      await Promise.all(batch);\n      alert(\"Records saved to Firestore!\");\n    } catch (error) {\n      alert(\"Error saving records: \" + error.message);\n    }\n  };\n  const handleSearch = async () => {\n    try {\n      // Get all versions (full history)\n      const hq = query(collection(db, \"fleet_records\"), where(searchField, \"==\", searchKey));\n      const hSnapshot = await getDocs(hq);\n      const allVersions = [];\n      const currentOnly = [];\n      hSnapshot.forEach(docSnap => {\n        const row = {\n          id: docSnap.id,\n          ...docSnap.data()\n        };\n\n        // ✅ Treat missing isCurrent as true (for old records)\n        if (row.isCurrent === undefined) {\n          row.isCurrent = true;\n        }\n        allVersions.push(row);\n        if (row.isCurrent === true) currentOnly.push(row);\n      });\n      setRecords(currentOnly);\n      setHistory(allVersions);\n    } catch (error) {\n      alert(\"Search failed: \" + error.message);\n    }\n  };\n  const handleUpdate = async row => {\n    try {\n      const {\n        id,\n        ...rest\n      } = row;\n      const cleanData = {};\n      for (const key in rest) {\n        var _rest$key;\n        cleanData[key] = typeof rest[key] === \"string\" || typeof rest[key] === \"number\" ? rest[key] : String((_rest$key = rest[key]) !== null && _rest$key !== void 0 ? _rest$key : \"\");\n      }\n      await updateDoc(doc(db, \"fleet_records\", id), {\n        isCurrent: false,\n        expiredAt: new Date(),\n        modifiedBy: user.email\n      });\n      const newVersion = {\n        ...cleanData,\n        createdAt: new Date(),\n        createdBy: user.email,\n        isCurrent: true,\n        versionDate: new Date()\n      };\n      const docRef = await addDoc(collection(db, \"fleet_records\"), newVersion);\n      const updatedRecords = records.map(r => r.id === id ? {\n        ...newVersion,\n        id: docRef.id\n      } : r);\n      setRecords(updatedRecords);\n      handleSearch();\n      alert(\"🆕 SCD Type 2 update saved successfully.\");\n    } catch (error) {\n      alert(\"❌ Update failed: \" + error.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await deleteDoc(doc(db, \"fleet_records\", id));\n      setRecords(records.filter(r => r.id !== id));\n      alert(\"🗑️ Record deleted successfully.\");\n    } catch (error) {\n      alert(\"❌ Delete failed: \" + error.message);\n    }\n  };\n  if (!user) return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Welcome, \", user.email), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => signOut(auth),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: testConnection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Test Firebase Connection\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UploadForm, {\n    onDataParsed: data => setRecords([...records, ...data]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManualEntryForm, {\n    onAddRow: row => setRecords([...records, row]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \"Search Existing Records\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: searchField,\n    onChange: e => setSearchField(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"UniqueNo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, \"UniqueNo\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Broker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Broker\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search value\",\n    value: searchKey,\n    onChange: e => setSearchKey(e.target.value),\n    style: {\n      margin: \"0 10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, \"Editable Current Records\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, [\"UniqueNo\", \"Indent No\", \"Indent Date\", \"Placement Date\", \"Customer\", \"Customer Type\", \"Customer Billing Type\", \"Sourcing (Vendor)\", \"Vendor Type\", \"Vendor Billing Type\", \"Origin\", \"Destination\", \"Vehicle No\", \"Vehicle type\", \"Driver No\", \"Dispatch Date\", \"Deliver Date\", \"Offloading Date\", \"E-way Bill\", \"LR No.\", \"Soft Copy POD Rec\", \"Hard Copy POD Rec\", \"Customer -Sale rate\", \"Advance to be Paid\", \"Advance Rec\", \"Advance UTR\", \"Advance Rec-Date\", \"Balance Pending\", \"Detention Charges\", \"Loading/Unloading Charges\", \"Miscellaneous Charges.\", \"Processing Charges\", \"Net Balance\", \"Balance Rec Amount\", \"Balance UTR\", \"Balance Rec Date\", \"Remaining Balance\", \"Remaining Balance UTR\", \"Remaining Balance Date\", \"Supplier Buy Rate\", \"Supplier Advance Pay\", \"Supplier Advance Paid\", \"Supplier Mis Charges\", \"Supplier Invoice No.\", \"Supplier Advance UTR\", \"Supplier Advance Pay-Date\", \"Supplier Balance Pending\", \"Supplier Balance Paid Amount\", \"Supplier Balance Paid UTR\", \"Supplier Balance Paid Date\", \"Remaining Supplier Amount\", \"POD Rec Date\", \"POD Send to Customer Date\", \"POD Docket No.\", \"POD Rec By Customer\", \"POD Deduction If any\", \"Gross Profit\", \"Bad Debts\", \"Net Profit\", \"isCurrent\", \"createdBy\", \"createdAt\"].map(col => /*#__PURE__*/React.createElement(\"th\", {\n    key: col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, col)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, records.map((row, rowIndex) => {\n    // Generate UniqueNo if missing\n    if (!row.UniqueNo) {\n      row.UniqueNo = `UNQ-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    }\n    const readOnlyFields = [\"UniqueNo\", \"createdAt\", \"createdBy\", \"isCurrent\"];\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: rowIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }\n    }, [\"UniqueNo\", \"Indent No\", \"Indent Date\", \"Placement Date\", \"Customer\", \"Customer Type\", \"Customer Billing Type\", \"Sourcing (Vendor)\", \"Vendor Type\", \"Vendor Billing Type\", \"Origin\", \"Destination\", \"Vehicle No\", \"Vehicle type\", \"Driver No\", \"Dispatch Date\", \"Deliver Date\", \"Offloading Date\", \"E-way Bill\", \"LR No.\", \"Soft Copy POD Rec\", \"Hard Copy POD Rec\", \"Customer -Sale rate\", \"Advance to be Paid\", \"Advance Rec\", \"Advance UTR\", \"Advance Rec-Date\", \"Balance Pending\", \"Detention Charges\", \"Loading/Unloading Charges\", \"Miscellaneous Charges.\", \"Processing Charges\", \"Net Balance\", \"Balance Rec Amount\", \"Balance UTR\", \"Balance Rec Date\", \"Remaining Balance\", \"Remaining Balance UTR\", \"Remaining Balance Date\", \"Supplier Buy Rate\", \"Supplier Advance Pay\", \"Supplier Advance Paid\", \"Supplier Mis Charges\", \"Supplier Invoice No.\", \"Supplier Advance UTR\", \"Supplier Advance Pay-Date\", \"Supplier Balance Pending\", \"Supplier Balance Paid Amount\", \"Supplier Balance Paid UTR\", \"Supplier Balance Paid Date\", \"Remaining Supplier Amount\", \"POD Rec Date\", \"POD Send to Customer Date\", \"POD Docket No.\", \"POD Rec By Customer\", \"POD Deduction If any\", \"Gross Profit\", \"Bad Debts\", \"Net Profit\", \"isCurrent\", \"createdBy\", \"createdAt\"].map((col, colIndex) => {\n      var _row$col, _row$col2;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: colIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        value: typeof row[col] === \"object\" && ((_row$col = row[col]) === null || _row$col === void 0 ? void 0 : _row$col.seconds) ? new Date(row[col].seconds * 1000).toLocaleString() : String((_row$col2 = row[col]) !== null && _row$col2 !== void 0 ? _row$col2 : \"\"),\n        onChange: e => {\n          const updated = [...records];\n          updated[rowIndex][col] = e.target.value;\n          setRecords(updated);\n        },\n        style: {\n          width: \"120px\"\n        },\n        readOnly: readOnlyFields.includes(col),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleUpdate(row),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        if (window.confirm(\"Are you sure you want to delete this record?\")) {\n          handleDelete(row.id);\n        }\n      },\n      style: {\n        marginLeft: \"8px\",\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, \"Delete\")));\n  })))), history.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, \"\\uD83D\\uDD0D Full Version History\"), (() => {\n    const allKeys = new Set();\n    history.forEach(row => Object.keys(row).forEach(k => allKeys.add(k)));\n    const columnList = Array.from(allKeys);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-scroll-x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }\n    }, columnList.map(col => /*#__PURE__*/React.createElement(\"th\", {\n      key: col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }\n    }, col)))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 5\n      }\n    }, [...history].sort((a, b) => {\n      var _a$expiredAt, _b$expiredAt;\n      if (a.isCurrent) return -1;\n      if (b.isCurrent) return 1;\n      const aTime = ((_a$expiredAt = a.expiredAt) === null || _a$expiredAt === void 0 ? void 0 : _a$expiredAt.seconds) || 0;\n      const bTime = ((_b$expiredAt = b.expiredAt) === null || _b$expiredAt === void 0 ? void 0 : _b$expiredAt.seconds) || 0;\n      return bTime - aTime;\n    }).map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, columnList.map((col, j) => {\n      var _row$col3, _row$col4;\n      return /*#__PURE__*/React.createElement(\"td\", {\n        key: j,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }, typeof row[col] === 'object' && ((_row$col3 = row[col]) === null || _row$col3 === void 0 ? void 0 : _row$col3.seconds) ? new Date(row[col].seconds * 1000).toLocaleString() : String((_row$col4 = row[col]) !== null && _row$col4 !== void 0 ? _row$col4 : \"\"));\n    }))))));\n  })()));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","onAuthStateChanged","signOut","collection","addDoc","query","where","getDocs","updateDoc","deleteDoc","doc","auth","db","Auth","UploadForm","ManualEntryForm","testConnection","docRef","message","timestamp","Date","console","log","id","alert","error","App","user","setUser","records","setRecords","history","setHistory","searchKey","setSearchKey","searchField","setSearchField","unsubscribe","currentUser","handleSave","batch","map","record","createdBy","email","createdAt","isCurrent","versionDate","Promise","all","handleSearch","hq","hSnapshot","allVersions","currentOnly","forEach","docSnap","row","data","undefined","push","handleUpdate","rest","cleanData","key","_rest$key","String","expiredAt","modifiedBy","newVersion","updatedRecords","r","handleDelete","filter","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","onClick","onDataParsed","onAddRow","value","onChange","e","target","type","placeholder","margin","className","col","rowIndex","UniqueNo","now","Math","floor","random","readOnlyFields","colIndex","_row$col","_row$col2","seconds","toLocaleString","updated","width","readOnly","includes","window","confirm","marginLeft","color","length","Fragment","allKeys","Set","Object","keys","k","add","columnList","Array","from","sort","a","b","_a$expiredAt","_b$expiredAt","aTime","bTime","i","j","_row$col3","_row$col4"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport {\n  collection,\n  addDoc,\n  query,\n  where,\n  getDocs,\n  updateDoc,\n  deleteDoc,\n  doc\n} from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\";\nimport Auth from \"./components/Auth\";\nimport UploadForm from \"./components/UploadForm\";\nimport ManualEntryForm from \"./components/ManualEntryForm\";\nimport \"./App.css\";\n\n\nconst testConnection = async () => {\n  try {\n    const docRef = await addDoc(collection(db, \"test_connection\"), {\n      message: \"Testing Firestore connection\",\n      timestamp: new Date()\n    });\n    console.log(\"✅ Firestore write succeeded with ID:\", docRef.id);\n    alert(\"✅ Firebase is connected. Test document written!\");\n  } catch (error) {\n    console.error(\"❌ Firebase connection failed:\", error);\n    alert(\"❌ Firebase connection failed: \" + error.message);\n  }\n};\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [records, setRecords] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"UniqueNo\");\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      console.log(\"🔥 Auth State Changed. User:\", currentUser);\n      setUser(currentUser);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleSave = async () => {\n    try {\n      const batch = records.map(record =>\n        addDoc(collection(db, \"fleet_records\"), {\n          ...record,\n          createdBy: user.email,\n          createdAt: new Date(),\n          isCurrent: true,\n          versionDate: new Date()\n        })\n      );\n      await Promise.all(batch);\n      alert(\"Records saved to Firestore!\");\n    } catch (error) {\n      alert(\"Error saving records: \" + error.message);\n    }\n  };\n\n  const handleSearch = async () => {\n    try {\n      // Get all versions (full history)\n      const hq = query(collection(db, \"fleet_records\"), where(searchField, \"==\", searchKey));\n      const hSnapshot = await getDocs(hq);\n      const allVersions = [];\n      const currentOnly = [];\n\n      hSnapshot.forEach((docSnap) => {\n        const row = { id: docSnap.id, ...docSnap.data() };\n\n        // ✅ Treat missing isCurrent as true (for old records)\n        if (row.isCurrent === undefined) {\n          row.isCurrent = true;\n        }\n\n        allVersions.push(row);\n        if (row.isCurrent === true) currentOnly.push(row);\n      });\n\n      setRecords(currentOnly);\n      setHistory(allVersions);\n    } catch (error) {\n      alert(\"Search failed: \" + error.message);\n    }\n  };\n\n  const handleUpdate = async (row) => {\n    try {\n      const { id, ...rest } = row;\n      const cleanData = {};\n      for (const key in rest) {\n        cleanData[key] =\n          typeof rest[key] === \"string\" || typeof rest[key] === \"number\"\n            ? rest[key]\n            : String(rest[key] ?? \"\");\n      }\n\n      await updateDoc(doc(db, \"fleet_records\", id), {\n        isCurrent: false,\n        expiredAt: new Date(),\n        modifiedBy: user.email\n      });\n\n      const newVersion = {\n        ...cleanData,\n        createdAt: new Date(),\n        createdBy: user.email,\n        isCurrent: true,\n        versionDate: new Date()\n      };\n\n      const docRef = await addDoc(collection(db, \"fleet_records\"), newVersion);\n\n      const updatedRecords = records.map((r) =>\n        r.id === id ? { ...newVersion, id: docRef.id } : r\n      );\n      setRecords(updatedRecords);\n      handleSearch();\n\n      alert(\"🆕 SCD Type 2 update saved successfully.\");\n    } catch (error) {\n      alert(\"❌ Update failed: \" + error.message);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      await deleteDoc(doc(db, \"fleet_records\", id));\n      setRecords(records.filter((r) => r.id !== id));\n      alert(\"🗑️ Record deleted successfully.\");\n    } catch (error) {\n      alert(\"❌ Delete failed: \" + error.message);\n    }\n  };\n\n  if (!user) return <Auth />;\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Welcome, {user.email}</h2>\n      <button onClick={() => signOut(auth)}>Logout</button>\n      <br />\n      <button onClick={testConnection}>Test Firebase Connection</button>\n      <hr />\n\n      <UploadForm onDataParsed={(data) => setRecords([...records, ...data])} />\n      <ManualEntryForm onAddRow={(row) => setRecords([...records, row])} />\n\n      <hr />\n      <h4>Search Existing Records</h4>\n      <select value={searchField} onChange={(e) => setSearchField(e.target.value)}>\n        <option value=\"UniqueNo\">UniqueNo</option>\n        <option value=\"Broker\">Broker</option>\n      </select>\n      <input\n        type=\"text\"\n        placeholder=\"Search value\"\n        value={searchKey}\n        onChange={(e) => setSearchKey(e.target.value)}\n        style={{ margin: \"0 10px\" }}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      <hr />\n      <h4>Editable Current Records</h4>\n<div className=\"table-scroll-x\">\n  <table>\n    <thead>\n      <tr>\n        {[\n          \"UniqueNo\", \"Indent No\", \"Indent Date\", \"Placement Date\", \"Customer\", \"Customer Type\",\n          \"Customer Billing Type\", \"Sourcing (Vendor)\", \"Vendor Type\", \"Vendor Billing Type\",\n          \"Origin\", \"Destination\", \"Vehicle No\", \"Vehicle type\", \"Driver No\", \"Dispatch Date\",\n          \"Deliver Date\", \"Offloading Date\", \"E-way Bill\", \"LR No.\", \"Soft Copy POD Rec\",\n          \"Hard Copy POD Rec\", \"Customer -Sale rate\", \"Advance to be Paid\", \"Advance Rec\",\n          \"Advance UTR\", \"Advance Rec-Date\", \"Balance Pending\", \"Detention Charges\",\n          \"Loading/Unloading Charges\", \"Miscellaneous Charges.\", \"Processing Charges\",\n          \"Net Balance\", \"Balance Rec Amount\", \"Balance UTR\", \"Balance Rec Date\",\n          \"Remaining Balance\", \"Remaining Balance UTR\", \"Remaining Balance Date\",\n          \"Supplier Buy Rate\", \"Supplier Advance Pay\", \"Supplier Advance Paid\",\n          \"Supplier Mis Charges\", \"Supplier Invoice No.\", \"Supplier Advance UTR\",\n          \"Supplier Advance Pay-Date\", \"Supplier Balance Pending\", \"Supplier Balance Paid Amount\",\n          \"Supplier Balance Paid UTR\", \"Supplier Balance Paid Date\", \"Remaining Supplier Amount\",\n          \"POD Rec Date\", \"POD Send to Customer Date\", \"POD Docket No.\", \"POD Rec By Customer\",\n          \"POD Deduction If any\", \"Gross Profit\", \"Bad Debts\", \"Net Profit\",\n          \"isCurrent\", \"createdBy\", \"createdAt\"\n        ].map((col) => (\n          <th key={col}>{col}</th>\n        ))}\n        <th>Action</th>\n      </tr>\n    </thead>\n    <tbody>\n  {records.map((row, rowIndex) => {\n    // Generate UniqueNo if missing\n    if (!row.UniqueNo) {\n      row.UniqueNo = `UNQ-${Date.now()}-${Math.floor(Math.random() * 1000)}`;\n    }\n\n    const readOnlyFields = [\"UniqueNo\", \"createdAt\", \"createdBy\", \"isCurrent\"];\n\n    return (\n      <tr key={rowIndex}>\n        {[\n          \"UniqueNo\", \"Indent No\", \"Indent Date\", \"Placement Date\", \"Customer\", \"Customer Type\",\n          \"Customer Billing Type\", \"Sourcing (Vendor)\", \"Vendor Type\", \"Vendor Billing Type\",\n          \"Origin\", \"Destination\", \"Vehicle No\", \"Vehicle type\", \"Driver No\", \"Dispatch Date\",\n          \"Deliver Date\", \"Offloading Date\", \"E-way Bill\", \"LR No.\", \"Soft Copy POD Rec\",\n          \"Hard Copy POD Rec\", \"Customer -Sale rate\", \"Advance to be Paid\", \"Advance Rec\",\n          \"Advance UTR\", \"Advance Rec-Date\", \"Balance Pending\", \"Detention Charges\",\n          \"Loading/Unloading Charges\", \"Miscellaneous Charges.\", \"Processing Charges\",\n          \"Net Balance\", \"Balance Rec Amount\", \"Balance UTR\", \"Balance Rec Date\",\n          \"Remaining Balance\", \"Remaining Balance UTR\", \"Remaining Balance Date\",\n          \"Supplier Buy Rate\", \"Supplier Advance Pay\", \"Supplier Advance Paid\",\n          \"Supplier Mis Charges\", \"Supplier Invoice No.\", \"Supplier Advance UTR\",\n          \"Supplier Advance Pay-Date\", \"Supplier Balance Pending\", \"Supplier Balance Paid Amount\",\n          \"Supplier Balance Paid UTR\", \"Supplier Balance Paid Date\", \"Remaining Supplier Amount\",\n          \"POD Rec Date\", \"POD Send to Customer Date\", \"POD Docket No.\", \"POD Rec By Customer\",\n          \"POD Deduction If any\", \"Gross Profit\", \"Bad Debts\", \"Net Profit\",\n          \"isCurrent\", \"createdBy\", \"createdAt\"\n        ].map((col, colIndex) => (\n          <td key={colIndex}>\n            <input\n              type=\"text\"\n              value={\n                typeof row[col] === \"object\" && row[col]?.seconds\n                  ? new Date(row[col].seconds * 1000).toLocaleString()\n                  : String(row[col] ?? \"\")\n              }\n              onChange={(e) => {\n                const updated = [...records];\n                updated[rowIndex][col] = e.target.value;\n                setRecords(updated);\n              }}\n              style={{ width: \"120px\" }}\n              readOnly={readOnlyFields.includes(col)}\n            />\n          </td>\n        ))}\n        <td>\n          <button onClick={() => handleUpdate(row)}>Save</button>\n          <button\n            onClick={() => {\n              if (window.confirm(\"Are you sure you want to delete this record?\")) {\n                handleDelete(row.id);\n              }\n            }}\n            style={{ marginLeft: \"8px\", color: \"red\" }}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  })}\n</tbody>\n\n  </table>\n</div>\n\n\n\n      {history.length > 0 && (\n  <>\n    <hr />\n    <h4>🔍 Full Version History</h4>\n\n    {/* ✅ Dynamically build all unique columns across all rows */}\n    {(() => {\n      const allKeys = new Set();\n      history.forEach(row => Object.keys(row).forEach(k => allKeys.add(k)));\n      const columnList = Array.from(allKeys);\n\n      return (\n        <div className=\"table-scroll-x\">\n  <table>\n    <thead>\n      <tr>\n        {columnList.map((col) => (\n          <th key={col}>{col}</th>\n        ))}\n      </tr>\n    </thead>\n    <tbody>\n      {[...history]\n        .sort((a, b) => {\n          if (a.isCurrent) return -1;\n          if (b.isCurrent) return 1;\n          const aTime = a.expiredAt?.seconds || 0;\n          const bTime = b.expiredAt?.seconds || 0;\n          return bTime - aTime;\n        })\n        .map((row, i) => (\n          <tr key={i}>\n            {columnList.map((col, j) => (\n              <td key={j}>\n                {typeof row[col] === 'object' && row[col]?.seconds\n                  ? new Date(row[col].seconds * 1000).toLocaleString()\n                  : String(row[col] ?? \"\")}\n              </td>\n            ))}\n          </tr>\n        ))}\n    </tbody>\n  </table>\n</div>\n      );\n    })()}\n  </>\n)}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}