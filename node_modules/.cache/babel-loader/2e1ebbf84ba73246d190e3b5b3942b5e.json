{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\components\\\\UploadForm.js\";\nimport React, { useState } from \"react\";\nimport { addDoc, collection, doc, runTransaction } from \"firebase/firestore\";\nimport * as XLSX from \"xlsx\";\nimport { db, auth } from \"../firebase\";\nconst labelToKey = {\n  \"Placement Date\": \"placementDate\",\n  \"Delivery Date\": \"deliveryDate\",\n  \"Month\": \"months\",\n  \"Origin\": \"origin\",\n  \"Destination\": \"destination\",\n  \"Customer\": \"customer\",\n  \"Customer Type\": \"customerType\",\n  \"Vehicle Number\": \"vehicleNo\",\n  \"Vendor\": \"vendor\",\n  \"Sales Rate\": \"salesRate\",\n  \"Buy Rate\": \"buyRate\",\n  // Customer Master\n  \"Customer -> To be Advance (Sales)\": \"customerMaster.toBeAdvance\",\n  \"Customer -> Advance / Payment Received\": \"customerMaster.advanceReceived\",\n  \"Customer -> Adv Deviation (as on Date)\": \"customerMaster.advDeviation\",\n  \"Customer -> Advance Rec Date\": \"customerMaster.advanceRecDate\",\n  \"Customer -> Validated-Advance UTR Description\": \"customerMaster.validatedAdvanceUTRDescription\",\n  \"Customer -> Validated UTR - Advance Amount\": \"customerMaster.validatedAdvanceAmount\",\n  \"Customer -> Balance\": \"customerMaster.balance\",\n  \"Customer -> Processing Charges\": \"customerMaster.processingCharges\",\n  \"Customer -> Inward-Mis Charges\": \"customerMaster.inwardMisCharges\",\n  \"Customer -> Outward-Mis Charges\": \"customerMaster.outwardMisCharges\",\n  \"Customer -> Bal Received\": \"customerMaster.balanceReceived\",\n  \"Customer -> Remaining Balance\": \"customerMaster.remainingBalance\",\n  \"Customer -> Balance Rec Date\": \"customerMaster.balanceRecDate\",\n  \"Customer -> Validated-Balance UTR\": \"customerMaster.validatedBalanceUTR\",\n  \"Customer -> Validate Balance UTR-Amount\": \"customerMaster.validatedBalanceUTRAmount\",\n  // Vendor Master\n  \"Vendor -> Outward Payment\": \"vendorMaster.vendorOutwardPayment\",\n  \"Vendor -> Paid Amount\": \"vendorMaster.paidAmount\",\n  \"Vendor -> Balance Pending\": \"vendorMaster.balancePending\",\n  \"Vendor -> Vendor Remark\": \"vendorMaster.vendorRemark\",\n  // POD Master\n  \"POD -> POD Vendor-Date\": \"podMaster.podVendorDate\",\n  \"POD -> POD-Send to Customer Date\": \"podMaster.podSendToCustomerDate\",\n  \"POD -> Doc No\": \"podMaster.docNo\",\n  \"POD -> POD-Customer Rec\": \"podMaster.podCustomerRec\",\n  \"POD -> Today\": \"podMaster.today\",\n  \"POD -> Balance Overdue Days\": \"podMaster.balanceOverdueDays\",\n  \"POD -> To be Collected Amount\": \"podMaster.toBeCollectedAmount\"\n};\nconst UploadForm = () => {\n  const [previewData, setPreviewData] = useState([]);\n  const [statusMap, setStatusMap] = useState({});\n  const [fleetNumbers, setFleetNumbers] = useState({});\n  const generateTemplate = () => {\n    const headers = Object.keys(labelToKey);\n    const sampleRow = {};\n    headers.forEach(header => {\n      if (header.toLowerCase().includes(\"date\")) {\n        sampleRow[header] = \"01-01-2025\"; // DD-MM-YYYY\n      } else if (header.toLowerCase() === \"month\" || header.toLowerCase().includes(\"month\")) {\n        sampleRow[header] = \"July-2025\"; // Month format\n      } else if (header.toLowerCase().includes(\"rate\") || header.toLowerCase().includes(\"amount\")) {\n        sampleRow[header] = \"10000\";\n      } else if (header.toLowerCase().includes(\"number\") || header.toLowerCase().includes(\"no\")) {\n        sampleRow[header] = \"ABC123\";\n      } else {\n        sampleRow[header] = \"Sample\";\n      }\n    });\n    const worksheet = XLSX.utils.json_to_sheet([sampleRow]);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Template\");\n    XLSX.writeFile(workbook, \"FleetUploadTemplate.xlsx\");\n  };\n  const getMappedKey = label => labelToKey[label.trim()] || null;\n  const parseExcel = file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const workbook = XLSX.read(e.target.result, {\n        type: \"binary\"\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const raw = XLSX.utils.sheet_to_json(sheet, {\n        header: 1,\n        defval: \"\",\n        blankrows: false\n      });\n      const headers = raw[0];\n      const rows = raw.slice(1).map(row => {\n        const obj = {};\n        headers.forEach((h, j) => {\n          const key = getMappedKey(h);\n          if (key) obj[key] = row[j];\n        });\n        return obj;\n      });\n      setPreviewData(rows);\n      setStatusMap({});\n      setFleetNumbers({});\n    };\n    reader.readAsBinaryString(file);\n  };\n  const getNextFleetNumber = async () => {\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\n    const newFleetNo = await runTransaction(db, async transaction => {\n      const docSnap = await transaction.get(counterRef);\n      const current = docSnap.data().nextFleetNo || 1;\n      transaction.update(counterRef, {\n        nextFleetNo: current + 1\n      });\n      return current;\n    });\n    return newFleetNo;\n  };\n  const saveRow = async (row, i) => {\n    const user = auth.currentUser;\n    try {\n      const fleetNo = await getNextFleetNumber();\n      const enriched = {\n        ...row,\n        fleetNumber: fleetNo,\n        createdAt: new Date(),\n        createdBy: (user === null || user === void 0 ? void 0 : user.email) || \"anonymous\",\n        isCurrent: true,\n        versionDate: new Date()\n      };\n      await addDoc(collection(db, \"fleet_records\"), enriched);\n      setStatusMap(prev => ({\n        ...prev,\n        [i]: \"✅ Saved\"\n      }));\n      setFleetNumbers(prev => ({\n        ...prev,\n        [i]: fleetNo\n      }));\n    } catch (err) {\n      setStatusMap(prev => ({\n        ...prev,\n        [i]: \"❌ Failed\"\n      }));\n    }\n  };\n  const saveAll = async () => {\n    for (let i = 0; i < previewData.length; i++) {\n      if (!statusMap[i]) await saveRow(previewData[i], i);\n    }\n  };\n  const handleEdit = (i, key, value) => {\n    const updated = [...previewData];\n    updated[i][key] = value;\n    setPreviewData(updated);\n  };\n  const deleteRow = i => {\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\n    const s = {\n      ...statusMap\n    };\n    delete s[i];\n    const f = {\n      ...fleetNumbers\n    };\n    delete f[i];\n    setStatusMap(s);\n    setFleetNumbers(f);\n  };\n  const resetTable = () => {\n    setPreviewData([]);\n    setStatusMap({});\n    setFleetNumbers({});\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, \"Upload Excel & Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls\",\n    onChange: e => {\n      var _e$target$files;\n      const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n      if (file) {\n        parseExcel(file);\n        setTimeout(() => {\n          e.target.value = \"\";\n        }, 100);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generateTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, \"\\u2B07\\uFE0F Download Template\")), previewData.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCC4 Preview Table (Excel Upload)\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCBE Save All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTable,\n    style: {\n      marginLeft: 10,\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"\\uD83E\\uDDF9 Clear\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, \"Fleet Number\"), Object.keys(previewData[0]).map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 61\n    }\n  }, key)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 19\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, previewData.map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, fleetNumbers[i] || \"\"), Object.keys(row).map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: row[key],\n    onChange: e => handleEdit(i, key, e.target.value),\n    style: {\n      width: \"120px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, statusMap[i] || \"⏳ Pending\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveRow(row, i),\n    disabled: statusMap[i] === \"✅ Saved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteRow(i),\n    style: {\n      marginLeft: 6,\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 23\n    }\n  }, \"Delete\")))))))));\n};\nexport default UploadForm;","map":{"version":3,"names":["React","useState","addDoc","collection","doc","runTransaction","XLSX","db","auth","labelToKey","UploadForm","previewData","setPreviewData","statusMap","setStatusMap","fleetNumbers","setFleetNumbers","generateTemplate","headers","Object","keys","sampleRow","forEach","header","toLowerCase","includes","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","getMappedKey","label","trim","parseExcel","file","reader","FileReader","onload","e","read","target","result","type","sheet","Sheets","SheetNames","raw","sheet_to_json","defval","blankrows","rows","slice","map","row","obj","h","j","key","readAsBinaryString","getNextFleetNumber","counterRef","newFleetNo","transaction","docSnap","get","current","data","nextFleetNo","update","saveRow","i","user","currentUser","fleetNo","enriched","fleetNumber","createdAt","Date","createdBy","email","isCurrent","versionDate","prev","err","saveAll","length","handleEdit","value","updated","deleteRow","filter","_","idx","s","f","resetTable","createElement","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","accept","onChange","_e$target$files","files","setTimeout","onClick","Fragment","marginTop","marginLeft","color","className","width","disabled"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addDoc, collection, doc, runTransaction } from \"firebase/firestore\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { db, auth } from \"../firebase\";\r\n\r\nconst labelToKey = {\r\n  \"Placement Date\": \"placementDate\",\r\n  \"Delivery Date\": \"deliveryDate\",\r\n  \"Month\": \"months\",\r\n  \"Origin\": \"origin\",\r\n  \"Destination\": \"destination\",\r\n  \"Customer\": \"customer\",\r\n  \"Customer Type\": \"customerType\",\r\n  \"Vehicle Number\": \"vehicleNo\",\r\n  \"Vendor\": \"vendor\",\r\n  \"Sales Rate\": \"salesRate\",\r\n  \"Buy Rate\": \"buyRate\",\r\n  // Customer Master\r\n  \"Customer -> To be Advance (Sales)\": \"customerMaster.toBeAdvance\",\r\n  \"Customer -> Advance / Payment Received\": \"customerMaster.advanceReceived\",\r\n  \"Customer -> Adv Deviation (as on Date)\": \"customerMaster.advDeviation\",\r\n  \"Customer -> Advance Rec Date\": \"customerMaster.advanceRecDate\",\r\n  \"Customer -> Validated-Advance UTR Description\": \"customerMaster.validatedAdvanceUTRDescription\",\r\n  \"Customer -> Validated UTR - Advance Amount\": \"customerMaster.validatedAdvanceAmount\",\r\n  \"Customer -> Balance\": \"customerMaster.balance\",\r\n  \"Customer -> Processing Charges\": \"customerMaster.processingCharges\",\r\n  \"Customer -> Inward-Mis Charges\": \"customerMaster.inwardMisCharges\",\r\n  \"Customer -> Outward-Mis Charges\": \"customerMaster.outwardMisCharges\",\r\n  \"Customer -> Bal Received\": \"customerMaster.balanceReceived\",\r\n  \"Customer -> Remaining Balance\": \"customerMaster.remainingBalance\",\r\n  \"Customer -> Balance Rec Date\": \"customerMaster.balanceRecDate\",\r\n  \"Customer -> Validated-Balance UTR\": \"customerMaster.validatedBalanceUTR\",\r\n  \"Customer -> Validate Balance UTR-Amount\": \"customerMaster.validatedBalanceUTRAmount\",\r\n  // Vendor Master\r\n  \"Vendor -> Outward Payment\": \"vendorMaster.vendorOutwardPayment\",\r\n  \"Vendor -> Paid Amount\": \"vendorMaster.paidAmount\",\r\n  \"Vendor -> Balance Pending\": \"vendorMaster.balancePending\",\r\n  \"Vendor -> Vendor Remark\": \"vendorMaster.vendorRemark\",\r\n  // POD Master\r\n  \"POD -> POD Vendor-Date\": \"podMaster.podVendorDate\",\r\n  \"POD -> POD-Send to Customer Date\": \"podMaster.podSendToCustomerDate\",\r\n  \"POD -> Doc No\": \"podMaster.docNo\",\r\n  \"POD -> POD-Customer Rec\": \"podMaster.podCustomerRec\",\r\n  \"POD -> Today\": \"podMaster.today\",\r\n  \"POD -> Balance Overdue Days\": \"podMaster.balanceOverdueDays\",\r\n  \"POD -> To be Collected Amount\": \"podMaster.toBeCollectedAmount\"\r\n};\r\n\r\nconst UploadForm = () => {\r\n  const [previewData, setPreviewData] = useState([]);\r\n  const [statusMap, setStatusMap] = useState({});\r\n  const [fleetNumbers, setFleetNumbers] = useState({});\r\n\r\n  const generateTemplate = () => {\r\n  const headers = Object.keys(labelToKey);\r\n  const sampleRow = {};\r\n  headers.forEach(header => {\r\n    if (header.toLowerCase().includes(\"date\")) {\r\n      sampleRow[header] = \"01-01-2025\"; // DD-MM-YYYY\r\n    } else if (header.toLowerCase() === \"month\" || header.toLowerCase().includes(\"month\")) {\r\n      sampleRow[header] = \"July-2025\"; // Month format\r\n    } else if (header.toLowerCase().includes(\"rate\") || header.toLowerCase().includes(\"amount\")) {\r\n      sampleRow[header] = \"10000\";\r\n    } else if (header.toLowerCase().includes(\"number\") || header.toLowerCase().includes(\"no\")) {\r\n      sampleRow[header] = \"ABC123\";\r\n    } else {\r\n      sampleRow[header] = \"Sample\";\r\n    }\r\n  });\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet([sampleRow]);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Template\");\r\n  XLSX.writeFile(workbook, \"FleetUploadTemplate.xlsx\");\r\n};\r\n\r\n\r\n  const getMappedKey = (label) => labelToKey[label.trim()] || null;\r\n\r\n  const parseExcel = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const raw = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: \"\", blankrows: false });\r\n\r\n      const headers = raw[0];\r\n      const rows = raw.slice(1).map((row) => {\r\n        const obj = {};\r\n        headers.forEach((h, j) => {\r\n          const key = getMappedKey(h);\r\n          if (key) obj[key] = row[j];\r\n        });\r\n        return obj;\r\n      });\r\n\r\n      setPreviewData(rows);\r\n      setStatusMap({});\r\n      setFleetNumbers({});\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const getNextFleetNumber = async () => {\r\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\r\n    const newFleetNo = await runTransaction(db, async (transaction) => {\r\n      const docSnap = await transaction.get(counterRef);\r\n      const current = docSnap.data().nextFleetNo || 1;\r\n      transaction.update(counterRef, { nextFleetNo: current + 1 });\r\n      return current;\r\n    });\r\n    return newFleetNo;\r\n  };\r\n\r\n  const saveRow = async (row, i) => {\r\n    const user = auth.currentUser;\r\n    try {\r\n      const fleetNo = await getNextFleetNumber();\r\n      const enriched = {\r\n        ...row,\r\n        fleetNumber: fleetNo,\r\n        createdAt: new Date(),\r\n        createdBy: user?.email || \"anonymous\",\r\n        isCurrent: true,\r\n        versionDate: new Date(),\r\n      };\r\n      await addDoc(collection(db, \"fleet_records\"), enriched);\r\n      setStatusMap((prev) => ({ ...prev, [i]: \"✅ Saved\" }));\r\n      setFleetNumbers((prev) => ({ ...prev, [i]: fleetNo }));\r\n    } catch (err) {\r\n      setStatusMap((prev) => ({ ...prev, [i]: \"❌ Failed\" }));\r\n    }\r\n  };\r\n\r\n  const saveAll = async () => {\r\n    for (let i = 0; i < previewData.length; i++) {\r\n      if (!statusMap[i]) await saveRow(previewData[i], i);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (i, key, value) => {\r\n    const updated = [...previewData];\r\n    updated[i][key] = value;\r\n    setPreviewData(updated);\r\n  };\r\n\r\n  const deleteRow = (i) => {\r\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\r\n    const s = { ...statusMap }; delete s[i];\r\n    const f = { ...fleetNumbers }; delete f[i];\r\n    setStatusMap(s);\r\n    setFleetNumbers(f);\r\n  };\r\n\r\n  const resetTable = () => {\r\n    setPreviewData([]);\r\n    setStatusMap({});\r\n    setFleetNumbers({});\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 40 }}>\r\n      <h4>Upload Excel & Preview</h4>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xlsx, .xls\"\r\n          onChange={(e) => {\r\n            const file = e.target.files?.[0];\r\n            if (file) {\r\n              parseExcel(file);\r\n              setTimeout(() => { e.target.value = \"\"; }, 100);\r\n            }\r\n          }}\r\n        />\r\n        <button onClick={generateTemplate}>⬇️ Download Template</button>\r\n      </div>\r\n\r\n      {previewData.length > 0 && (\r\n        <>\r\n          <h5 style={{ marginTop: 20 }}>📄 Preview Table (Excel Upload)</h5>\r\n          <button onClick={saveAll}>💾 Save All</button>\r\n          <button onClick={resetTable} style={{ marginLeft: 10, color: \"red\" }}>🧹 Clear</button>\r\n          <div className=\"table-scroll-x\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Fleet Number</th>\r\n                  {Object.keys(previewData[0]).map((key) => <th key={key}>{key}</th>)}\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {previewData.map((row, i) => (\r\n                  <tr key={i}>\r\n                    <td>{fleetNumbers[i] || \"\"}</td>\r\n                    {Object.keys(row).map((key) => (\r\n                      <td key={key}>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={row[key]}\r\n                          onChange={(e) => handleEdit(i, key, e.target.value)}\r\n                          style={{ width: \"120px\" }}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    <td>{statusMap[i] || \"⏳ Pending\"}</td>\r\n                    <td>\r\n                      <button onClick={() => saveRow(row, i)} disabled={statusMap[i] === \"✅ Saved\"}>Save</button>\r\n                      <button onClick={() => deleteRow(i)} style={{ marginLeft: 6, color: \"red\" }}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}