{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { collection, query, where, getDocs, getDoc, updateDoc, deleteDoc, doc, addDoc } from \"firebase/firestore\";\nimport { auth, db } from \"./firebase\";\nimport Auth from \"./components/Auth\";\nimport ManualEntryForm from \"./components/ManualEntryForm\";\nimport UploadForm from \"./components/UploadForm\";\nimport \"./App.css\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport * as XLSX from \"xlsx\";\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nconst dateFieldKeys = [\"date\", \"deliveryDate\", \"customerMaster.advanceRecDate\", \"customerMaster.balanceRecDate\", \"customerMaster.advDeviation\", \"customerMaster.validatedAdvanceUTRDescription\", \"customerMaster.validatedAdvanceAmount\", \"customerMaster.validatedBalanceUTR\", \"customerMaster.validatedBalanceUTRAmount\", \"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.podCustomerRec\", \"podMaster.today\"];\nconst finalColumnOrder = [\"indentNumber\", \"date\", \"deliveryDate\", \"months\", \"origin\", \"destination\", \"customer\", \"customerType\", \"vehicleNo\", \"vendor\", \"salesRate\", \"buyRate\", \"createdAt\", \"createdBy\", \"versionDate\", \"isCurrent\", \"updateDescription\", \"expiredAt\",\n// Customer Master\n\"customerMaster.toBeAdvance\", \"customerMaster.advanceReceived\", \"customerMaster.advDeviation\", \"customerMaster.advanceRecDate\", \"customerMaster.validatedAdvanceUTRDescription\", \"customerMaster.validatedAdvanceAmount\", \"customerMaster.balance\", \"customerMaster.processingCharges\", \"customerMaster.inwardMisCharges\", \"customerMaster.outwardMisCharges\", \"customerMaster.balanceReceived\", \"customerMaster.remainingBalance\", \"customerMaster.balanceRecDate\", \"customerMaster.validatedBalanceUTR\", \"customerMaster.validatedBalanceUTRAmount\",\n// Vendor Master\n\"vendorMaster.vendorOutwardPayment\", \"vendorMaster.paidAmount\", \"vendorMaster.balancePending\", \"vendorMaster.vendorRemark\",\n// POD Master\n\"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.docNo\", \"podMaster.podCustomerRec\", \"podMaster.today\", \"podMaster.balanceOverdueDays\", \"podMaster.toBeCollectedAmount\"];\nconst columnLabels = {\n  indentNumber: \"Indent Number\",\n  date: \"Placement Date\",\n  deliveryDate: \"Delivery Date\",\n  months: \"Month\",\n  origin: \"Origin\",\n  destination: \"Destination\",\n  customer: \"Customer\",\n  customerType: \"Customer Type\",\n  vehicleNo: \"Vehicle Number\",\n  vendor: \"Vendor\",\n  salesRate: \"Sales Rate\",\n  buyRate: \"Buy Rate\",\n  createdAt: \"Created At\",\n  createdBy: \"Created By\",\n  versionDate: \"Version Date\",\n  isCurrent: \"Is Current\",\n  updateDescription: \"Update Description\",\n  expiredAt: \"Expired At\",\n  // Customer Master\n  \"customerMaster.toBeAdvance\": \"Customer Master -> To be Advance (Sales)\",\n  \"customerMaster.advanceReceived\": \"Customer Master -> Advance / Payment Received\",\n  \"customerMaster.advDeviation\": \"Customer Master -> Adv Deviation (as on Date)\",\n  \"customerMaster.advanceRecDate\": \"Customer Master -> Advance Rec Date\",\n  \"customerMaster.validatedAdvanceUTRDescription\": \"Customer Master -> Validated-Advance UTR Description\",\n  \"customerMaster.validatedAdvanceAmount\": \"Customer Master -> Validated UTR - Advance Amount\",\n  \"customerMaster.balance\": \"Customer Master -> Balance\",\n  \"customerMaster.processingCharges\": \"Customer Master -> Processing Charges\",\n  \"customerMaster.inwardMisCharges\": \"Customer Master -> Inward-Mis Charges\",\n  \"customerMaster.outwardMisCharges\": \"Customer Master -> Outward-Mis Charges\",\n  \"customerMaster.balanceReceived\": \"Customer Master -> Bal Received\",\n  \"customerMaster.remainingBalance\": \"Customer Master -> Remaining Balance\",\n  \"customerMaster.balanceRecDate\": \"Customer Master -> Balance Rec Date\",\n  \"customerMaster.validatedBalanceUTR\": \"Customer Master -> Validated-Balance UTR\",\n  \"customerMaster.validatedBalanceUTRAmount\": \"Customer Master -> Validate Balance UTR-Amount\",\n  // Vendor Master\n  \"vendorMaster.vendorOutwardPayment\": \"Vendor Master -> Outward Payment\",\n  \"vendorMaster.paidAmount\": \"Vendor Master -> Paid Amount\",\n  \"vendorMaster.balancePending\": \"Vendor Master -> Balance Pending\",\n  \"vendorMaster.vendorRemark\": \"Vendor Master -> Vendor Remark\",\n  // POD Master\n  \"podMaster.podVendorDate\": \"POD Master -> POD Vendor-Date\",\n  \"podMaster.podSendToCustomerDate\": \"POD Master -> POD-Send to Customer Date\",\n  \"podMaster.docNo\": \"POD Master -> Doc No\",\n  \"podMaster.podCustomerRec\": \"POD Master -> POD-Customer Rec\",\n  \"podMaster.today\": \"POD Master -> Today\",\n  \"podMaster.balanceOverdueDays\": \"POD Master -> Balance Overdue Days\",\n  \"podMaster.toBeCollectedAmount\": \"POD Master -> To be Collected Amount\"\n};\nconst flattenObject = (obj, prefix = \"\") => {\n  let result = {};\n  for (const key in obj) {\n    const value = obj[key];\n    const fullKey = prefix ? `${prefix}.${key}` : key;\n    if (value && typeof value === \"object\" && !value.seconds) {\n      Object.assign(result, flattenObject(value, fullKey));\n    } else {\n      result[fullKey] = value;\n    }\n  }\n  return result;\n};\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [authLoading, setAuthLoading] = useState(true);\n  const [records, setRecords] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  const [searchField, setSearchField] = useState(\"indentNumber\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [originalRecords, setOriginalRecords] = useState({});\n  const [isSearching, setIsSearching] = useState(false);\n  const [isExporting, setIsExporting] = useState(false);\n  const [searchAttempted, setSearchAttempted] = useState(false);\n  const [activeOnly, setActiveOnly] = useState(false);\n  const [includeCustomer, setIncludeCustomer] = useState(false);\n  const [includeVendor, setIncludeVendor] = useState(false);\n  const [includePOD, setIncludePOD] = useState(false);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      setAuthLoading(false);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleExportToExcel = () => {\n    if (history.length === 0) {\n      toast.info(\"❌ No history data to export.\");\n      return;\n    }\n\n    // Define columns to include\n    const fixedCols = finalColumnOrder.slice(0, 17); // First 17 are fixed\n    const customerCols = finalColumnOrder.slice(17, 32);\n    const vendorCols = finalColumnOrder.slice(32, 36);\n    const podCols = finalColumnOrder.slice(36);\n    const selectedCols = [...fixedCols, ...(includeCustomer ? customerCols : []), ...(includeVendor ? vendorCols : []), ...(includePOD ? podCols : [])];\n    const exportData = history.map(row => {\n      const flatRow = {};\n      selectedCols.forEach(col => {\n        const val = row[col];\n        flatRow[col] = dateFieldKeys.includes(col) && (val === null || val === void 0 ? void 0 : val.seconds) ? new Date(val.seconds * 1000).toLocaleDateString(\"en-GB\") : (val === null || val === void 0 ? void 0 : val.seconds) ? new Date(val.seconds * 1000).toLocaleString() : val !== null && val !== void 0 ? val : \"\";\n      });\n      return flatRow;\n    });\n    const worksheet = XLSX.utils.json_to_sheet(exportData);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Filtered Export\");\n    const fileName = `FilteredExport_${new Date().toISOString().split(\"T\")[0]}.xlsx`;\n    XLSX.writeFile(workbook, fileName);\n  };\n  const handleSearch = async () => {\n    setIsSearching(true);\n    try {\n      const fleetRef = collection(db, \"fleet_records\");\n      let q;\n      if (searchField === \"Date\") {\n        const fromDate = new Date(startDate);\n        const toDate = new Date(endDate + \"T23:59:59\");\n        if (fromDate > toDate) {\n          toast.warn(\"⚠️ 'From' date cannot be after 'To' date.\");\n          setIsSearching(false);\n          return;\n        }\n        q = query(fleetRef, ...(activeOnly ? [where(\"isCurrent\", \"==\", true)] : []), where(\"createdAt\", \">=\", fromDate), where(\"createdAt\", \"<=\", toDate));\n      } else if (searchKey) {\n        const key = searchField === \"indentNumber\" ? Number(searchKey) : searchKey;\n        q = query(fleetRef, where(searchField, \"==\", key), ...(activeOnly ? [where(\"isCurrent\", \"==\", true)] : []));\n      } else {\n        toast.warn(\"🔍 Please enter a search value.\");\n        setIsSearching(false);\n        return;\n      }\n      setSearchAttempted(true);\n      const snapshot = await getDocs(q);\n      const allVersions = [];\n      const currentOnly = [];\n      snapshot.forEach(docSnap => {\n        const rawData = {\n          id: docSnap.id,\n          ...docSnap.data()\n        };\n        const row = flattenObject(rawData);\n        allVersions.push(row);\n        if (row.isCurrent) currentOnly.push(row);\n      });\n      allVersions.sort((a, b) => {\n        if (a.isCurrent && !b.isCurrent) return -1;\n        if (!a.isCurrent && b.isCurrent) return 1;\n        return b.indentNumber - a.indentNumber;\n      });\n\n      // ✅ Sort currentOnly also by indentNumber descending\n      currentOnly.sort((a, b) => b.indentNumber - a.indentNumber);\n      if (searchField === \"indentNumber\") {\n        setRecords(currentOnly);\n        setHistory(allVersions);\n      } else {\n        setRecords([]);\n        setHistory(allVersions);\n      }\n      if (snapshot.empty || allVersions.length === 0) {\n        toast.info(\"❌ No records found.\");\n      }\n    } catch (error) {\n      toast.error(\"❌ Search failed: \" + error.message);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const normalize = val => {\n    if (val === null || val === undefined) return \"\";\n    return typeof val === \"object\" && val.seconds ? new Date(val.seconds * 1000).toISOString() : String(val).trim();\n  };\n  const getChangedFields = (current, original) => {\n    const ignored = [\"versionDate\", \"expiredAt\", \"isCurrent\", \"updateDescription\", \"createdAt\", \"createdBy\"];\n    const changed = [];\n    const flatCurrent = flattenObject(current);\n    const flatOriginal = flattenObject(original);\n    for (const key in flatCurrent) {\n      if (ignored.includes(key)) continue;\n      const currVal = normalize(flatCurrent[key]);\n      const origVal = normalize(flatOriginal === null || flatOriginal === void 0 ? void 0 : flatOriginal[key]);\n      if (currVal !== origVal) changed.push(key);\n    }\n    return changed;\n  };\n  const hasMeaningfulChanges = (curr, orig) => getChangedFields(curr, orig).length > 0;\n  const handleUpdate = async row => {\n    try {\n      const {\n        id,\n        indentNumber,\n        ...updatedData\n      } = row;\n      const currentDocSnap = await getDocs(query(collection(db, \"fleet_records\"), where(\"indentNumber\", \"==\", indentNumber), where(\"isCurrent\", \"==\", true)));\n      const oldDoc = currentDocSnap.docs.find(doc => doc.id === id);\n      const oldData = flattenObject((oldDoc === null || oldDoc === void 0 ? void 0 : oldDoc.data()) || {});\n      const cleanData = {};\n      const updateLog = [];\n      for (const key in updatedData) {\n        var _updatedData$key, _oldData$key;\n        if ([\"id\", \"isCurrent\", \"createdAt\", \"createdBy\", \"versionDate\", \"updateDescription\", \"expiredAt\"].includes(key)) continue;\n        const newVal = (_updatedData$key = updatedData[key]) !== null && _updatedData$key !== void 0 ? _updatedData$key : \"\";\n        const oldVal = (_oldData$key = oldData[key]) !== null && _oldData$key !== void 0 ? _oldData$key : \"\";\n        cleanData[key] = newVal;\n        if (String(newVal).trim() !== String(oldVal).trim()) {\n          updateLog.push(`Updated ${key}`);\n        }\n      }\n      if (updateLog.length === 0) {\n        toast.info(\"ℹ️ No changes to update.\");\n        return;\n      }\n      confirmAlert({\n        title: 'Confirm Update',\n        message: `Do you want to update changes: ${updateLog.join(\", \")}?`,\n        buttons: [{\n          label: 'Yes',\n          onClick: async () => {\n            const flattenedOld = flattenObject(oldDoc.data());\n            await updateDoc(doc(db, \"fleet_records\", id), {\n              ...flattenedOld,\n              isCurrent: false,\n              expiredAt: new Date(),\n              modifiedBy: user.email\n            });\n            const newVersion = {\n              ...cleanData,\n              indentNumber,\n              createdAt: new Date(),\n              createdBy: user.email,\n              isCurrent: true,\n              versionDate: new Date(),\n              updateDescription: updateLog.join(\", \")\n            };\n            await addDoc(collection(db, \"fleet_records\"), newVersion);\n            setSearchField(\"indentNumber\");\n            setSearchKey(String(indentNumber));\n            setSearchAttempted(true);\n            setActiveOnly(false);\n            toast.success(\"✅ Record updated.\");\n            setTimeout(() => {\n              handleSearch();\n            }, 500);\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n      return;\n      await updateDoc(doc(db, \"fleet_records\", id), {\n        ...oldDoc.data(),\n        isCurrent: false,\n        expiredAt: new Date(),\n        modifiedBy: user.email\n      });\n      const newVersion = {\n        ...cleanData,\n        indentNumber,\n        createdAt: new Date(),\n        createdBy: user.email,\n        isCurrent: true,\n        versionDate: new Date(),\n        updateDescription: updateLog.join(\", \")\n      };\n      await addDoc(collection(db, \"fleet_records\"), newVersion);\n      toast.success(\"✅ Record updated.\");\n      handleSearch();\n    } catch (error) {\n      toast.error(\"❌ Update failed: \" + error.message);\n    }\n  };\n  const handleDelete = async fleetNumberToDelete => {\n    try {\n      const q = query(collection(db, \"fleet_records\"), where(\"indentNumber\", \"==\", fleetNumberToDelete));\n      const snapshot = await getDocs(q);\n      if (snapshot.empty) {\n        toast.error(\"❌ No records found for deletion.\");\n        return;\n      }\n      confirmAlert({\n        title: 'Confirm Deletion',\n        message: `Delete all versions of Indent No. ${fleetNumberToDelete}?`,\n        buttons: [{\n          label: 'Yes',\n          onClick: async () => {\n            await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \"fleet_records\", docSnap.id))));\n            setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\n            setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\n            toast.success(\"✅ Deleted all versions.\");\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n      return;\n      await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \"fleet_records\", docSnap.id))));\n      setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\n      setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\n      toast.success(\"✅ Deleted all versions.\");\n    } catch (err) {\n      toast.error(\"❌ Delete failed: \" + err.message);\n    }\n  };\n  if (authLoading) return /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 27\n    }\n  }, \"Checking authentication...\");\n  if (!user) return /*#__PURE__*/React.createElement(Auth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxWidth: \"100vw\",\n      overflowX: \"hidden\",\n      padding: \"40px 20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, \"Fleet Billing Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"user-email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }, \"Welcome, \", user.email), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/logo.png\",\n    alt: \"Logo\",\n    style: {\n      height: \"50px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      // ✅ Clear localStorage before logout\n      localStorage.removeItem(\"inProgressFleetNumber\");\n      localStorage.removeItem(\"docId\");\n      localStorage.removeItem(\"fixedFields\");\n      localStorage.removeItem(\"customerFields\");\n      localStorage.removeItem(\"vendorFields\");\n      localStorage.removeItem(\"podFields\");\n      signOut(auth);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, \"Logout\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UploadForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ManualEntryForm, {\n    onAddRow: (row, addToHistory) => {\n      setRecords([row]);\n      if (addToHistory) setHistory([row]);\n\n      // ✅ Store latest indentNumber to maintain search context\n      setSearchField(\"indentNumber\");\n      setSearchKey(String(row.indentNumber));\n      setSearchAttempted(true);\n      setActiveOnly(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }\n  }, \"Search Existing Records\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      gap: \"10px\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"10px\",\n      flexWrap: \"wrap\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: searchField,\n    onChange: e => {\n      setSearchField(e.target.value);\n      setSearchKey(\"\");\n      setStartDate(\"\");\n      setEndDate(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"indentNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }\n  }, \"Indent Number\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Broker\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }\n  }, \"Broker\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }\n  }, \"Date\")), searchField === \"Date\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 9\n    }\n  }, \"From:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: startDate,\n    onChange: e => setStartDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }\n  }, \"To:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: endDate,\n    onChange: e => setEndDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: searchKey,\n    onChange: e => setSearchKey(e.target.value),\n    placeholder: \"Search key\",\n    style: {\n      flex: 1,\n      width: \"250px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      fontSize: \"14px\",\n      marginBottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: activeOnly,\n    onChange: e => setActiveOnly(e.target.checked),\n    style: {\n      marginRight: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }\n  }), \"Show only active\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: handleSearch,\n    disabled: isSearching,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 3\n    }\n  }, isSearching ? \"Searching...\" : \"Search\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 1\n    }\n  }), searchField === \"indentNumber\" && records.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 11\n    }\n  }, \"Editable Current Records\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 17\n    }\n  }, finalColumnOrder.map(col => /*#__PURE__*/React.createElement(\"th\", {\n    key: col,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 21\n    }\n  }, columnLabels[col] || col)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 19\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 15\n    }\n  }, records.map((row, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 19\n    }\n  }, finalColumnOrder.map((col, j) => {\n    var _row$col2;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: dateFieldKeys.includes(col) ? \"date\" : \"text\",\n      value: dateFieldKeys.includes(col) && row[col] ? (() => {\n        try {\n          var _row$col;\n          const d = new Date(((_row$col = row[col]) === null || _row$col === void 0 ? void 0 : _row$col.seconds) * 1000 || row[col]);\n          return isNaN(d.getTime()) ? \"\" : new Date(d.getTime() - d.getTimezoneOffset() * 60000).toISOString().split(\"T\")[0]; // yyyy-mm-dd (used for input)\n        } catch {\n          return \"\";\n        }\n      })() : (_row$col2 = row[col]) !== null && _row$col2 !== void 0 ? _row$col2 : \"\",\n      onChange: e => {\n        const updated = [...records];\n        const val = e.target.value;\n        if (dateFieldKeys.includes(col)) {\n          updated[rowIndex][col] = val ? new Date(val) : \"\";\n        } else {\n          updated[rowIndex][col] = val;\n        }\n        setRecords(updated);\n      },\n      readOnly: [\"indentNumber\", \"createdAt\", \"createdBy\", \"isCurrent\", \"updateDescription\"].includes(col),\n      style: {\n        width: \"140px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 25\n      }\n    }));\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save\",\n    onClick: () => handleUpdate(row),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 23\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => handleDelete(row.indentNumber),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 605,\n      columnNumber: 23\n    }\n  }, \"Delete\")))))))), history.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 3\n    }\n  }, \"\\uD83D\\uDD0D Full Version History\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      gap: \"20px\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: includeCustomer,\n    onChange: e => setIncludeCustomer(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 5\n    }\n  }), \"Include Customer\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: includeVendor,\n    onChange: e => setIncludeVendor(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 5\n    }\n  }), \"Include Vendor\"), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: includePOD,\n    onChange: e => setIncludePOD(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 5\n    }\n  }), \"Include POD\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExportToExcel,\n    disabled: history.length === 0,\n    className: \"export-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 3\n    }\n  }, \"\\u2B07\\uFE0F Export Selected\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 15\n    }\n  }, finalColumnOrder.map(col => /*#__PURE__*/React.createElement(\"th\", {\n    key: col,\n    className: \"tight-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 19\n    }\n  }, columnLabels[col] || col)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 13\n    }\n  }, [...history].sort((a, b) => {\n    var _a$expiredAt, _b$expiredAt;\n    if (a.isCurrent) return -1;\n    if (b.isCurrent) return 1;\n    const aTime = ((_a$expiredAt = a.expiredAt) === null || _a$expiredAt === void 0 ? void 0 : _a$expiredAt.seconds) || 0;\n    const bTime = ((_b$expiredAt = b.expiredAt) === null || _b$expiredAt === void 0 ? void 0 : _b$expiredAt.seconds) || 0;\n    return bTime - aTime;\n  }).map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 19\n    }\n  }, finalColumnOrder.map((col, j) => {\n    var _row$col3, _row$col4, _row$col5;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 23\n      }\n    }, dateFieldKeys.includes(col) && ((_row$col3 = row[col]) === null || _row$col3 === void 0 ? void 0 : _row$col3.seconds) ? new Date(row[col].seconds * 1000).toLocaleDateString(\"en-GB\") : typeof row[col] === \"object\" && ((_row$col4 = row[col]) === null || _row$col4 === void 0 ? void 0 : _row$col4.seconds) ? new Date(row[col].seconds * 1000).toLocaleString() : String((_row$col5 = row[col]) !== null && _row$col5 !== void 0 ? _row$col5 : \"\"));\n  }))))))), searchAttempted && !isSearching && records.length === 0 && history.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      color: \"#888\",\n      marginTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 682,\n      columnNumber: 9\n    }\n  }, \"No records to display.\"), /*#__PURE__*/React.createElement(ToastContainer, {\n    position: \"bottom-right\",\n    autoClose: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"30px\",\n      color: \"#666\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 7\n    }\n  }, \"\\xA9 2025 Fleet Billing System\"));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","onAuthStateChanged","signOut","collection","query","where","getDocs","getDoc","updateDoc","deleteDoc","doc","addDoc","auth","db","Auth","ManualEntryForm","UploadForm","toast","ToastContainer","XLSX","confirmAlert","dateFieldKeys","finalColumnOrder","columnLabels","indentNumber","date","deliveryDate","months","origin","destination","customer","customerType","vehicleNo","vendor","salesRate","buyRate","createdAt","createdBy","versionDate","isCurrent","updateDescription","expiredAt","flattenObject","obj","prefix","result","key","value","fullKey","seconds","Object","assign","App","user","setUser","authLoading","setAuthLoading","records","setRecords","history","setHistory","searchKey","setSearchKey","searchField","setSearchField","startDate","setStartDate","endDate","setEndDate","originalRecords","setOriginalRecords","isSearching","setIsSearching","isExporting","setIsExporting","searchAttempted","setSearchAttempted","activeOnly","setActiveOnly","includeCustomer","setIncludeCustomer","includeVendor","setIncludeVendor","includePOD","setIncludePOD","unsubscribe","currentUser","handleExportToExcel","length","info","fixedCols","slice","customerCols","vendorCols","podCols","selectedCols","exportData","map","row","flatRow","forEach","col","val","includes","Date","toLocaleDateString","toLocaleString","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","fileName","toISOString","split","writeFile","handleSearch","fleetRef","q","fromDate","toDate","warn","Number","snapshot","allVersions","currentOnly","docSnap","rawData","id","data","push","sort","a","b","empty","error","message","normalize","undefined","String","trim","getChangedFields","current","original","ignored","changed","flatCurrent","flatOriginal","currVal","origVal","hasMeaningfulChanges","curr","orig","handleUpdate","updatedData","currentDocSnap","oldDoc","docs","find","oldData","cleanData","updateLog","_updatedData$key","_oldData$key","newVal","oldVal","title","join","buttons","label","onClick","flattenedOld","modifiedBy","email","newVersion","success","setTimeout","handleDelete","fleetNumberToDelete","Promise","all","prev","filter","r","err","createElement","style","textAlign","__self","__source","_jsxFileName","lineNumber","columnNumber","maxWidth","overflowX","padding","className","display","alignItems","src","alt","height","localStorage","removeItem","onAddRow","addToHistory","flexWrap","gap","justifyContent","width","onChange","e","target","Fragment","type","placeholder","flex","fontSize","marginBottom","checked","marginRight","disabled","rowIndex","j","_row$col2","_row$col","d","isNaN","getTime","getTimezoneOffset","updated","readOnly","_a$expiredAt","_b$expiredAt","aTime","bTime","i","_row$col3","_row$col4","_row$col5","color","marginTop","position","autoClose"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  getDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n  doc,\r\n  addDoc,\r\n} from \"firebase/firestore\";\r\nimport { auth, db } from \"./firebase\";\r\nimport Auth from \"./components/Auth\";\r\nimport ManualEntryForm from \"./components/ManualEntryForm\";\r\nimport UploadForm from \"./components/UploadForm\";\r\nimport \"./App.css\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\nconst dateFieldKeys = [\r\n  \"date\", \"deliveryDate\", \"customerMaster.advanceRecDate\", \"customerMaster.balanceRecDate\",\r\n  \"customerMaster.advDeviation\", \"customerMaster.validatedAdvanceUTRDescription\",\r\n  \"customerMaster.validatedAdvanceAmount\", \"customerMaster.validatedBalanceUTR\",\r\n  \"customerMaster.validatedBalanceUTRAmount\",\r\n  \"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.podCustomerRec\", \"podMaster.today\"\r\n];\r\n\r\n\r\nconst finalColumnOrder = [\r\n  \"indentNumber\", \"date\",\"deliveryDate\", \"months\", \"origin\", \"destination\", \"customer\", \"customerType\",\r\n  \"vehicleNo\", \"vendor\", \"salesRate\", \"buyRate\", \"createdAt\", \"createdBy\", \"versionDate\",\r\n  \"isCurrent\", \"updateDescription\", \"expiredAt\",\r\n  // Customer Master\r\n  \"customerMaster.toBeAdvance\", \"customerMaster.advanceReceived\", \"customerMaster.advDeviation\",\r\n  \"customerMaster.advanceRecDate\", \"customerMaster.validatedAdvanceUTRDescription\",\r\n  \"customerMaster.validatedAdvanceAmount\", \"customerMaster.balance\", \"customerMaster.processingCharges\",\r\n  \"customerMaster.inwardMisCharges\", \"customerMaster.outwardMisCharges\", \"customerMaster.balanceReceived\",\r\n  \"customerMaster.remainingBalance\", \"customerMaster.balanceRecDate\", \"customerMaster.validatedBalanceUTR\",\r\n  \"customerMaster.validatedBalanceUTRAmount\",\r\n  // Vendor Master\r\n  \"vendorMaster.vendorOutwardPayment\", \"vendorMaster.paidAmount\", \"vendorMaster.balancePending\",\r\n  \"vendorMaster.vendorRemark\",\r\n  // POD Master\r\n  \"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.docNo\",\r\n  \"podMaster.podCustomerRec\", \"podMaster.today\", \"podMaster.balanceOverdueDays\",\r\n  \"podMaster.toBeCollectedAmount\"\r\n];\r\n\r\nconst columnLabels = {\r\n  indentNumber: \"Indent Number\",\r\n  date: \"Placement Date\",\r\n  deliveryDate: \"Delivery Date\",\r\n  months: \"Month\",\r\n  origin: \"Origin\",\r\n  destination: \"Destination\",\r\n  customer: \"Customer\",\r\n  customerType: \"Customer Type\",\r\n  vehicleNo: \"Vehicle Number\",\r\n  vendor: \"Vendor\",\r\n  salesRate: \"Sales Rate\",\r\n  buyRate: \"Buy Rate\",\r\n  createdAt: \"Created At\",\r\n  createdBy: \"Created By\",\r\n  versionDate: \"Version Date\",\r\n  isCurrent: \"Is Current\",\r\n  updateDescription: \"Update Description\",\r\n  expiredAt: \"Expired At\",\r\n\r\n  // Customer Master\r\n  \"customerMaster.toBeAdvance\": \"Customer Master -> To be Advance (Sales)\",\r\n  \"customerMaster.advanceReceived\": \"Customer Master -> Advance / Payment Received\",\r\n  \"customerMaster.advDeviation\": \"Customer Master -> Adv Deviation (as on Date)\",\r\n  \"customerMaster.advanceRecDate\": \"Customer Master -> Advance Rec Date\",\r\n  \"customerMaster.validatedAdvanceUTRDescription\": \"Customer Master -> Validated-Advance UTR Description\",\r\n  \"customerMaster.validatedAdvanceAmount\": \"Customer Master -> Validated UTR - Advance Amount\",\r\n  \"customerMaster.balance\": \"Customer Master -> Balance\",\r\n  \"customerMaster.processingCharges\": \"Customer Master -> Processing Charges\",\r\n  \"customerMaster.inwardMisCharges\": \"Customer Master -> Inward-Mis Charges\",\r\n  \"customerMaster.outwardMisCharges\": \"Customer Master -> Outward-Mis Charges\",\r\n  \"customerMaster.balanceReceived\": \"Customer Master -> Bal Received\",\r\n  \"customerMaster.remainingBalance\": \"Customer Master -> Remaining Balance\",\r\n  \"customerMaster.balanceRecDate\": \"Customer Master -> Balance Rec Date\",\r\n  \"customerMaster.validatedBalanceUTR\": \"Customer Master -> Validated-Balance UTR\",\r\n  \"customerMaster.validatedBalanceUTRAmount\": \"Customer Master -> Validate Balance UTR-Amount\",\r\n\r\n  // Vendor Master\r\n  \"vendorMaster.vendorOutwardPayment\": \"Vendor Master -> Outward Payment\",\r\n  \"vendorMaster.paidAmount\": \"Vendor Master -> Paid Amount\",\r\n  \"vendorMaster.balancePending\": \"Vendor Master -> Balance Pending\",\r\n  \"vendorMaster.vendorRemark\": \"Vendor Master -> Vendor Remark\",\r\n\r\n  // POD Master\r\n  \"podMaster.podVendorDate\": \"POD Master -> POD Vendor-Date\",\r\n  \"podMaster.podSendToCustomerDate\": \"POD Master -> POD-Send to Customer Date\",\r\n  \"podMaster.docNo\": \"POD Master -> Doc No\",\r\n  \"podMaster.podCustomerRec\": \"POD Master -> POD-Customer Rec\",\r\n  \"podMaster.today\": \"POD Master -> Today\",\r\n  \"podMaster.balanceOverdueDays\": \"POD Master -> Balance Overdue Days\",\r\n  \"podMaster.toBeCollectedAmount\": \"POD Master -> To be Collected Amount\"\r\n};\r\n\r\n\r\nconst flattenObject = (obj, prefix = \"\") => {\r\n  let result = {};\r\n  for (const key in obj) {\r\n    const value = obj[key];\r\n    const fullKey = prefix ? `${prefix}.${key}` : key;\r\n    if (value && typeof value === \"object\" && !value.seconds) {\r\n      Object.assign(result, flattenObject(value, fullKey));\r\n    } else {\r\n      result[fullKey] = value;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [authLoading, setAuthLoading] = useState(true);\r\n  const [records, setRecords] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const [searchField, setSearchField] = useState(\"indentNumber\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [originalRecords, setOriginalRecords] = useState({});\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [searchAttempted, setSearchAttempted] = useState(false);\r\n  const [activeOnly, setActiveOnly] = useState(false);\r\n  const [includeCustomer, setIncludeCustomer] = useState(false);\r\n  const [includeVendor, setIncludeVendor] = useState(false);\r\n  const [includePOD, setIncludePOD] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser);\r\n      setAuthLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleExportToExcel = () => {\r\n  if (history.length === 0) {\r\n    toast.info(\"❌ No history data to export.\");\r\n    return;\r\n  }\r\n\r\n  // Define columns to include\r\n  const fixedCols = finalColumnOrder.slice(0, 17); // First 17 are fixed\r\n  const customerCols = finalColumnOrder.slice(17, 32);\r\n  const vendorCols = finalColumnOrder.slice(32, 36);\r\n  const podCols = finalColumnOrder.slice(36);\r\n\r\n  const selectedCols = [\r\n    ...fixedCols,\r\n    ...(includeCustomer ? customerCols : []),\r\n    ...(includeVendor ? vendorCols : []),\r\n    ...(includePOD ? podCols : [])\r\n  ];\r\n\r\n  const exportData = history.map((row) => {\r\n    const flatRow = {};\r\n    selectedCols.forEach((col) => {\r\n      const val = row[col];\r\n      flatRow[col] = dateFieldKeys.includes(col) && val?.seconds\r\n  ? new Date(val.seconds * 1000).toLocaleDateString(\"en-GB\")\r\n  : val?.seconds\r\n    ? new Date(val.seconds * 1000).toLocaleString()\r\n    : val ?? \"\";\r\n    });\r\n    return flatRow;\r\n  });\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet(exportData);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Filtered Export\");\r\n\r\n  const fileName = `FilteredExport_${new Date().toISOString().split(\"T\")[0]}.xlsx`;\r\n  XLSX.writeFile(workbook, fileName);\r\n};\r\n\r\n\r\n  const handleSearch = async () => {\r\n    setIsSearching(true);\r\n    try {\r\n      const fleetRef = collection(db, \"fleet_records\");\r\n      let q;\r\n\r\n          if (searchField === \"Date\") {\r\n  const fromDate = new Date(startDate);\r\n  const toDate = new Date(endDate + \"T23:59:59\");\r\n\r\n  if (fromDate > toDate) {\r\n    toast.warn(\"⚠️ 'From' date cannot be after 'To' date.\");\r\n    setIsSearching(false);\r\n    return;\r\n  }\r\n\r\n  q = query(\r\n    fleetRef,\r\n    ...(activeOnly ? [where(\"isCurrent\", \"==\", true)] : []),\r\n    where(\"createdAt\", \">=\", fromDate),\r\n    where(\"createdAt\", \"<=\", toDate)\r\n  );\r\n}\r\n else if (searchKey) {\r\n  const key = searchField === \"indentNumber\" ? Number(searchKey) : searchKey;\r\n  q = query(\r\n    fleetRef,\r\n    where(searchField, \"==\", key),\r\n    ...(activeOnly ? [where(\"isCurrent\", \"==\", true)] : [])\r\n  );\r\n}\r\n\r\n else {\r\n        toast.warn(\"🔍 Please enter a search value.\");\r\n        setIsSearching(false);\r\n        return;\r\n      }\r\n\r\n      setSearchAttempted(true);\r\n      const snapshot = await getDocs(q);\r\n      const allVersions = [];\r\n      const currentOnly = [];\r\n\r\n      snapshot.forEach((docSnap) => {\r\n        const rawData = { id: docSnap.id, ...docSnap.data() };\r\n        const row = flattenObject(rawData);\r\n\r\n        allVersions.push(row);\r\n        if (row.isCurrent) currentOnly.push(row);\r\n      });\r\n      allVersions.sort((a, b) => {\r\n  if (a.isCurrent && !b.isCurrent) return -1;\r\n  if (!a.isCurrent && b.isCurrent) return 1;\r\n  return b.indentNumber - a.indentNumber;\r\n});\r\n\r\n// ✅ Sort currentOnly also by indentNumber descending\r\ncurrentOnly.sort((a, b) => b.indentNumber - a.indentNumber);\r\n\r\n      if (searchField === \"indentNumber\") {\r\n        setRecords(currentOnly);\r\n        setHistory(allVersions);\r\n      } else {\r\n        setRecords([]);\r\n        setHistory(allVersions);\r\n      }\r\n\r\n      if (snapshot.empty || allVersions.length === 0) {\r\n        toast.info(\"❌ No records found.\");\r\n      }\r\n    } catch (error) {\r\n  toast.error(\"❌ Search failed: \" + error.message);\r\n\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n    const normalize = (val) => {\r\n    if (val === null || val === undefined) return \"\";\r\n    return typeof val === \"object\" && val.seconds\r\n      ? new Date(val.seconds * 1000).toISOString()\r\n      : String(val).trim();\r\n  };\r\n\r\n const getChangedFields = (current, original) => {\r\n  const ignored = [\"versionDate\", \"expiredAt\", \"isCurrent\", \"updateDescription\", \"createdAt\", \"createdBy\"];\r\n  const changed = [];\r\n\r\n  const flatCurrent = flattenObject(current);\r\n  const flatOriginal = flattenObject(original);\r\n\r\n  for (const key in flatCurrent) {\r\n    if (ignored.includes(key)) continue;\r\n    const currVal = normalize(flatCurrent[key]);\r\n    const origVal = normalize(flatOriginal?.[key]);\r\n    if (currVal !== origVal) changed.push(key);\r\n  }\r\n\r\n  return changed;\r\n};\r\n\r\n\r\n  const hasMeaningfulChanges = (curr, orig) => getChangedFields(curr, orig).length > 0;\r\n\r\n\r\n    const handleUpdate = async (row) => {\r\n    try {\r\n      const { id, indentNumber, ...updatedData } = row;\r\n\r\n      const currentDocSnap = await getDocs(\r\n        query(collection(db, \"fleet_records\"), where(\"indentNumber\", \"==\", indentNumber), where(\"isCurrent\", \"==\", true))\r\n      );\r\n      const oldDoc = currentDocSnap.docs.find(doc => doc.id === id);\r\n      const oldData = flattenObject(oldDoc?.data() || {});\r\n\r\n\r\n      const cleanData = {};\r\n      const updateLog = [];\r\n      for (const key in updatedData) {\r\n        if ([\"id\", \"isCurrent\", \"createdAt\", \"createdBy\", \"versionDate\", \"updateDescription\", \"expiredAt\"].includes(key))\r\n          continue;\r\n        const newVal = updatedData[key] ?? \"\";\r\n        const oldVal = oldData[key] ?? \"\";\r\n        cleanData[key] = newVal;\r\n\r\n        if (String(newVal).trim() !== String(oldVal).trim()) {\r\n          updateLog.push(`Updated ${key}`);\r\n        }\r\n      }\r\n\r\n      if (updateLog.length === 0) {\r\n        toast.info(\"ℹ️ No changes to update.\");\r\n        return;\r\n      }\r\n\r\n      confirmAlert({\r\n  title: 'Confirm Update',\r\n  message: `Do you want to update changes: ${updateLog.join(\", \")}?`,\r\n  buttons: [\r\n    {\r\n      label: 'Yes',\r\n      onClick: async () => {\r\n        const flattenedOld = flattenObject(oldDoc.data());\r\n\r\n        await updateDoc(doc(db, \"fleet_records\", id), {\r\n          ...flattenedOld,\r\n          isCurrent: false,\r\n          expiredAt: new Date(),\r\n          modifiedBy: user.email\r\n        });\r\n\r\n        const newVersion = {\r\n          ...cleanData,\r\n          indentNumber,\r\n          createdAt: new Date(),\r\n          createdBy: user.email,\r\n          isCurrent: true,\r\n          versionDate: new Date(),\r\n          updateDescription: updateLog.join(\", \")\r\n        };\r\n\r\n        await addDoc(collection(db, \"fleet_records\"), newVersion);\r\n        setSearchField(\"indentNumber\");\r\n        setSearchKey(String(indentNumber));\r\n        setSearchAttempted(true);\r\n        setActiveOnly(false); \r\n        toast.success(\"✅ Record updated.\");\r\n\r\n        setTimeout(() => {\r\n          handleSearch();\r\n        }, 500);\r\n      }\r\n    },\r\n    {\r\n      label: 'No'\r\n    }\r\n  ]\r\n});\r\n\r\n\r\n\r\n\r\nreturn;\r\n\r\n\r\n      await updateDoc(doc(db, \"fleet_records\", id), {\r\n        ...oldDoc.data(),\r\n        isCurrent: false,\r\n        expiredAt: new Date(),\r\n        modifiedBy: user.email\r\n      });\r\n\r\n\r\n      const newVersion = {\r\n        ...cleanData,\r\n        indentNumber,\r\n        createdAt: new Date(),\r\n        createdBy: user.email,\r\n        isCurrent: true,\r\n        versionDate: new Date(),\r\n        updateDescription: updateLog.join(\", \")\r\n      };\r\n\r\n      await addDoc(collection(db, \"fleet_records\"), newVersion);\r\n\r\n      toast.success(\"✅ Record updated.\");\r\n      handleSearch();\r\n    } catch (error) {\r\n      toast.error(\"❌ Update failed: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (fleetNumberToDelete) => {\r\n    try {\r\n      const q = query(collection(db, \"fleet_records\"), where(\"indentNumber\", \"==\", fleetNumberToDelete));\r\n      const snapshot = await getDocs(q);\r\n      if (snapshot.empty) {\r\n  toast.error(\"❌ No records found for deletion.\");\r\n  return;\r\n}\r\n\r\n\r\n      confirmAlert({\r\n  title: 'Confirm Deletion',\r\n  message: `Delete all versions of Indent No. ${fleetNumberToDelete}?`,\r\n  buttons: [\r\n    {\r\n      label: 'Yes',\r\n      onClick: async () => {\r\n        await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \"fleet_records\", docSnap.id))));\r\n        setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\r\n        setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\r\n        toast.success(\"✅ Deleted all versions.\");\r\n      }\r\n    },\r\n    {\r\n      label: 'No'\r\n    }\r\n  ]\r\n});\r\nreturn;\r\n\r\n\r\n      await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \"fleet_records\", docSnap.id))));\r\n      setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\r\n      setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\r\n      toast.success(\"✅ Deleted all versions.\");\r\n    } catch (err) {\r\n      toast.error(\"❌ Delete failed: \" + err.message);\r\n    }\r\n  };\r\n  if (authLoading) return <p style={{ textAlign: \"center\" }}>Checking authentication...</p>;\r\nif (!user) return <Auth />;\r\n\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"100vw\", overflowX: \"hidden\", padding: \"40px 20px\" }}>\r\n      <div className=\"header\">\r\n        <h2>Fleet Billing Dashboard</h2>\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n          <span className=\"user-email\">Welcome, {user.email}</span>\r\n          <img src=\"/logo.png\" alt=\"Logo\" style={{ height: \"50px\" }} />\r\n        </div>\r\n      </div>\r\n\r\n      <button\r\n  onClick={() => {\r\n    // ✅ Clear localStorage before logout\r\n    localStorage.removeItem(\"inProgressFleetNumber\");\r\n    localStorage.removeItem(\"docId\");\r\n    localStorage.removeItem(\"fixedFields\");\r\n    localStorage.removeItem(\"customerFields\");\r\n    localStorage.removeItem(\"vendorFields\");\r\n    localStorage.removeItem(\"podFields\");\r\n\r\n    signOut(auth);\r\n  }}\r\n>\r\n  Logout\r\n</button>\r\n\r\n      <hr />\r\n\r\n      <UploadForm />\r\n\r\n      <ManualEntryForm\r\n      onAddRow={(row, addToHistory) => {\r\n        setRecords([row]);\r\n        if (addToHistory) setHistory([row]);\r\n\r\n        // ✅ Store latest indentNumber to maintain search context\r\n        setSearchField(\"indentNumber\");\r\n        setSearchKey(String(row.indentNumber));\r\n        setSearchAttempted(true);\r\n        setActiveOnly(false);\r\n      }}\r\n    />\r\n\r\n\r\n      <hr />\r\n      <h4>Search Existing Records</h4>\r\n<div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"10px\", alignItems: \"center\", justifyContent: \"space-between\", width: \"100%\" }}>\r\n  <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", alignItems: \"center\" }}>\r\n    <select value={searchField} onChange={(e) => {\r\n      setSearchField(e.target.value);\r\n      setSearchKey(\"\");\r\n      setStartDate(\"\");\r\n      setEndDate(\"\");\r\n    }}>\r\n      <option value=\"indentNumber\">Indent Number</option>\r\n      <option value=\"Broker\">Broker</option>\r\n      <option value=\"Date\">Date</option>\r\n    </select>\r\n\r\n    {searchField === \"Date\" ? (\r\n      <>\r\n        <label>From:</label>\r\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\r\n        <label>To:</label>\r\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\r\n      </>\r\n    ) : (\r\n      <input\r\n        type=\"text\"\r\n        value={searchKey}\r\n        onChange={(e) => setSearchKey(e.target.value)}\r\n        placeholder=\"Search key\"\r\n        style={{ flex: 1, width: \"250px\" }}\r\n      />\r\n    )}\r\n\r\n    <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n    <label style={{  display: \"flex\", alignItems: \"center\", fontSize: \"14px\", marginBottom: 0 }}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={activeOnly}\r\n        onChange={(e) => setActiveOnly(e.target.checked)}\r\n        style={{ marginRight: \"5px\" }}\r\n      />\r\n      Show only active\r\n    </label>\r\n  </div>\r\n\r\n  <button className=\"btn btn-primary\" onClick={handleSearch} disabled={isSearching}>\r\n    {isSearching ? \"Searching...\" : \"Search\"}\r\n  </button>\r\n</div></div>\r\n\r\n<hr />\r\n\r\n\r\n\r\n      {searchField === \"indentNumber\" && records.length > 0 && (\r\n        <>\r\n          <h4>Editable Current Records</h4>\r\n          <div className=\"table-scroll-x\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  {finalColumnOrder.map((col) => (\r\n                    <th key={col}>{columnLabels[col] || col}</th>\r\n                  ))}\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {records.map((row, rowIndex) => (\r\n                  <tr key={rowIndex}>\r\n                    {finalColumnOrder.map((col, j) => (\r\n                      <td key={j}>\r\n                        <input\r\n                        type={dateFieldKeys.includes(col) ? \"date\" : \"text\"}\r\n                        value={\r\n                          dateFieldKeys.includes(col) && row[col]\r\n                            ? (() => {\r\n                                try {\r\n                                  const d = new Date(row[col]?.seconds * 1000 || row[col]);\r\n                                  return isNaN(d.getTime())\r\n                                    ? \"\"\r\n                                    : new Date(d.getTime() - d.getTimezoneOffset() * 60000)\r\n                                        .toISOString()\r\n                                        .split(\"T\")[0]; // yyyy-mm-dd (used for input)\r\n                                } catch {\r\n                                  return \"\";\r\n                                }\r\n                              })()\r\n                            : row[col] ?? \"\"\r\n                        }\r\n                        onChange={(e) => {\r\n                          const updated = [...records];\r\n                          const val = e.target.value;\r\n                          if (dateFieldKeys.includes(col)) {\r\n                            updated[rowIndex][col] = val\r\n                              ? new Date(val)\r\n                              : \"\";\r\n                          } else {\r\n                            updated[rowIndex][col] = val;\r\n                          }\r\n                          setRecords(updated);\r\n                        }}\r\n                        readOnly={[\"indentNumber\", \"createdAt\", \"createdBy\", \"isCurrent\", \"updateDescription\"].includes(col)}\r\n                        style={{ width: \"140px\" }}\r\n                      />\r\n\r\n                      </td>\r\n                    ))}\r\n                    <td>\r\n                      <button className=\"save\" onClick={() => handleUpdate(row)}>\r\n                        Save\r\n                      </button>\r\n                      <button className=\"delete\" onClick={() => handleDelete(row.indentNumber)}>\r\n                        Delete\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {history.length > 0 && (\r\n        <>\r\n          <hr />\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n  <h4>🔍 Full Version History</h4>\r\n  <div style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }}>\r\n  <label>\r\n    <input type=\"checkbox\" checked={includeCustomer} onChange={(e) => setIncludeCustomer(e.target.checked)} />\r\n    Include Customer\r\n  </label>\r\n  <label>\r\n    <input type=\"checkbox\" checked={includeVendor} onChange={(e) => setIncludeVendor(e.target.checked)} />\r\n    Include Vendor\r\n  </label>\r\n  <label>\r\n    <input type=\"checkbox\" checked={includePOD} onChange={(e) => setIncludePOD(e.target.checked)} />\r\n    Include POD\r\n  </label>\r\n  <button onClick={handleExportToExcel} disabled={history.length === 0} className=\"export-button\">\r\n    ⬇️ Export Selected\r\n  </button>\r\n</div>\r\n\r\n</div>\r\n        <div className=\"table-scroll-x\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {finalColumnOrder.map((col) => (\r\n                  <th key={col} className=\"tight-header\">{columnLabels[col] || col}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {[...history]\r\n                .sort((a, b) => {\r\n                  if (a.isCurrent) return -1;\r\n                  if (b.isCurrent) return 1;\r\n                  const aTime = a.expiredAt?.seconds || 0;\r\n                  const bTime = b.expiredAt?.seconds || 0;\r\n                  return bTime - aTime;\r\n                })\r\n                .map((row, i) => (\r\n                  <tr key={i}>\r\n                    {finalColumnOrder.map((col, j) => (\r\n                      <td key={j}>\r\n                        {dateFieldKeys.includes(col) && row[col]?.seconds\r\n                          ? new Date(row[col].seconds * 1000).toLocaleDateString(\"en-GB\")\r\n                          : typeof row[col] === \"object\" && row[col]?.seconds\r\n                            ? new Date(row[col].seconds * 1000).toLocaleString()\r\n                            : String(row[col] ?? \"\")}\r\n\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        </>\r\n      )}\r\n\r\n      {searchAttempted && !isSearching && records.length === 0 && history.length === 0 && (\r\n        <p style={{ textAlign: \"center\", color: \"#888\", marginTop: \"30px\" }}>No records to display.</p>\r\n      )}\r\n\r\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\r\n      <p style={{ textAlign: \"center\", marginTop: \"30px\", color: \"#666\" }}>© 2025 Fleet Billing System</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}