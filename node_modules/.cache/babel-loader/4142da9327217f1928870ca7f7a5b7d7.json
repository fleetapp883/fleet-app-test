{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\components\\\\UploadForm.js\";\nimport React, { useState } from \"react\";\nimport { addDoc, collection, doc, runTransaction } from \"firebase/firestore\";\nimport * as XLSX from \"xlsx\";\nimport { db, auth } from \"../firebase\";\nconst dateFieldKeys = [\"placementDate\", \"deliveryDate\", \"customerMaster.advanceRecDate\", \"customerMaster.balanceRecDate\", \"customerMaster.validatedAdvanceUTRDescription\", \"customerMaster.validatedAdvanceAmount\", \"customerMaster.validatedBalanceUTR\", \"customerMaster.validatedBalanceUTRAmount\", \"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.podCustomerRec\", \"podMaster.today\"];\nconst labelToKey = {\n  \"Placement Date\": \"placementDate\",\n  \"Delivery Date\": \"deliveryDate\",\n  \"Month\": \"months\",\n  \"Origin\": \"origin\",\n  \"Destination\": \"destination\",\n  \"Customer\": \"customer\",\n  \"Customer Type\": \"customerType\",\n  \"Vehicle Number\": \"vehicleNo\",\n  \"Vendor\": \"vendor\",\n  \"Sales Rate\": \"salesRate\",\n  \"Buy Rate\": \"buyRate\",\n  // Customer Master\n  \"Customer -> To be Advance (Sales)\": \"customerMaster.toBeAdvance\",\n  \"Customer -> Advance / Payment Received\": \"customerMaster.advanceReceived\",\n  \"Customer -> Adv Deviation (as on Date)\": \"customerMaster.advDeviation\",\n  \"Customer -> Advance Rec Date\": \"customerMaster.advanceRecDate\",\n  \"Customer -> Validated-Advance UTR Description\": \"customerMaster.validatedAdvanceUTRDescription\",\n  \"Customer -> Validated UTR - Advance Amount\": \"customerMaster.validatedAdvanceAmount\",\n  \"Customer -> Balance\": \"customerMaster.balance\",\n  \"Customer -> Processing Charges\": \"customerMaster.processingCharges\",\n  \"Customer -> Inward-Mis Charges\": \"customerMaster.inwardMisCharges\",\n  \"Customer -> Outward-Mis Charges\": \"customerMaster.outwardMisCharges\",\n  \"Customer -> Bal Received\": \"customerMaster.balanceReceived\",\n  \"Customer -> Remaining Balance\": \"customerMaster.remainingBalance\",\n  \"Customer -> Balance Rec Date\": \"customerMaster.balanceRecDate\",\n  \"Customer -> Validated-Balance UTR\": \"customerMaster.validatedBalanceUTR\",\n  \"Customer -> Validate Balance UTR-Amount\": \"customerMaster.validatedBalanceUTRAmount\",\n  // Vendor Master\n  \"Vendor -> Outward Payment\": \"vendorMaster.vendorOutwardPayment\",\n  \"Vendor -> Paid Amount\": \"vendorMaster.paidAmount\",\n  \"Vendor -> Balance Pending\": \"vendorMaster.balancePending\",\n  \"Vendor -> Vendor Remark\": \"vendorMaster.vendorRemark\",\n  // POD Master\n  \"POD -> POD Vendor-Date\": \"podMaster.podVendorDate\",\n  \"POD -> POD-Send to Customer Date\": \"podMaster.podSendToCustomerDate\",\n  \"POD -> Doc No\": \"podMaster.docNo\",\n  \"POD -> POD-Customer Rec\": \"podMaster.podCustomerRec\",\n  \"POD -> Today\": \"podMaster.today\",\n  \"POD -> Balance Overdue Days\": \"podMaster.balanceOverdueDays\",\n  \"POD -> To be Collected Amount\": \"podMaster.toBeCollectedAmount\"\n};\nconst UploadForm = () => {\n  const [previewData, setPreviewData] = useState([]);\n  const [statusMap, setStatusMap] = useState({});\n  const [fleetNumbers, setFleetNumbers] = useState({});\n  const generateTemplate = () => {\n    const headers = Object.keys(labelToKey);\n    const sampleRow = {};\n    headers.forEach(header => {\n      if (header.toLowerCase().includes(\"date\")) {\n        sampleRow[header] = \"01-01-2025\"; // DD-MM-YYYY\n      } else if (header.toLowerCase() === \"month\" || header.toLowerCase().includes(\"month\")) {\n        sampleRow[header] = \"July-2025\"; // Month format\n      } else if (header.toLowerCase().includes(\"rate\") || header.toLowerCase().includes(\"amount\")) {\n        sampleRow[header] = \"10000\";\n      } else if (header.toLowerCase().includes(\"number\") || header.toLowerCase().includes(\"no\")) {\n        sampleRow[header] = \"ABC123\";\n      } else {\n        sampleRow[header] = \"Sample\";\n      }\n    });\n    const worksheet = XLSX.utils.json_to_sheet([sampleRow]);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Template\");\n    XLSX.writeFile(workbook, \"FleetUploadTemplate.xlsx\");\n  };\n  const getMappedKey = label => labelToKey[label.trim()] || null;\n  const parseExcel = file => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      const workbook = XLSX.read(e.target.result, {\n        type: \"binary\"\n      });\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const raw = XLSX.utils.sheet_to_json(sheet, {\n        header: 1,\n        defval: \"\",\n        blankrows: false\n      });\n      const headers = raw[0];\n      const rows = raw.slice(1).map(row => {\n        const obj = {};\n        headers.forEach((h, j) => {\n          const key = getMappedKey(h);\n          if (key) obj[key] = row[j];\n        });\n        return obj;\n      });\n      setPreviewData(rows);\n      setStatusMap({});\n      setFleetNumbers({});\n    };\n    reader.readAsBinaryString(file);\n  };\n  const getNextFleetNumber = async () => {\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\n    const newFleetNo = await runTransaction(db, async transaction => {\n      const docSnap = await transaction.get(counterRef);\n      const current = docSnap.data().nextFleetNo || 1;\n      transaction.update(counterRef, {\n        nextFleetNo: current + 1\n      });\n      return current;\n    });\n    return newFleetNo;\n  };\n  const parseDDMMYYYY = str => {\n    const [dd, mm, yyyy] = str.split(\"-\");\n    if (!dd || !mm || !yyyy) return null;\n    return new Date(`${yyyy}-${mm}-${dd}`);\n  };\n  const saveRow = async (row, i) => {\n    const user = auth.currentUser;\n    try {\n      const fleetNo = await getNextFleetNumber(); // This is your indentNumber now\n\n      const parsedRow = {\n        ...row\n      };\n      Object.keys(parsedRow).forEach(key => {\n        if (typeof parsedRow[key] === \"string\" && parsedRow[key].match(/^\\d{2}-\\d{2}-\\d{4}$/)) {\n          const parsedDate = parseDDMMYYYY(parsedRow[key]);\n          if (parsedDate instanceof Date && !isNaN(parsedDate)) {\n            parsedRow[key] = parsedDate;\n          }\n        }\n      });\n      if (parsedRow.placementDate && !parsedRow.date) {\n        parsedRow.date = parsedRow.placementDate;\n      }\n      const enriched = {\n        ...parsedRow,\n        indentNumber: fleetNo,\n        // ✅ THIS FIXES IT\n        createdAt: new Date(),\n        createdBy: (user === null || user === void 0 ? void 0 : user.email) || \"anonymous\",\n        isCurrent: true,\n        versionDate: new Date()\n      };\n      await addDoc(collection(db, \"fleet_records\"), enriched);\n      setStatusMap(prev => ({\n        ...prev,\n        [i]: \"✅ Saved\"\n      }));\n      setFleetNumbers(prev => ({\n        ...prev,\n        [i]: fleetNo\n      }));\n    } catch (err) {\n      setStatusMap(prev => ({\n        ...prev,\n        [i]: \"❌ Failed\"\n      }));\n    }\n  };\n  const saveAll = async () => {\n    for (let i = 0; i < previewData.length; i++) {\n      if (!statusMap[i]) await saveRow(previewData[i], i);\n    }\n  };\n  const handleEdit = (i, key, value) => {\n    const updated = [...previewData];\n    updated[i][key] = value;\n    setPreviewData(updated);\n  };\n  const deleteRow = i => {\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\n    const s = {\n      ...statusMap\n    };\n    delete s[i];\n    const f = {\n      ...fleetNumbers\n    };\n    delete f[i];\n    setStatusMap(s);\n    setFleetNumbers(f);\n  };\n  const resetTable = () => {\n    setPreviewData([]);\n    setStatusMap({});\n    setFleetNumbers({});\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Upload Excel & Preview\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      gap: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \".xlsx, .xls\",\n    onChange: e => {\n      var _e$target$files;\n      const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n      if (file) {\n        parseExcel(file);\n        setTimeout(() => {\n          e.target.value = \"\";\n        }, 100);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generateTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"\\u2B07\\uFE0F Download Template\")), previewData.length > 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h5\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCC4 Preview Table (Excel Upload)\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDCBE Save All\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetTable,\n    style: {\n      marginLeft: 10,\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, \"\\uD83E\\uDDF9 Clear\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-scroll-x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }\n  }, \"Fleet Number\"), Object.keys(previewData[0]).map(key => /*#__PURE__*/React.createElement(\"th\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 61\n    }\n  }, key)), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 19\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 19\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, previewData.map((row, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 21\n    }\n  }, fleetNumbers[i] || \"\"), Object.keys(row).map(key => /*#__PURE__*/React.createElement(\"td\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: dateFieldKeys.includes(key) ? \"date\" : \"text\",\n    value: dateFieldKeys.includes(key) && row[key] ? new Date(row[key]).toISOString().split(\"T\")[0] : row[key],\n    onChange: e => handleEdit(i, key, e.target.value),\n    style: {\n      width: \"120px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, statusMap[i] || \"⏳ Pending\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => saveRow(row, i),\n    disabled: statusMap[i] === \"✅ Saved\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deleteRow(i),\n    style: {\n      marginLeft: 6,\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, \"Delete\")))))))));\n};\nexport default UploadForm;","map":{"version":3,"names":["React","useState","addDoc","collection","doc","runTransaction","XLSX","db","auth","dateFieldKeys","labelToKey","UploadForm","previewData","setPreviewData","statusMap","setStatusMap","fleetNumbers","setFleetNumbers","generateTemplate","headers","Object","keys","sampleRow","forEach","header","toLowerCase","includes","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","writeFile","getMappedKey","label","trim","parseExcel","file","reader","FileReader","onload","e","read","target","result","type","sheet","Sheets","SheetNames","raw","sheet_to_json","defval","blankrows","rows","slice","map","row","obj","h","j","key","readAsBinaryString","getNextFleetNumber","counterRef","newFleetNo","transaction","docSnap","get","current","data","nextFleetNo","update","parseDDMMYYYY","str","dd","mm","yyyy","split","Date","saveRow","i","user","currentUser","fleetNo","parsedRow","match","parsedDate","isNaN","placementDate","date","enriched","indentNumber","createdAt","createdBy","email","isCurrent","versionDate","prev","err","saveAll","length","handleEdit","value","updated","deleteRow","filter","_","idx","s","f","resetTable","createElement","style","marginBottom","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","accept","onChange","_e$target$files","files","setTimeout","onClick","Fragment","marginTop","marginLeft","color","className","toISOString","width","disabled"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { addDoc, collection, doc, runTransaction } from \"firebase/firestore\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { db, auth } from \"../firebase\";\r\n\r\nconst dateFieldKeys = [\r\n  \"placementDate\", \"deliveryDate\", \"customerMaster.advanceRecDate\", \"customerMaster.balanceRecDate\",\r\n  \"customerMaster.validatedAdvanceUTRDescription\", \"customerMaster.validatedAdvanceAmount\",\r\n  \"customerMaster.validatedBalanceUTR\", \"customerMaster.validatedBalanceUTRAmount\",\r\n  \"podMaster.podVendorDate\", \"podMaster.podSendToCustomerDate\", \"podMaster.podCustomerRec\",\r\n  \"podMaster.today\"\r\n];\r\n\r\nconst labelToKey = {\r\n  \"Placement Date\": \"placementDate\",\r\n  \"Delivery Date\": \"deliveryDate\",\r\n  \"Month\": \"months\",\r\n  \"Origin\": \"origin\",\r\n  \"Destination\": \"destination\",\r\n  \"Customer\": \"customer\",\r\n  \"Customer Type\": \"customerType\",\r\n  \"Vehicle Number\": \"vehicleNo\",\r\n  \"Vendor\": \"vendor\",\r\n  \"Sales Rate\": \"salesRate\",\r\n  \"Buy Rate\": \"buyRate\",\r\n  // Customer Master\r\n  \"Customer -> To be Advance (Sales)\": \"customerMaster.toBeAdvance\",\r\n  \"Customer -> Advance / Payment Received\": \"customerMaster.advanceReceived\",\r\n  \"Customer -> Adv Deviation (as on Date)\": \"customerMaster.advDeviation\",\r\n  \"Customer -> Advance Rec Date\": \"customerMaster.advanceRecDate\",\r\n  \"Customer -> Validated-Advance UTR Description\": \"customerMaster.validatedAdvanceUTRDescription\",\r\n  \"Customer -> Validated UTR - Advance Amount\": \"customerMaster.validatedAdvanceAmount\",\r\n  \"Customer -> Balance\": \"customerMaster.balance\",\r\n  \"Customer -> Processing Charges\": \"customerMaster.processingCharges\",\r\n  \"Customer -> Inward-Mis Charges\": \"customerMaster.inwardMisCharges\",\r\n  \"Customer -> Outward-Mis Charges\": \"customerMaster.outwardMisCharges\",\r\n  \"Customer -> Bal Received\": \"customerMaster.balanceReceived\",\r\n  \"Customer -> Remaining Balance\": \"customerMaster.remainingBalance\",\r\n  \"Customer -> Balance Rec Date\": \"customerMaster.balanceRecDate\",\r\n  \"Customer -> Validated-Balance UTR\": \"customerMaster.validatedBalanceUTR\",\r\n  \"Customer -> Validate Balance UTR-Amount\": \"customerMaster.validatedBalanceUTRAmount\",\r\n  // Vendor Master\r\n  \"Vendor -> Outward Payment\": \"vendorMaster.vendorOutwardPayment\",\r\n  \"Vendor -> Paid Amount\": \"vendorMaster.paidAmount\",\r\n  \"Vendor -> Balance Pending\": \"vendorMaster.balancePending\",\r\n  \"Vendor -> Vendor Remark\": \"vendorMaster.vendorRemark\",\r\n  // POD Master\r\n  \"POD -> POD Vendor-Date\": \"podMaster.podVendorDate\",\r\n  \"POD -> POD-Send to Customer Date\": \"podMaster.podSendToCustomerDate\",\r\n  \"POD -> Doc No\": \"podMaster.docNo\",\r\n  \"POD -> POD-Customer Rec\": \"podMaster.podCustomerRec\",\r\n  \"POD -> Today\": \"podMaster.today\",\r\n  \"POD -> Balance Overdue Days\": \"podMaster.balanceOverdueDays\",\r\n  \"POD -> To be Collected Amount\": \"podMaster.toBeCollectedAmount\"\r\n};\r\n\r\nconst UploadForm = () => {\r\n  const [previewData, setPreviewData] = useState([]);\r\n  const [statusMap, setStatusMap] = useState({});\r\n  const [fleetNumbers, setFleetNumbers] = useState({});\r\n\r\n  const generateTemplate = () => {\r\n  const headers = Object.keys(labelToKey);\r\n  const sampleRow = {};\r\n  headers.forEach(header => {\r\n    if (header.toLowerCase().includes(\"date\")) {\r\n      sampleRow[header] = \"01-01-2025\"; // DD-MM-YYYY\r\n    } else if (header.toLowerCase() === \"month\" || header.toLowerCase().includes(\"month\")) {\r\n      sampleRow[header] = \"July-2025\"; // Month format\r\n    } else if (header.toLowerCase().includes(\"rate\") || header.toLowerCase().includes(\"amount\")) {\r\n      sampleRow[header] = \"10000\";\r\n    } else if (header.toLowerCase().includes(\"number\") || header.toLowerCase().includes(\"no\")) {\r\n      sampleRow[header] = \"ABC123\";\r\n    } else {\r\n      sampleRow[header] = \"Sample\";\r\n    }\r\n  });\r\n\r\n  const worksheet = XLSX.utils.json_to_sheet([sampleRow]);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Template\");\r\n  XLSX.writeFile(workbook, \"FleetUploadTemplate.xlsx\");\r\n};\r\n\r\n\r\n  const getMappedKey = (label) => labelToKey[label.trim()] || null;\r\n\r\n  const parseExcel = (file) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const raw = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: \"\", blankrows: false });\r\n\r\n      const headers = raw[0];\r\n      const rows = raw.slice(1).map((row) => {\r\n        const obj = {};\r\n        headers.forEach((h, j) => {\r\n          const key = getMappedKey(h);\r\n          if (key) obj[key] = row[j];\r\n        });\r\n        return obj;\r\n      });\r\n\r\n      setPreviewData(rows);\r\n      setStatusMap({});\r\n      setFleetNumbers({});\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const getNextFleetNumber = async () => {\r\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\r\n    const newFleetNo = await runTransaction(db, async (transaction) => {\r\n      const docSnap = await transaction.get(counterRef);\r\n      const current = docSnap.data().nextFleetNo || 1;\r\n      transaction.update(counterRef, { nextFleetNo: current + 1 });\r\n      return current;\r\n    });\r\n    return newFleetNo;\r\n  };\r\n  const parseDDMMYYYY = (str) => {\r\n  const [dd, mm, yyyy] = str.split(\"-\");\r\n  if (!dd || !mm || !yyyy) return null;\r\n  return new Date(`${yyyy}-${mm}-${dd}`);\r\n};\r\n\r\n\r\n  const saveRow = async (row, i) => {\r\n  const user = auth.currentUser;\r\n  try {\r\n    const fleetNo = await getNextFleetNumber(); // This is your indentNumber now\r\n\r\n    const parsedRow = { ...row };\r\n    Object.keys(parsedRow).forEach((key) => {\r\n      if (typeof parsedRow[key] === \"string\" && parsedRow[key].match(/^\\d{2}-\\d{2}-\\d{4}$/)) {\r\n        const parsedDate = parseDDMMYYYY(parsedRow[key]);\r\n        if (parsedDate instanceof Date && !isNaN(parsedDate)) {\r\n          parsedRow[key] = parsedDate;\r\n        }\r\n      }\r\n    });\r\n    if (parsedRow.placementDate && !parsedRow.date) {\r\n  parsedRow.date = parsedRow.placementDate;\r\n}\r\n    const enriched = {\r\n      ...parsedRow,\r\n      indentNumber: fleetNo, // ✅ THIS FIXES IT\r\n      createdAt: new Date(),\r\n      createdBy: user?.email || \"anonymous\",\r\n      isCurrent: true,\r\n      versionDate: new Date(),\r\n    };\r\n\r\n    await addDoc(collection(db, \"fleet_records\"), enriched);\r\n    setStatusMap((prev) => ({ ...prev, [i]: \"✅ Saved\" }));\r\n    setFleetNumbers((prev) => ({ ...prev, [i]: fleetNo }));\r\n  } catch (err) {\r\n    setStatusMap((prev) => ({ ...prev, [i]: \"❌ Failed\" }));\r\n  }\r\n};\r\n\r\n\r\n\r\n  const saveAll = async () => {\r\n    for (let i = 0; i < previewData.length; i++) {\r\n      if (!statusMap[i]) await saveRow(previewData[i], i);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (i, key, value) => {\r\n    const updated = [...previewData];\r\n    updated[i][key] = value;\r\n    setPreviewData(updated);\r\n  };\r\n\r\n  const deleteRow = (i) => {\r\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\r\n    const s = { ...statusMap }; delete s[i];\r\n    const f = { ...fleetNumbers }; delete f[i];\r\n    setStatusMap(s);\r\n    setFleetNumbers(f);\r\n  };\r\n\r\n  const resetTable = () => {\r\n    setPreviewData([]);\r\n    setStatusMap({});\r\n    setFleetNumbers({});\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginBottom: 40 }}>\r\n      <h4>Upload Excel & Preview</h4>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\".xlsx, .xls\"\r\n          onChange={(e) => {\r\n            const file = e.target.files?.[0];\r\n            if (file) {\r\n              parseExcel(file);\r\n              setTimeout(() => { e.target.value = \"\"; }, 100);\r\n            }\r\n          }}\r\n        />\r\n        <button onClick={generateTemplate}>⬇️ Download Template</button>\r\n      </div>\r\n\r\n      {previewData.length > 0 && (\r\n        <>\r\n          <h5 style={{ marginTop: 20 }}>📄 Preview Table (Excel Upload)</h5>\r\n          <button onClick={saveAll}>💾 Save All</button>\r\n          <button onClick={resetTable} style={{ marginLeft: 10, color: \"red\" }}>🧹 Clear</button>\r\n          <div className=\"table-scroll-x\">\r\n            <table>\r\n              <thead>\r\n                <tr>\r\n                  <th>Fleet Number</th>\r\n                  {Object.keys(previewData[0]).map((key) => <th key={key}>{key}</th>)}\r\n                  <th>Status</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {previewData.map((row, i) => (\r\n                  <tr key={i}>\r\n                    <td>{fleetNumbers[i] || \"\"}</td>\r\n                    {Object.keys(row).map((key) => (\r\n                      <td key={key}>\r\n                        <input\r\n                          type={dateFieldKeys.includes(key) ? \"date\" : \"text\"}\r\n                          value={\r\n                            dateFieldKeys.includes(key) && row[key]\r\n                              ? new Date(row[key]).toISOString().split(\"T\")[0]\r\n                              : row[key]\r\n                          }\r\n                          onChange={(e) => handleEdit(i, key, e.target.value)}\r\n                          style={{ width: \"120px\" }}\r\n                        />\r\n                      </td>\r\n                    ))}\r\n                    <td>{statusMap[i] || \"⏳ Pending\"}</td>\r\n                    <td>\r\n                      <button onClick={() => saveRow(row, i)} disabled={statusMap[i] === \"✅ Saved\"}>Save</button>\r\n                      <button onClick={() => deleteRow(i)} style={{ marginLeft: 6, color: \"red\" }}>Delete</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}