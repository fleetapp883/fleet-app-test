{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anupp\\\\Downloads\\\\fleet-billing-app\\\\fleet-billing-app\\\\src\\\\components\\\\ManualEntryForm.js\";\nimport React, { useState } from \"react\";\nimport { collection, addDoc, doc, runTransaction } from \"firebase/firestore\";\nimport { db, auth } from \"../firebase\";\nimport { toast } from \"react-toastify\";\nconst initialForm = {\n  IndentNo: \"\",\n  IndentDate: \"\",\n  PlacementDate: \"\",\n  Customer: \"\",\n  CustomerType: \"\",\n  CustomerBillingType: \"\",\n  SourcingVendor: \"\",\n  VendorType: \"\",\n  VendorBillingType: \"\",\n  Origin: \"\",\n  Destination: \"\",\n  VehicleNo: \"\",\n  VehicleType: \"\",\n  DriverNo: \"\",\n  DispatchDate: \"\",\n  DeliverDate: \"\",\n  OffloadingDate: \"\",\n  EwayBill: \"\",\n  LRNo: \"\",\n  SoftCopyPODRec: \"\",\n  HardCopyPODRec: \"\",\n  CustomerSaleRate: \"\",\n  AdvanceToBePaid: \"\",\n  AdvanceRec: \"\",\n  AdvanceUTR: \"\",\n  AdvanceRecDate: \"\",\n  BalancePending: \"\",\n  DetentionCharges: \"\",\n  LoadingUnloadingCharges: \"\",\n  MiscCharges: \"\",\n  ProcessingCharges: \"\",\n  NetBalance: \"\",\n  BalanceRecAmount: \"\",\n  BalanceUTR: \"\",\n  BalanceRecDate: \"\",\n  RemainingBalance: \"\",\n  RemainingBalanceUTR: \"\",\n  RemainingBalanceDate: \"\",\n  SupplierBuyRate: \"\",\n  SupplierAdvancePay: \"\",\n  SupplierAdvancePaid: \"\",\n  SupplierMisCharges: \"\",\n  SupplierInvoiceNo: \"\",\n  SupplierAdvanceUTR: \"\",\n  SupplierAdvancePayDate: \"\",\n  SupplierBalancePending: \"\",\n  SupplierBalancePaidAmount: \"\",\n  SupplierBalancePaidUTR: \"\",\n  SupplierBalancePaidDate: \"\",\n  RemainingSupplierAmount: \"\",\n  PODRecDate: \"\",\n  PODSendToCustomerDate: \"\",\n  PODDocketNo: \"\",\n  PODRecByCustomer: \"\",\n  PODDeductionIfAny: \"\",\n  GrossProfit: \"\",\n  BadDebts: \"\",\n  NetProfit: \"\"\n};\nconst ManualEntryForm = ({\n  onAddRow\n}) => {\n  const [formData, setFormData] = useState(initialForm);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const getNextFleetNumber = async () => {\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\n    const newFleetNo = await runTransaction(db, async transaction => {\n      const docSnap = await transaction.get(counterRef);\n      if (!docSnap.exists()) throw new Error(\"Counter document does not exist.\");\n      const current = docSnap.data().nextFleetNo || 1;\n      transaction.update(counterRef, {\n        nextFleetNo: current + 1\n      });\n      return current;\n    });\n    return newFleetNo;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isSubmitting) return;\n    setIsSubmitting(true);\n    try {\n      const user = auth.currentUser;\n      const fleetNumber = await getNextFleetNumber();\n      const enrichedData = {\n        ...formData,\n        fleetNumber,\n        createdAt: new Date(),\n        createdBy: (user === null || user === void 0 ? void 0 : user.email) || \"anonymous\",\n        isCurrent: true,\n        versionDate: new Date()\n      };\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\n      onAddRow({\n        id: docRef.id,\n        ...enrichedData\n      });\n      setFormData(initialForm);\n      await navigator.clipboard.writeText(String(fleetNumber));\n      toast.success(`✅ Row saved! Fleet Number copied: ${fleetNumber}`);\n    } catch (err) {\n      toast.error(\"❌ Error saving row: \" + err.message);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Manual Entry\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, Object.keys(initialForm).map(key => /*#__PURE__*/React.createElement(\"input\", {\n    key: key,\n    name: key,\n    placeholder: key,\n    value: formData[key],\n    onChange: handleChange,\n    style: {\n      margin: 4,\n      width: \"220px\",\n      padding: \"6px 10px\",\n      borderRadius: \"6px\",\n      border: \"1px solid #ccc\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, isSubmitting ? /*#__PURE__*/React.createElement(React.Fragment, null, \"Saving... \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"loader-spinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  })) : \"Add Row\")));\n};\nexport default ManualEntryForm;","map":{"version":3,"names":["React","useState","collection","addDoc","doc","runTransaction","db","auth","toast","initialForm","IndentNo","IndentDate","PlacementDate","Customer","CustomerType","CustomerBillingType","SourcingVendor","VendorType","VendorBillingType","Origin","Destination","VehicleNo","VehicleType","DriverNo","DispatchDate","DeliverDate","OffloadingDate","EwayBill","LRNo","SoftCopyPODRec","HardCopyPODRec","CustomerSaleRate","AdvanceToBePaid","AdvanceRec","AdvanceUTR","AdvanceRecDate","BalancePending","DetentionCharges","LoadingUnloadingCharges","MiscCharges","ProcessingCharges","NetBalance","BalanceRecAmount","BalanceUTR","BalanceRecDate","RemainingBalance","RemainingBalanceUTR","RemainingBalanceDate","SupplierBuyRate","SupplierAdvancePay","SupplierAdvancePaid","SupplierMisCharges","SupplierInvoiceNo","SupplierAdvanceUTR","SupplierAdvancePayDate","SupplierBalancePending","SupplierBalancePaidAmount","SupplierBalancePaidUTR","SupplierBalancePaidDate","RemainingSupplierAmount","PODRecDate","PODSendToCustomerDate","PODDocketNo","PODRecByCustomer","PODDeductionIfAny","GrossProfit","BadDebts","NetProfit","ManualEntryForm","onAddRow","formData","setFormData","isSubmitting","setIsSubmitting","handleChange","e","target","name","value","getNextFleetNumber","counterRef","newFleetNo","transaction","docSnap","get","exists","Error","current","data","nextFleetNo","update","handleSubmit","preventDefault","user","currentUser","fleetNumber","enrichedData","createdAt","Date","createdBy","email","isCurrent","versionDate","docRef","id","navigator","clipboard","writeText","String","success","err","error","message","createElement","style","marginTop","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","keys","map","key","placeholder","onChange","margin","width","padding","borderRadius","border","type","disabled","Fragment","className"],"sources":["C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/ManualEntryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  doc,\r\n  runTransaction\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../firebase\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst initialForm = {\r\n  IndentNo: \"\", IndentDate: \"\", PlacementDate: \"\", Customer: \"\", CustomerType: \"\",\r\n  CustomerBillingType: \"\", SourcingVendor: \"\", VendorType: \"\", VendorBillingType: \"\",\r\n  Origin: \"\", Destination: \"\", VehicleNo: \"\", VehicleType: \"\", DriverNo: \"\",\r\n  DispatchDate: \"\", DeliverDate: \"\", OffloadingDate: \"\", EwayBill: \"\", LRNo: \"\",\r\n  SoftCopyPODRec: \"\", HardCopyPODRec: \"\", CustomerSaleRate: \"\", AdvanceToBePaid: \"\",\r\n  AdvanceRec: \"\", AdvanceUTR: \"\", AdvanceRecDate: \"\", BalancePending: \"\",\r\n  DetentionCharges: \"\", LoadingUnloadingCharges: \"\", MiscCharges: \"\",\r\n  ProcessingCharges: \"\", NetBalance: \"\", BalanceRecAmount: \"\", BalanceUTR: \"\",\r\n  BalanceRecDate: \"\", RemainingBalance: \"\", RemainingBalanceUTR: \"\",\r\n  RemainingBalanceDate: \"\", SupplierBuyRate: \"\", SupplierAdvancePay: \"\",\r\n  SupplierAdvancePaid: \"\", SupplierMisCharges: \"\", SupplierInvoiceNo: \"\",\r\n  SupplierAdvanceUTR: \"\", SupplierAdvancePayDate: \"\", SupplierBalancePending: \"\",\r\n  SupplierBalancePaidAmount: \"\", SupplierBalancePaidUTR: \"\",\r\n  SupplierBalancePaidDate: \"\", RemainingSupplierAmount: \"\", PODRecDate: \"\",\r\n  PODSendToCustomerDate: \"\", PODDocketNo: \"\", PODRecByCustomer: \"\",\r\n  PODDeductionIfAny: \"\", GrossProfit: \"\", BadDebts: \"\", NetProfit: \"\"\r\n};\r\n\r\nconst ManualEntryForm = ({ onAddRow }) => {\r\n  const [formData, setFormData] = useState(initialForm);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const getNextFleetNumber = async () => {\r\n    const counterRef = doc(db, \"Counters\", \"fleet_counter\");\r\n    const newFleetNo = await runTransaction(db, async (transaction) => {\r\n      const docSnap = await transaction.get(counterRef);\r\n      if (!docSnap.exists()) throw new Error(\"Counter document does not exist.\");\r\n      const current = docSnap.data().nextFleetNo || 1;\r\n      transaction.update(counterRef, { nextFleetNo: current + 1 });\r\n      return current;\r\n    });\r\n    return newFleetNo;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    try {\r\n      const user = auth.currentUser;\r\n      const fleetNumber = await getNextFleetNumber();\r\n\r\n      const enrichedData = {\r\n        ...formData,\r\n        fleetNumber,\r\n        createdAt: new Date(),\r\n        createdBy: user?.email || \"anonymous\",\r\n        isCurrent: true,\r\n        versionDate: new Date()\r\n      };\r\n\r\n      const docRef = await addDoc(collection(db, \"fleet_records\"), enrichedData);\r\n      onAddRow({ id: docRef.id, ...enrichedData });\r\n\r\n      setFormData(initialForm);\r\n      await navigator.clipboard.writeText(String(fleetNumber));\r\n      toast.success(`✅ Row saved! Fleet Number copied: ${fleetNumber}`);\r\n    } catch (err) {\r\n      toast.error(\"❌ Error saving row: \" + err.message);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: 20 }}>\r\n      <h4>Manual Entry</h4>\r\n      <form onSubmit={handleSubmit}>\r\n        {Object.keys(initialForm).map((key) => (\r\n          <input\r\n            key={key}\r\n            name={key}\r\n            placeholder={key}\r\n            value={formData[key]}\r\n            onChange={handleChange}\r\n            style={{\r\n              margin: 4,\r\n              width: \"220px\",\r\n              padding: \"6px 10px\",\r\n              borderRadius: \"6px\",\r\n              border: \"1px solid #ccc\"\r\n            }}\r\n          />\r\n        ))}\r\n        <br />\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          {isSubmitting ? (\r\n            <>\r\n              Saving... <span className=\"loader-spinner\" />\r\n            </>\r\n          ) : \"Add Row\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManualEntryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}