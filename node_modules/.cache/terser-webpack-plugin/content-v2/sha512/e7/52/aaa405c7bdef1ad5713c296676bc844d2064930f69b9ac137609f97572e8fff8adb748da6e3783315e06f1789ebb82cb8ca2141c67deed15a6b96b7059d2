{"map":"{\"version\":3,\"sources\":[\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/firebase.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/Auth.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/ManualEntryForm.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/UploadForm.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/App.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/reportWebVitals.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/index.js\"],\"names\":[\"app\",\"initializeApp\",\"apiKey\",\"authDomain\",\"projectId\",\"storageBucket\",\"messagingSenderId\",\"appId\",\"measurementId\",\"auth\",\"getAuth\",\"db\",\"getFirestore\",\"styles\",\"container\",\"minHeight\",\"background\",\"display\",\"justifyContent\",\"alignItems\",\"padding\",\"card\",\"width\",\"maxWidth\",\"borderRadius\",\"boxShadow\",\"textAlign\",\"logo\",\"margin\",\"title\",\"marginBottom\",\"color\",\"form\",\"flexDirection\",\"gap\",\"input\",\"border\",\"fontSize\",\"outline\",\"submitBtn\",\"backgroundColor\",\"cursor\",\"toggleBtn\",\"marginTop\",\"textDecoration\",\"Auth\",\"email\",\"setEmail\",\"useState\",\"password\",\"setPassword\",\"isLogin\",\"setIsLogin\",\"loading\",\"setLoading\",\"React\",\"createElement\",\"style\",\"src\",\"alt\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"signInWithEmailAndPassword\",\"alert\",\"createUserWithEmailAndPassword\",\"err\",\"message\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"required\",\"disabled\",\"onClick\",\"fixedFieldsInitial\",\"date\",\"months\",\"origin\",\"destination\",\"customer\",\"customerType\",\"vehicleNo\",\"vendor\",\"salesRate\",\"buyRate\",\"customerFields\",\"toBeAdvance\",\"advanceReceived\",\"advDeviation\",\"advanceRecDate\",\"validatedAdvanceUTRDescription\",\"validatedAdvanceAmount\",\"balance\",\"processingCharges\",\"inwardMisCharges\",\"outwardMisCharges\",\"balanceReceived\",\"remainingBalance\",\"balanceRecDate\",\"validatedBalanceUTR\",\"validatedBalanceUTRAmount\",\"vendorFields\",\"vendorOutwardPayment\",\"paidAmount\",\"balancePending\",\"vendorRemark\",\"podFields\",\"podVendorDate\",\"podSendToCustomerDate\",\"docNo\",\"podCustomerRec\",\"today\",\"balanceOverdueDays\",\"toBeCollectedAmount\",\"flattenObject\",\"obj\",\"prefix\",\"arguments\",\"length\",\"undefined\",\"result\",\"key\",\"fullKey\",\"concat\",\"seconds\",\"Object\",\"assign\",\"ManualEntryForm\",\"_ref\",\"onAddRow\",\"fixedFields\",\"setFixedFields\",\"customerData\",\"setCustomerData\",\"vendorData\",\"setVendorData\",\"podData\",\"setPodData\",\"indentNumber\",\"setIndentNumber\",\"docId\",\"setDocId\",\"showCustomer\",\"setShowCustomer\",\"showVendor\",\"setShowVendor\",\"showPod\",\"setShowPod\",\"customerSaved\",\"setCustomerSaved\",\"vendorSaved\",\"setVendorSaved\",\"podSaved\",\"setPodSaved\",\"useEffect\",\"storedIndentNo\",\"localStorage\",\"getItem\",\"storedFixed\",\"storedCustomer\",\"storedVendor\",\"storedPod\",\"storedDocId\",\"Number\",\"JSON\",\"parse\",\"formatLabel\",\"replace\",\"str\",\"toUpperCase\",\"convertDateFields\",\"data\",\"allowedKeys\",\"entries\",\"forEach\",\"_ref2\",\"includes\",\"parsed\",\"Date\",\"isNaN\",\"Timestamp\",\"fromDate\",\"handleFixedChange\",\"updated\",\"_objectSpread\",\"[object Object]\",\"name\",\"setItem\",\"stringify\",\"handleSectionChange\",\"section\",\"saveSection\",\"sectionName\",\"sectionData\",\"dateFields\",\"docRef\",\"doc\",\"updateDoc\",\"confirmAlert\",\"buttons\",\"label\",\"className\",\"gridTemplateColumns\",\"keys\",\"map\",\"toLowerCase\",\"fontWeight\",\"values\",\"some\",\"val\",\"String\",\"trim\",\"user\",\"currentUser\",\"indentNo\",\"counterRef\",\"runTransaction\",\"docSnap\",\"transaction\",\"get\",\"exists\",\"Error\",\"current\",\"nextFleetNo\",\"update\",\"getNextIndentNumber\",\"enrichedData\",\"createdAt\",\"createdBy\",\"isCurrent\",\"versionDate\",\"updateDescription\",\"addDoc\",\"collection\",\"id\",\"navigator\",\"clipboard\",\"writeText\",\"Fragment\",\"checked\",\"marginLeft\",\"getDoc\",\"removeItem\",\"handleNewRecord\",\"UploadForm\",\"finalColumnOrder\",\"columnLabels\",\"expiredAt\",\"customerMaster.toBeAdvance\",\"customerMaster.advanceReceived\",\"customerMaster.advDeviation\",\"customerMaster.advanceRecDate\",\"customerMaster.validatedAdvanceUTRDescription\",\"customerMaster.validatedAdvanceAmount\",\"customerMaster.balance\",\"customerMaster.processingCharges\",\"customerMaster.inwardMisCharges\",\"customerMaster.outwardMisCharges\",\"customerMaster.balanceReceived\",\"customerMaster.remainingBalance\",\"customerMaster.balanceRecDate\",\"customerMaster.validatedBalanceUTR\",\"customerMaster.validatedBalanceUTRAmount\",\"vendorMaster.vendorOutwardPayment\",\"vendorMaster.paidAmount\",\"vendorMaster.balancePending\",\"vendorMaster.vendorRemark\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.docNo\",\"podMaster.podCustomerRec\",\"podMaster.today\",\"podMaster.balanceOverdueDays\",\"podMaster.toBeCollectedAmount\",\"App\",\"setUser\",\"authLoading\",\"setAuthLoading\",\"records\",\"setRecords\",\"history\",\"setHistory\",\"searchKey\",\"setSearchKey\",\"searchField\",\"setSearchField\",\"startDate\",\"setStartDate\",\"endDate\",\"setEndDate\",\"originalRecords\",\"setOriginalRecords\",\"isSearching\",\"setIsSearching\",\"isExporting\",\"setIsExporting\",\"searchAttempted\",\"setSearchAttempted\",\"activeOnly\",\"setActiveOnly\",\"includeCustomer\",\"setIncludeCustomer\",\"includeVendor\",\"setIncludeVendor\",\"includePOD\",\"setIncludePOD\",\"unsubscribe\",\"onAuthStateChanged\",\"handleSearch\",\"fleetRef\",\"q\",\"toDate\",\"toast\",\"warn\",\"query\",\"where\",\"snapshot\",\"getDocs\",\"allVersions\",\"currentOnly\",\"rawData\",\"row\",\"push\",\"sort\",\"a\",\"b\",\"empty\",\"info\",\"error\",\"overflowX\",\"height\",\"signOut\",\"addToHistory\",\"flexWrap\",\"flex\",\"marginRight\",\"col\",\"rowIndex\",\"j\",\"_row$col\",\"_row$col2\",\"toLocaleDateString\",\"toLocaleString\",\"readOnly\",\"updatedData\",\"_objectWithoutProperties\",\"_excluded\",\"oldDoc\",\"docs\",\"find\",\"oldData\",\"cleanData\",\"updateLog\",\"_updatedData$key\",\"_oldData$key\",\"newVal\",\"oldVal\",\"join\",\"modifiedBy\",\"newVersion\",\"success\",\"handleUpdate\",\"fleetNumberToDelete\",\"Promise\",\"all\",\"deleteDoc\",\"prev\",\"filter\",\"r\",\"handleDelete\",\"handleExportToExcel\",\"fixedCols\",\"slice\",\"customerCols\",\"vendorCols\",\"podCols\",\"selectedCols\",\"exportData\",\"flatRow\",\"worksheet\",\"XLSX\",\"json_to_sheet\",\"workbook\",\"book_new\",\"book_append_sheet\",\"fileName\",\"toISOString\",\"split\",\"_a$expiredAt\",\"_b$expiredAt\",\"aTime\",\"i\",\"_row$col3\",\"_row$col4\",\"ToastContainer\",\"position\",\"autoClose\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"\\r\\n// // src/firebase.js\\r\\n\\r\\n// import { initializeApp } from \\\"firebase/app\\\";\\r\\n// import { getAuth } from \\\"firebase/auth\\\";\\r\\n// import { getFirestore } from \\\"firebase/firestore\\\";\\r\\n\\r\\n// // ✅ Your Firebase configuration\\r\\n// const firebaseConfig = {\\r\\n//   apiKey: \\\"AIzaSyCWw-I6mxAkJ1Q0Gt_wP1Bge-N0o-7MePU\\\",\\r\\n//   authDomain: \\\"sample-firebase-ai-app-c8afb.firebaseapp.com\\\",\\r\\n//   projectId: \\\"sample-firebase-ai-app-c8afb\\\",\\r\\n//   storageBucket: \\\"sample-firebase-ai-app-c8afb.appspot.com\\\", // 🔧 fixed from .app to .appspot.com\\r\\n//   messagingSenderId: \\\"221369775323\\\",\\r\\n//   appId: \\\"1:221369775323:web:c05d3eb4f88d1278d348fe\\\"\\r\\n// };\\r\\n\\r\\n// // ✅ Initialize Firebase app\\r\\n// const app = initializeApp(firebaseConfig);\\r\\n\\r\\n// // ✅ Export auth and firestore\\r\\n// export const auth = getAuth(app);\\r\\n// export const db = getFirestore(app);\\r\\n// src/firebase.js\\r\\n\\r\\nimport { initializeApp } from \\\"firebase/app\\\";\\r\\nimport { getAuth } from \\\"firebase/auth\\\";\\r\\nimport { getFirestore } from \\\"firebase/firestore\\\";\\r\\n\\r\\n// ✅ Your Firebase configuration (copied from Firebase Console)\\r\\nconst firebaseConfig = {\\r\\n  apiKey: \\\"AIzaSyAOcDXL1kQsi_MoLJ33GWn9-57qhQ0CWro\\\",\\r\\n  authDomain: \\\"fleet-9805b.firebaseapp.com\\\",\\r\\n  projectId: \\\"fleet-9805b\\\",\\r\\n  storageBucket: \\\"fleet-9805b.appspot.com\\\", // ✅ fixed: was \\\"firebasestorage.app\\\", should be \\\"appspot.com\\\"\\r\\n  messagingSenderId: \\\"682529821046\\\",\\r\\n  appId: \\\"1:682529821046:web:cbb00f5dcbac062304aa57\\\",\\r\\n  measurementId: \\\"G-T4PZQZGWZ9\\\"\\r\\n};\\r\\n\\r\\n// ✅ Initialize Firebase\\r\\nconst app = initializeApp(firebaseConfig);\\r\\n\\r\\n// ✅ Export Firebase services\\r\\nexport const auth = getAuth(app);\\r\\nexport const db = getFirestore(app);\",\"import React, { useState } from \\\"react\\\";\\r\\nimport { auth } from \\\"../firebase\\\";\\r\\nimport {\\r\\n  createUserWithEmailAndPassword,\\r\\n  signInWithEmailAndPassword\\r\\n} from \\\"firebase/auth\\\";\\r\\n\\r\\nconst Auth = () => {\\r\\n  const [email, setEmail] = useState(\\\"\\\");\\r\\n  const [password, setPassword] = useState(\\\"\\\");\\r\\n  const [isLogin, setIsLogin] = useState(true);\\r\\n  const [loading, setLoading] = useState(false);\\r\\n\\r\\n  const handleSubmit = async (e) => {\\r\\n    e.preventDefault();\\r\\n    setLoading(true);\\r\\n    try {\\r\\n      if (isLogin) {\\r\\n        await signInWithEmailAndPassword(auth, email, password);\\r\\n        alert(\\\"✅ Login successful!\\\");\\r\\n      } else {\\r\\n        await createUserWithEmailAndPassword(auth, email, password);\\r\\n        alert(\\\"✅ Account created successfully!\\\");\\r\\n      }\\r\\n    } catch (err) {\\r\\n      alert(\\\"❌ \\\" + err.message);\\r\\n    } finally {\\r\\n      setLoading(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={styles.container}>\\r\\n      <div style={styles.card}>\\r\\n        <img src=\\\"/logo.png\\\" alt=\\\"Logo\\\" style={styles.logo} />\\r\\n        <h2 style={styles.title}>{isLogin ? \\\"Login\\\" : \\\"Sign Up\\\"}</h2>\\r\\n        <form onSubmit={handleSubmit} style={styles.form}>\\r\\n          <input\\r\\n            type=\\\"email\\\"\\r\\n            placeholder=\\\"Email Address\\\"\\r\\n            value={email}\\r\\n            onChange={(e) => setEmail(e.target.value)}\\r\\n            required\\r\\n            style={styles.input}\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"password\\\"\\r\\n            placeholder=\\\"Password\\\"\\r\\n            value={password}\\r\\n            onChange={(e) => setPassword(e.target.value)}\\r\\n            required\\r\\n            style={styles.input}\\r\\n          />\\r\\n          <button type=\\\"submit\\\" disabled={loading} style={styles.submitBtn}>\\r\\n            {loading ? \\\"Please wait...\\\" : isLogin ? \\\"Login\\\" : \\\"Sign Up\\\"}\\r\\n          </button>\\r\\n        </form>\\r\\n        <button onClick={() => setIsLogin(!isLogin)} style={styles.toggleBtn}>\\r\\n          {isLogin\\r\\n            ? \\\"New here? Create an account\\\"\\r\\n            : \\\"Already registered? Login\\\"}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nconst styles = {\\r\\n  container: {\\r\\n    minHeight: \\\"100vh\\\",\\r\\n    background: \\\"linear-gradient(135deg, #1c2541, #3a506b)\\\",\\r\\n    display: \\\"flex\\\",\\r\\n    justifyContent: \\\"center\\\",\\r\\n    alignItems: \\\"center\\\",\\r\\n    padding: \\\"30px\\\"\\r\\n  },\\r\\n  card: {\\r\\n    width: \\\"100%\\\",\\r\\n    maxWidth: \\\"400px\\\",\\r\\n    background: \\\"#0b132b\\\",\\r\\n    padding: \\\"40px 30px\\\",\\r\\n    borderRadius: \\\"16px\\\",\\r\\n    boxShadow: \\\"0 0 25px rgba(0,0,0,0.3)\\\",\\r\\n    textAlign: \\\"center\\\"\\r\\n  },\\r\\n  logo: {\\r\\n    width: \\\"80%\\\",     // ✅ fit horizontally without overflowing\\r\\n    maxWidth: \\\"280px\\\",\\r\\n    margin: \\\"0 auto 20px\\\",\\r\\n    display: \\\"block\\\"\\r\\n  },\\r\\n  title: {\\r\\n    marginBottom: \\\"20px\\\",\\r\\n    color: \\\"#ffffff\\\"\\r\\n  },\\r\\n  form: {\\r\\n    display: \\\"flex\\\",\\r\\n    flexDirection: \\\"column\\\",\\r\\n    gap: \\\"15px\\\"\\r\\n  },\\r\\n  input: {\\r\\n    padding: \\\"12px\\\",\\r\\n    borderRadius: \\\"8px\\\",\\r\\n    border: \\\"1px solid #ccc\\\",\\r\\n    fontSize: \\\"16px\\\",\\r\\n    outline: \\\"none\\\"\\r\\n  },\\r\\n  submitBtn: {\\r\\n    padding: \\\"12px\\\",\\r\\n    backgroundColor: \\\"#1c7ed6\\\",\\r\\n    color: \\\"#fff\\\",\\r\\n    border: \\\"none\\\",\\r\\n    borderRadius: \\\"8px\\\",\\r\\n    fontSize: \\\"16px\\\",\\r\\n    cursor: \\\"pointer\\\"\\r\\n  },\\r\\n  toggleBtn: {\\r\\n    marginTop: \\\"20px\\\",\\r\\n    background: \\\"none\\\",\\r\\n    border: \\\"none\\\",\\r\\n    color: \\\"#74c0fc\\\",\\r\\n    cursor: \\\"pointer\\\",\\r\\n    fontSize: \\\"14px\\\",\\r\\n    textDecoration: \\\"underline\\\"\\r\\n  }\\r\\n};\\r\\n\\r\\nexport default Auth;\\r\\n\",\"import React, { useState, useEffect } from \\\"react\\\";\\r\\nimport {\\r\\n  collection,\\r\\n  addDoc,\\r\\n  updateDoc,\\r\\n  doc,\\r\\n  runTransaction,\\r\\n  Timestamp,\\r\\n  getDoc\\r\\n} from \\\"firebase/firestore\\\";\\r\\nimport { db, auth } from \\\"../firebase\\\";\\r\\nimport 'react-confirm-alert/src/react-confirm-alert.css';\\r\\nimport { confirmAlert } from 'react-confirm-alert';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nconst fixedFieldsInitial = {\\r\\n  date: \\\"\\\",\\r\\n  months: \\\"\\\",\\r\\n  origin: \\\"\\\",\\r\\n  destination: \\\"\\\",\\r\\n  customer: \\\"\\\",\\r\\n  customerType: \\\"\\\",\\r\\n  vehicleNo: \\\"\\\",\\r\\n  vendor: \\\"\\\",\\r\\n  salesRate: \\\"\\\",\\r\\n  buyRate: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst customerFields = {\\r\\n  toBeAdvance: \\\"\\\",\\r\\n  advanceReceived: \\\"\\\",\\r\\n  advDeviation: \\\"\\\",\\r\\n  advanceRecDate: \\\"\\\",\\r\\n  validatedAdvanceUTRDescription: \\\"\\\",\\r\\n  validatedAdvanceAmount: \\\"\\\",\\r\\n  balance: \\\"\\\",\\r\\n  processingCharges: \\\"\\\",\\r\\n  inwardMisCharges: \\\"\\\",\\r\\n  outwardMisCharges: \\\"\\\",\\r\\n  balanceReceived: \\\"\\\",\\r\\n  remainingBalance: \\\"\\\",\\r\\n  balanceRecDate: \\\"\\\",\\r\\n  validatedBalanceUTR: \\\"\\\",\\r\\n  validatedBalanceUTRAmount: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst vendorFields = {\\r\\n  vendorOutwardPayment: \\\"\\\",\\r\\n  paidAmount: \\\"\\\",\\r\\n  balancePending: \\\"\\\",\\r\\n  vendorRemark: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst podFields = {\\r\\n  podVendorDate: \\\"\\\",\\r\\n  podSendToCustomerDate: \\\"\\\",\\r\\n  docNo: \\\"\\\",\\r\\n  podCustomerRec: \\\"\\\",\\r\\n  today: \\\"\\\",\\r\\n  balanceOverdueDays: \\\"\\\",\\r\\n  toBeCollectedAmount: \\\"\\\"\\r\\n};\\r\\nconst flattenObject = (obj, prefix = \\\"\\\") => {\\r\\n  let result = {};\\r\\n  for (const key in obj) {\\r\\n    const value = obj[key];\\r\\n    const fullKey = prefix ? `${prefix}.${key}` : key;\\r\\n    if (value && typeof value === \\\"object\\\" && !value.seconds) {\\r\\n      Object.assign(result, flattenObject(value, fullKey));\\r\\n    } else {\\r\\n      result[fullKey] = value;\\r\\n    }\\r\\n  }\\r\\n  return result;\\r\\n};\\r\\n\\r\\nconst ManualEntryForm = ({ onAddRow }) => {\\r\\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\\r\\n  const [customerData, setCustomerData] = useState(customerFields);\\r\\n  const [vendorData, setVendorData] = useState(vendorFields);\\r\\n  const [podData, setPodData] = useState(podFields);\\r\\n  const [indentNumber, setIndentNumber] = useState(null);\\r\\n  const [docId, setDocId] = useState(null);\\r\\n\\r\\n  const [showCustomer, setShowCustomer] = useState(false);\\r\\n  const [showVendor, setShowVendor] = useState(false);\\r\\n  const [showPod, setShowPod] = useState(false);\\r\\n\\r\\n  const [customerSaved, setCustomerSaved] = useState(false);\\r\\n  const [vendorSaved, setVendorSaved] = useState(false);\\r\\n  const [podSaved, setPodSaved] = useState(false);\\r\\n\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    const storedIndentNo = localStorage.getItem(\\\"inProgressIndentNumber\\\");\\r\\n    const storedFixed = localStorage.getItem(\\\"fixedFields\\\");\\r\\n    const storedCustomer = localStorage.getItem(\\\"customerFields\\\");\\r\\n    const storedVendor = localStorage.getItem(\\\"vendorFields\\\");\\r\\n    const storedPod = localStorage.getItem(\\\"podFields\\\");\\r\\n    const storedDocId = localStorage.getItem(\\\"docId\\\");\\r\\n    \\r\\n    \\r\\n    if (storedDocId) setDocId(storedDocId);\\r\\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\\r\\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\\r\\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\\r\\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\\r\\n    if (storedPod) setPodData(JSON.parse(storedPod));\\r\\n  }, []);\\r\\n\\r\\n  const formatLabel = (key) => {\\r\\n  return key\\r\\n    .replace(/([a-z])([A-Z])/g, \\\"$1 $2\\\")   // add space before uppercase\\r\\n    .replace(/_/g, \\\" \\\")                   // replace underscore with space\\r\\n    .replace(/^./, (str) => str.toUpperCase()); // capitalize first letter\\r\\n};\\r\\n\\r\\n  const resetAll = () => {\\r\\n  setFixedFields(fixedFieldsInitial);\\r\\n  setCustomerData(customerFields);\\r\\n  setVendorData(vendorFields);\\r\\n  setPodData(podFields);\\r\\n  setIndentNumber(null);\\r\\n  setDocId(null);\\r\\n  setShowCustomer(false);\\r\\n  setShowVendor(false);\\r\\n  setShowPod(false);\\r\\n  setCustomerSaved(false);\\r\\n  setVendorSaved(false);\\r\\n  setPodSaved(false);\\r\\n\\r\\n  localStorage.removeItem(\\\"fixedFields\\\");\\r\\n  localStorage.removeItem(\\\"customerFields\\\");\\r\\n  localStorage.removeItem(\\\"vendorFields\\\");\\r\\n  localStorage.removeItem(\\\"podFields\\\");\\r\\n  localStorage.removeItem(\\\"inProgressIndentNumber\\\");\\r\\n  localStorage.removeItem(\\\"docId\\\");\\r\\n};\\r\\n\\r\\n  const convertDateFields = (data, allowedKeys = []) => {\\r\\n    const result = {};\\r\\n    Object.entries(data).forEach(([key, value]) => {\\r\\n      if (allowedKeys.includes(key) && value) {\\r\\n        const parsed = new Date(value);\\r\\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\\r\\n      } else {\\r\\n        result[key] = value;\\r\\n      }\\r\\n    });\\r\\n    return result;\\r\\n  };\\r\\n\\r\\n  const handleFixedChange = (e) => {\\r\\n  const updated = { ...fixedFields, [e.target.name]: e.target.value };\\r\\n  setFixedFields(updated);\\r\\n  localStorage.setItem(\\\"fixedFields\\\", JSON.stringify(updated));  // ✅ Save\\r\\n};\\r\\n\\r\\n\\r\\n  const handleSectionChange = (e, section) => {\\r\\n  const { name, value } = e.target;\\r\\n  if (section === \\\"customer\\\") {\\r\\n    const updated = { ...customerData, [name]: value };\\r\\n    setCustomerData(updated);\\r\\n    localStorage.setItem(\\\"customerFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n  if (section === \\\"vendor\\\") {\\r\\n    const updated = { ...vendorData, [name]: value };\\r\\n    setVendorData(updated);\\r\\n    localStorage.setItem(\\\"vendorFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n  if (section === \\\"pod\\\") {\\r\\n    const updated = { ...podData, [name]: value };\\r\\n    setPodData(updated);\\r\\n    localStorage.setItem(\\\"podFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n  const getNextIndentNumber = async () => {\\r\\n  const counterRef = doc(db, \\\"Counters\\\", \\\"fleet_counter\\\");\\r\\n  const newIndentNo = await runTransaction(db, async (transaction) => {\\r\\n    const docSnap = await transaction.get(counterRef);\\r\\n    if (!docSnap.exists()) throw new Error(\\\"Counter doc missing\\\");\\r\\n    const current = docSnap.data().nextFleetNo || 1;\\r\\n    transaction.update(counterRef, { nextFleetNo: current + 1 });\\r\\n    return current;\\r\\n  });\\r\\n  return newIndentNo;\\r\\n};\\r\\n\\r\\n\\r\\n  const handleFixedSave = async () => {\\r\\n    const hasAnyValue = Object.values(fixedFields).some(\\r\\n  val => String(val ?? \\\"\\\").trim() !== \\\"\\\"\\r\\n);\\r\\n\\r\\nif (!hasAnyValue) {\\r\\n  confirmAlert({\\r\\n    title: 'Validation Error',\\r\\n    message: '⚠️ Please fill at least one field before continuing.',\\r\\n    buttons: [\\r\\n      {\\r\\n        label: 'OK'\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n    try {\\r\\n      const user = auth.currentUser;\\r\\n      const indentNo  = await getNextIndentNumber();\\r\\n      const enrichedData = {\\r\\n        indentNumber: indentNo,\\r\\n        ...convertDateFields(fixedFields, [\\\"date\\\"]),\\r\\n        createdAt: new Date(),\\r\\n        createdBy: user?.email || \\\"anonymous\\\",\\r\\n        isCurrent: true,\\r\\n        versionDate: new Date(),\\r\\n        updateDescription: \\\"\\\"\\r\\n      };\\r\\n\\r\\n      const docRef = await addDoc(collection(db, \\\"fleet_records\\\"), enrichedData);\\r\\n      setIndentNumber(indentNo);\\r\\n      setDocId(docRef.id);\\r\\n      localStorage.setItem(\\\"docId\\\", docRef.id);\\r\\n      localStorage.setItem(\\\"inProgressIndentNumber\\\", indentNo);\\r\\n      await navigator.clipboard.writeText(String(indentNo));\\r\\n      confirmAlert({\\r\\n  title: 'Success',\\r\\n  message: `✅ Fixed fields saved. Indent Number copied: ${indentNo}`,\\r\\n  buttons: [\\r\\n    { label: 'OK' }\\r\\n  ]\\r\\n});\\r\\n\\r\\n    } catch (err) {\\r\\n      confirmAlert({\\r\\n  title: 'Error',\\r\\n  message: \\\"❌ Error saving fixed fields: \\\" + err.message,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\\r\\n    if (!docId) {\\r\\n  confirmAlert({\\r\\n    title: 'Missing Info',\\r\\n    message: '⚠️ Save fixed fields first.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n    try {\\r\\n      const docRef = doc(db, \\\"fleet_records\\\", docId);\\r\\n      await updateDoc(docRef, {\\r\\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\\r\\n      });\\r\\n      if (sectionName === \\\"customerMaster\\\") setCustomerSaved(true);\\r\\n      if (sectionName === \\\"vendorMaster\\\") setVendorSaved(true);\\r\\n      if (sectionName === \\\"podMaster\\\") setPodSaved(true);\\r\\n      confirmAlert({\\r\\n  title: 'Saved',\\r\\n  message: `✅ ${sectionName} saved.`,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    } catch (err) {\\r\\n      confirmAlert({\\r\\n  title: 'Error',\\r\\n  message: \\\"❌ Save error: \\\" + err.message,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    }\\r\\n  };\\r\\n\\r\\n const handleFinalSubmit = async () => {\\r\\n  if (!docId) {\\r\\n  confirmAlert({\\r\\n    title: 'Error',\\r\\n    message: 'Fleet data not ready.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n  // Save any unsaved sections first\\r\\n  if (showCustomer && !customerSaved) {\\r\\n    await saveSection(\\\"customerMaster\\\", customerData, [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"]);\\r\\n  }\\r\\n  if (showVendor && !vendorSaved) {\\r\\n    await saveSection(\\\"vendorMaster\\\", vendorData);\\r\\n  }\\r\\n  if (showPod && !podSaved) {\\r\\n    await saveSection(\\\"podMaster\\\", podData, [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"]);\\r\\n  }\\r\\n\\r\\n  const docSnap = await getDoc(doc(db, \\\"fleet_records\\\", docId));\\r\\n  if (!docSnap.exists()) {\\r\\n  confirmAlert({\\r\\n    title: 'Error',\\r\\n    message: 'Data not found.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n  const data = { id: docSnap.id, ...docSnap.data() };\\r\\n  onAddRow(flattenObject(data), true);\\r\\n\\r\\n\\r\\n  // Reset all state\\r\\n  setFixedFields(fixedFieldsInitial);\\r\\n  setCustomerData(customerFields);\\r\\n  setVendorData(vendorFields);\\r\\n  setPodData(podFields);\\r\\n  setIndentNumber(null);\\r\\n  setDocId(null);\\r\\n  setShowCustomer(false);\\r\\n  setShowVendor(false);\\r\\n  setShowPod(false);\\r\\n  setCustomerSaved(false);\\r\\n  setVendorSaved(false);\\r\\n  setPodSaved(false);\\r\\n\\r\\n  localStorage.removeItem(\\\"fixedFields\\\");\\r\\n  localStorage.removeItem(\\\"customerFields\\\");\\r\\n  localStorage.removeItem(\\\"vendorFields\\\");\\r\\n  localStorage.removeItem(\\\"podFields\\\");\\r\\n  localStorage.removeItem(\\\"inProgressIndentNumber\\\");\\r\\n  localStorage.removeItem(\\\"docId\\\");\\r\\n\\r\\n\\r\\n\\r\\n  confirmAlert({\\r\\n  title: 'Done',\\r\\n  message: '✅ Record submitted and ready in editable table.',\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n};\\r\\n\\r\\nconst handleNewRecord = () => {\\r\\n  confirmAlert({\\r\\n    title: 'Confirm New Entry',\\r\\n    message: 'Start a new entry? Unsaved data will be lost.',\\r\\n    buttons: [\\r\\n      {\\r\\n        label: 'Yes',\\r\\n        onClick: () => {\\r\\n          resetAll();\\r\\n          confirmAlert({\\r\\n            title: 'Ready',\\r\\n            message: '🆕 Ready to start a new record.',\\r\\n            buttons: [{ label: 'OK' }]\\r\\n          });\\r\\n        }\\r\\n      },\\r\\n      {\\r\\n        label: 'No'\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div style={{ marginTop: 20 }}>\\r\\n      <h4>Step 1: Fixed Fields</h4>\\r\\n<div className=\\\"card p-4 mb-4\\\">\\r\\n  <div\\r\\n    className=\\\"fixed-fields-grid\\\"\\r\\n    style={{\\r\\n      display: \\\"grid\\\",\\r\\n      gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n      gap: \\\"16px\\\",\\r\\n    }}\\r\\n  >\\r\\n    {Object.keys(fixedFieldsInitial).map((key) => {\\r\\n      const isDate = key.toLowerCase().includes(\\\"date\\\");\\r\\n      const label =\\r\\n        isDate\\r\\n          ? `${key} (dd/mm/yyyy)`\\r\\n          : key === \\\"months\\\"\\r\\n          ? \\\"months (e.g. Jul-2025)\\\"\\r\\n          : key;\\r\\n\\r\\n      return (\\r\\n        <div key={key}>\\r\\n          <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n  value={fixedFields[key]}\\r\\n  onChange={handleFixedChange}\\r\\n  disabled={!!indentNumber}\\r\\n  type=\\\"text\\\"\\r\\n/>\\r\\n\\r\\n        </div>\\r\\n      );\\r\\n    })}\\r\\n  </div>\\r\\n\\r\\n  {!indentNumber && (\\r\\n  <div style={{ marginTop: \\\"20px\\\", width: \\\"100%\\\", textAlign: \\\"right\\\" }}>\\r\\n    <button className=\\\"btn btn-primary\\\" onClick={handleFixedSave}>\\r\\n      💾 Save & Continue\\r\\n    </button>\\r\\n  </div>\\r\\n)}\\r\\n\\r\\n \\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n      {indentNumber  && (\\r\\n        <>\\r\\n          <p style={{ color: \\\"green\\\" }}>✅ Saved. Indent No: {indentNumber}</p>\\r\\n\\r\\n          <h4>Step 2: Select Master Sections</h4>\\r\\n          <label>\\r\\n            <input type=\\\"checkbox\\\" checked={showCustomer} onChange={() => setShowCustomer(!showCustomer)} disabled={customerSaved} /> Customer Master\\r\\n          </label>\\r\\n          <label style={{ marginLeft: 15 }}>\\r\\n            <input type=\\\"checkbox\\\" checked={showVendor} onChange={() => setShowVendor(!showVendor)} disabled={vendorSaved} /> Vendor Master\\r\\n          </label>\\r\\n          <label style={{ marginLeft: 15 }}>\\r\\n            <input type=\\\"checkbox\\\" checked={showPod} onChange={() => setShowPod(!showPod)} disabled={podSaved} /> POD Master\\r\\n          </label>\\r\\n\\r\\n          {showCustomer && (\\r\\n  <>\\r\\n    <h5>Customer Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(customerFields).map((key) => {\\r\\n          const isDate = [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"].includes(key);\\r\\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n                value={customerData[key]}\\r\\n                onChange={(e) => handleSectionChange(e, \\\"customer\\\")}\\r\\n                disabled={customerSaved}\\r\\n                type=\\\"text\\\"\\r\\n              />\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!customerSaved && (\\r\\n  <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n    <button\\r\\n      className=\\\"btn btn-primary\\\"\\r\\n      onClick={() => saveSection(\\\"customerMaster\\\", customerData, [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"])}\\r\\n    >\\r\\n      Save Customer\\r\\n    </button>\\r\\n  </div>\\r\\n)}\\r\\n\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          {showVendor && (\\r\\n  <>\\r\\n    <h5>Vendor Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(vendorFields).map((key) => {\\r\\n          const label = key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n                value={vendorData[key]}\\r\\n                onChange={(e) => handleSectionChange(e, \\\"vendor\\\")}\\r\\n                disabled={vendorSaved}\\r\\n                type=\\\"text\\\"\\r\\n              />\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!vendorSaved && (\\r\\n        <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n        <button className=\\\"btn btn-primary mt-3\\\" onClick={() => saveSection(\\\"vendorMaster\\\", vendorData)}>\\r\\n          Save Vendor\\r\\n        </button>\\r\\n        </div>\\r\\n      )}\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          {showPod && (\\r\\n  <>\\r\\n    <h5>POD Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(podFields).map((key) => {\\r\\n          const isDate = [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"].includes(key);\\r\\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n                value={podData[key]}\\r\\n                onChange={(e) => handleSectionChange(e, \\\"pod\\\")}\\r\\n                disabled={podSaved}\\r\\n                type=\\\"text\\\"\\r\\n              />\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!podSaved && (\\r\\n        <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n        <button className=\\\"btn btn-primary mt-3\\\" onClick={() => saveSection(\\\"podMaster\\\", podData, [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"])}>\\r\\n          Save POD\\r\\n        </button>\\r\\n        </div>\\r\\n      )}\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          <br />\\r\\n          <div style={{ marginTop: 10, width: \\\"100%\\\", textAlign: \\\"right\\\" }}>\\r\\n  <button onClick={handleFinalSubmit} className=\\\"btn btn-success me-2\\\">\\r\\n    ✅ Submit Record\\r\\n  </button>\\r\\n  <button onClick={handleNewRecord} className=\\\"btn btn-primary\\\">\\r\\n    ➕ Add New Record\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n        </>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ManualEntryForm;\\r\\n\",\"import React, { useState } from \\\"react\\\";\\r\\nimport { addDoc, collection, doc, runTransaction } from \\\"firebase/firestore\\\";\\r\\nimport * as XLSX from \\\"xlsx\\\";\\r\\nimport { db, auth } from \\\"../firebase\\\";\\r\\n\\r\\nconst labelToKey = {\\r\\n  \\\"Indent No\\\": \\\"IndentNo\\\", \\\"Indent Date\\\": \\\"IndentDate\\\", \\\"Placement Date\\\": \\\"PlacementDate\\\",\\r\\n  \\\"Customer\\\": \\\"Customer\\\", \\\"Customer Type\\\": \\\"CustomerType\\\", \\\"Customer Billing Type\\\": \\\"CustomerBillingType\\\",\\r\\n  \\\"Sourcing (Vendor)\\\": \\\"SourcingVendor\\\", \\\"Vendor Type\\\": \\\"VendorType\\\", \\\"Vendor Billing Type\\\": \\\"VendorBillingType\\\",\\r\\n  \\\"Origin\\\": \\\"Origin\\\", \\\"Destination\\\": \\\"Destination\\\", \\\"Vehicle No\\\": \\\"VehicleNo\\\", \\\"Vehicle type\\\": \\\"VehicleType\\\",\\r\\n  \\\"Driver No\\\": \\\"DriverNo\\\", \\\"Dispatch Date\\\": \\\"DispatchDate\\\", \\\"Deliver Date\\\": \\\"DeliverDate\\\",\\r\\n  \\\"Offloading Date\\\": \\\"OffloadingDate\\\", \\\"E-way Bill\\\": \\\"EwayBill\\\", \\\"LR No.\\\": \\\"LRNo\\\",\\r\\n  \\\"Soft Copy POD Rec\\\": \\\"SoftCopyPODRec\\\", \\\"Hard Copy POD Rec\\\": \\\"HardCopyPODRec\\\",\\r\\n  \\\"Customer -Sale rate\\\": \\\"CustomerSaleRate\\\", \\\"Advance to be Paid\\\": \\\"AdvanceToBePaid\\\",\\r\\n  \\\"Advance Rec\\\": \\\"AdvanceRec\\\", \\\"Advance UTR\\\": \\\"AdvanceUTR\\\", \\\"Advance Rec-Date\\\": \\\"AdvanceRecDate\\\",\\r\\n  \\\"Balance Pending\\\": \\\"BalancePending\\\", \\\"Detention Charges\\\": \\\"DetentionCharges\\\",\\r\\n  \\\"Loading/Unloading Charges\\\": \\\"LoadingUnloadingCharges\\\", \\\"Miscellaneous Charges.\\\": \\\"MiscCharges\\\",\\r\\n  \\\"Processing Charges\\\": \\\"ProcessingCharges\\\", \\\"Net Balance\\\": \\\"NetBalance\\\",\\r\\n  \\\"Balance Rec Amount\\\": \\\"BalanceRecAmount\\\", \\\"Balance UTR\\\": \\\"BalanceUTR\\\", \\\"Balance Rec Date\\\": \\\"BalanceRecDate\\\",\\r\\n  \\\"Remaining Balance\\\": \\\"RemainingBalance\\\", \\\"Remaining Balance UTR\\\": \\\"RemainingBalanceUTR\\\",\\r\\n  \\\"Remaining Balance Date\\\": \\\"RemainingBalanceDate\\\", \\\"Supplier Buy Rate\\\": \\\"SupplierBuyRate\\\",\\r\\n  \\\"Supplier Advance Pay\\\": \\\"SupplierAdvancePay\\\", \\\"Supplier Advance Paid\\\": \\\"SupplierAdvancePaid\\\",\\r\\n  \\\"Supplier Mis Charges\\\": \\\"SupplierMisCharges\\\", \\\"Supplier Invoice No.\\\": \\\"SupplierInvoiceNo\\\",\\r\\n  \\\"Supplier Advance UTR\\\": \\\"SupplierAdvanceUTR\\\", \\\"Supplier Advance Pay-Date\\\": \\\"SupplierAdvancePayDate\\\",\\r\\n  \\\"Supplier Balance Pending\\\": \\\"SupplierBalancePending\\\", \\\"Supplier Balance Paid Amount\\\": \\\"SupplierBalancePaidAmount\\\",\\r\\n  \\\"Supplier Balance Paid UTR\\\": \\\"SupplierBalancePaidUTR\\\", \\\"Supplier Balance Paid Date\\\": \\\"SupplierBalancePaidDate\\\",\\r\\n  \\\"Remaining Supplier Amount\\\": \\\"RemainingSupplierAmount\\\", \\\"POD Rec Date\\\": \\\"PODRecDate\\\",\\r\\n  \\\"POD Send to Customer Date\\\": \\\"PODSendToCustomerDate\\\", \\\"POD Docket No.\\\": \\\"PODDocketNo\\\",\\r\\n  \\\"POD Rec By Customer\\\": \\\"PODRecByCustomer\\\", \\\"POD Deduction If any\\\": \\\"PODDeductionIfAny\\\",\\r\\n  \\\"Gross Profit\\\": \\\"GrossProfit\\\", \\\"Bad Debts\\\": \\\"BadDebts\\\", \\\"Net Profit\\\": \\\"NetProfit\\\"\\r\\n};\\r\\n\\r\\nconst dateFields = [\\r\\n  \\\"Indent Date\\\", \\\"Placement Date\\\", \\\"Dispatch Date\\\", \\\"Deliver Date\\\", \\\"Offloading Date\\\",\\r\\n  \\\"Soft Copy POD Rec\\\", \\\"Hard Copy POD Rec\\\", \\\"Advance Rec-Date\\\", \\\"Balance Rec Date\\\",\\r\\n  \\\"Remaining Balance Date\\\", \\\"Supplier Advance Pay-Date\\\", \\\"Supplier Balance Paid Date\\\",\\r\\n  \\\"POD Rec Date\\\", \\\"POD Send to Customer Date\\\", \\\"POD Rec By Customer\\\"\\r\\n];\\r\\n\\r\\nconst UploadForm = () => {\\r\\n  const [previewData, setPreviewData] = useState([]);\\r\\n  const [statusMap, setStatusMap] = useState({});\\r\\n  const [fleetNumbers, setFleetNumbers] = useState({});\\r\\n\\r\\n  const normalize = (label) => (label || \\\"\\\").replace(/[.\\\\s]+/g, \\\" \\\").trim().toLowerCase();\\r\\n\\r\\n  const getMappedKey = (label) => {\\r\\n    const normalizedLabel = normalize(label);\\r\\n    return Object.entries(labelToKey).find(\\r\\n      ([rawLabel]) => normalize(rawLabel) === normalizedLabel\\r\\n    )?.[1];\\r\\n  };\\r\\n\\r\\n  const parseExcel = (file) => {\\r\\n    if (!file) {\\r\\n      alert(\\\"No file selected\\\");\\r\\n      return;\\r\\n    }\\r\\n\\r\\n    alert(\\\"File selected: \\\" + file.name);\\r\\n    const reader = new FileReader();\\r\\n    reader.onload = (e) => {\\r\\n      alert(\\\"File read started\\\");\\r\\n\\r\\n      const workbook = XLSX.read(e.target.result, { type: \\\"binary\\\" });\\r\\n      const sheetName = workbook.SheetNames[0];\\r\\n      alert(\\\"Reading sheet: \\\" + sheetName);\\r\\n      const sheet = workbook.Sheets[sheetName];\\r\\n\\r\\n      const raw = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: \\\"\\\", blankrows: false });\\r\\n      if (raw.length < 3) {\\r\\n        alert(\\\"Not enough rows to parse.\\\");\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      raw.splice(0, 1); // Remove useless top row\\r\\n      const headers = raw[0];\\r\\n      const rows = raw.slice(1).map((row, rowIndex) => {\\r\\n        const obj = {};\\r\\n        headers.forEach((h, j) => {\\r\\n          const key = getMappedKey(h);\\r\\n          if (!key) return;\\r\\n\\r\\n          const value = row[j];\\r\\n          const isDate = dateFields.some(df => normalize(df) === normalize(h));\\r\\n\\r\\n          if (typeof value === \\\"number\\\" && isDate) {\\r\\n            const d = XLSX.SSF.parse_date_code(value);\\r\\n            if (d) {\\r\\n              obj[key] = `${String(d.d).padStart(2, '0')}-${String(d.m).padStart(2, '0')}-${d.y}`;\\r\\n            }\\r\\n          } else {\\r\\n            obj[key] = String(value ?? \\\"\\\").trim();\\r\\n          }\\r\\n        });\\r\\n        return obj;\\r\\n      });\\r\\n\\r\\n      alert(\\\"Parsed rows: \\\" + rows.length);\\r\\n      setPreviewData(rows);\\r\\n      setStatusMap({});\\r\\n      setFleetNumbers({});\\r\\n    };\\r\\n\\r\\n    reader.onerror = (err) => {\\r\\n      alert(\\\"Failed to read file: \\\" + err);\\r\\n      console.error(\\\"FileReader error:\\\", err);\\r\\n    };\\r\\n\\r\\n    reader.readAsBinaryString(file);\\r\\n  };\\r\\n\\r\\n  const getNextFleetNumber = async () => {\\r\\n    const counterRef = doc(db, \\\"Counters\\\", \\\"fleet_counter\\\");\\r\\n    const newFleetNo = await runTransaction(db, async (transaction) => {\\r\\n      const docSnap = await transaction.get(counterRef);\\r\\n      if (!docSnap.exists()) throw new Error(\\\"Counter doc missing\\\");\\r\\n      const current = docSnap.data().nextFleetNo || 1;\\r\\n      transaction.update(counterRef, { nextFleetNo: current + 1 });\\r\\n      return current;\\r\\n    });\\r\\n    return newFleetNo;\\r\\n  };\\r\\n\\r\\n  const saveRow = async (row, i) => {\\r\\n    const user = auth.currentUser;\\r\\n    try {\\r\\n      const newFleetNo = await getNextFleetNumber();\\r\\n      const enriched = {\\r\\n        ...row,\\r\\n        fleetNumber: newFleetNo,\\r\\n        createdAt: new Date(),\\r\\n        createdBy: user?.email || \\\"anonymous\\\",\\r\\n        isCurrent: true,\\r\\n        versionDate: new Date(),\\r\\n      };\\r\\n      await addDoc(collection(db, \\\"fleet_records\\\"), enriched);\\r\\n      setStatusMap(prev => ({ ...prev, [i]: \\\"✅ Saved\\\" }));\\r\\n      setFleetNumbers(prev => ({ ...prev, [i]: newFleetNo }));\\r\\n    } catch (err) {\\r\\n      setStatusMap(prev => ({ ...prev, [i]: \\\"❌ Failed\\\" }));\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const saveAll = async () => {\\r\\n    for (let i = 0; i < previewData.length; i++) {\\r\\n      if (!statusMap[i]) await saveRow(previewData[i], i);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleEdit = (i, key, value) => {\\r\\n    const updated = [...previewData];\\r\\n    updated[i][key] = value;\\r\\n    setPreviewData(updated);\\r\\n  };\\r\\n\\r\\n  const deleteRow = (i) => {\\r\\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\\r\\n    const s = { ...statusMap }; delete s[i];\\r\\n    const f = { ...fleetNumbers }; delete f[i];\\r\\n    setStatusMap(s);\\r\\n    setFleetNumbers(f);\\r\\n  };\\r\\n\\r\\n  const resetTable = () => {\\r\\n    setPreviewData([]);\\r\\n    setStatusMap({});\\r\\n    setFleetNumbers({});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={{ marginBottom: 40 }}>\\r\\n      <h4>Upload Excel & Preview</h4>\\r\\n      <input\\r\\n        type=\\\"file\\\"\\r\\n        accept=\\\".xlsx, .xls\\\"\\r\\n        onChange={(e) => {\\r\\n          const file = e.target.files?.[0];\\r\\n          if (file) {\\r\\n            parseExcel(file);\\r\\n            setTimeout(() => {\\r\\n              e.target.value = \\\"\\\";\\r\\n            }, 100);\\r\\n          } else {\\r\\n            alert(\\\"No file selected.\\\");\\r\\n          }\\r\\n        }}\\r\\n      />\\r\\n      {previewData.length > 0 && (\\r\\n        <>\\r\\n          <h5 style={{ marginTop: 20 }}>📄 Preview Table (Excel Upload)</h5>\\r\\n          <button onClick={saveAll}>💾 Save All</button>\\r\\n          <button onClick={resetTable} style={{ marginLeft: 10, color: \\\"red\\\" }}>🧹 Clear</button>\\r\\n          <div className=\\\"table-scroll-x\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Fleet Number</th>\\r\\n                  {Object.keys(previewData[0]).map(key => <th key={key}>{key}</th>)}\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                {previewData.map((row, i) => (\\r\\n                  <tr key={i}>\\r\\n                    <td>{fleetNumbers[i] || \\\"\\\"}</td>\\r\\n                    {Object.keys(row).map((key) => (\\r\\n                      <td key={key}>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          value={row[key]}\\r\\n                          onChange={(e) => handleEdit(i, key, e.target.value)}\\r\\n                          style={{ width: \\\"120px\\\" }}\\r\\n                        />\\r\\n                      </td>\\r\\n                    ))}\\r\\n                    <td>{statusMap[i] || \\\"⏳ Pending\\\"}</td>\\r\\n                    <td>\\r\\n                      <button onClick={() => saveRow(row, i)} disabled={statusMap[i] === \\\"✅ Saved\\\"}>Save</button>\\r\\n                      <button onClick={() => deleteRow(i)} style={{ marginLeft: 6, color: \\\"red\\\" }}>Delete</button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                ))}\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default UploadForm;\\r\\n\",\"import React, { useEffect, useState } from \\\"react\\\";\\r\\nimport { onAuthStateChanged, signOut } from \\\"firebase/auth\\\";\\r\\nimport {\\r\\n  collection,\\r\\n  query,\\r\\n  where,\\r\\n  getDocs,\\r\\n  getDoc,\\r\\n  updateDoc,\\r\\n  deleteDoc,\\r\\n  doc,\\r\\n  addDoc,\\r\\n} from \\\"firebase/firestore\\\";\\r\\nimport { auth, db } from \\\"./firebase\\\";\\r\\nimport Auth from \\\"./components/Auth\\\";\\r\\nimport ManualEntryForm from \\\"./components/ManualEntryForm\\\";\\r\\nimport UploadForm from \\\"./components/UploadForm\\\";\\r\\nimport \\\"./App.css\\\";\\r\\nimport { toast, ToastContainer } from \\\"react-toastify\\\";\\r\\nimport \\\"react-toastify/dist/ReactToastify.css\\\";\\r\\nimport * as XLSX from \\\"xlsx\\\";\\r\\nimport { confirmAlert } from 'react-confirm-alert';\\r\\nimport 'react-confirm-alert/src/react-confirm-alert.css';\\r\\n\\r\\n\\r\\nconst finalColumnOrder = [\\r\\n  \\\"indentNumber\\\", \\\"date\\\", \\\"months\\\", \\\"origin\\\", \\\"destination\\\", \\\"customer\\\", \\\"customerType\\\",\\r\\n  \\\"vehicleNo\\\", \\\"vendor\\\", \\\"salesRate\\\", \\\"buyRate\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"versionDate\\\",\\r\\n  \\\"isCurrent\\\", \\\"updateDescription\\\", \\\"expiredAt\\\",\\r\\n  // Customer Master\\r\\n  \\\"customerMaster.toBeAdvance\\\", \\\"customerMaster.advanceReceived\\\", \\\"customerMaster.advDeviation\\\",\\r\\n  \\\"customerMaster.advanceRecDate\\\", \\\"customerMaster.validatedAdvanceUTRDescription\\\",\\r\\n  \\\"customerMaster.validatedAdvanceAmount\\\", \\\"customerMaster.balance\\\", \\\"customerMaster.processingCharges\\\",\\r\\n  \\\"customerMaster.inwardMisCharges\\\", \\\"customerMaster.outwardMisCharges\\\", \\\"customerMaster.balanceReceived\\\",\\r\\n  \\\"customerMaster.remainingBalance\\\", \\\"customerMaster.balanceRecDate\\\", \\\"customerMaster.validatedBalanceUTR\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTRAmount\\\",\\r\\n  // Vendor Master\\r\\n  \\\"vendorMaster.vendorOutwardPayment\\\", \\\"vendorMaster.paidAmount\\\", \\\"vendorMaster.balancePending\\\",\\r\\n  \\\"vendorMaster.vendorRemark\\\",\\r\\n  // POD Master\\r\\n  \\\"podMaster.podVendorDate\\\", \\\"podMaster.podSendToCustomerDate\\\", \\\"podMaster.docNo\\\",\\r\\n  \\\"podMaster.podCustomerRec\\\", \\\"podMaster.today\\\", \\\"podMaster.balanceOverdueDays\\\",\\r\\n  \\\"podMaster.toBeCollectedAmount\\\"\\r\\n];\\r\\n\\r\\nconst columnLabels = {\\r\\n  indentNumber: \\\"Indent Number\\\",\\r\\n  date: \\\"Date\\\",\\r\\n  months: \\\"Month\\\",\\r\\n  origin: \\\"Origin\\\",\\r\\n  destination: \\\"Destination\\\",\\r\\n  customer: \\\"Customer\\\",\\r\\n  customerType: \\\"Customer Type\\\",\\r\\n  vehicleNo: \\\"Vehicle Number\\\",\\r\\n  vendor: \\\"Vendor\\\",\\r\\n  salesRate: \\\"Sales Rate\\\",\\r\\n  buyRate: \\\"Buy Rate\\\",\\r\\n  createdAt: \\\"Created At\\\",\\r\\n  createdBy: \\\"Created By\\\",\\r\\n  versionDate: \\\"Version Date\\\",\\r\\n  isCurrent: \\\"Is Current\\\",\\r\\n  updateDescription: \\\"Update Description\\\",\\r\\n  expiredAt: \\\"Expired At\\\",\\r\\n\\r\\n  // Customer Master\\r\\n  \\\"customerMaster.toBeAdvance\\\": \\\"Customer Master -> To be Advance (Sales)\\\",\\r\\n  \\\"customerMaster.advanceReceived\\\": \\\"Customer Master -> Advance / Payment Received\\\",\\r\\n  \\\"customerMaster.advDeviation\\\": \\\"Customer Master -> Adv Deviation (as on Date)\\\",\\r\\n  \\\"customerMaster.advanceRecDate\\\": \\\"Customer Master -> Advance Rec Date\\\",\\r\\n  \\\"customerMaster.validatedAdvanceUTRDescription\\\": \\\"Customer Master -> Validated-Advance UTR Description\\\",\\r\\n  \\\"customerMaster.validatedAdvanceAmount\\\": \\\"Customer Master -> Validated UTR - Advance Amount\\\",\\r\\n  \\\"customerMaster.balance\\\": \\\"Customer Master -> Balance\\\",\\r\\n  \\\"customerMaster.processingCharges\\\": \\\"Customer Master -> Processing Charges\\\",\\r\\n  \\\"customerMaster.inwardMisCharges\\\": \\\"Customer Master -> Inward-Mis Charges\\\",\\r\\n  \\\"customerMaster.outwardMisCharges\\\": \\\"Customer Master -> Outward-Mis Charges\\\",\\r\\n  \\\"customerMaster.balanceReceived\\\": \\\"Customer Master -> Bal Received\\\",\\r\\n  \\\"customerMaster.remainingBalance\\\": \\\"Customer Master -> Remaining Balance\\\",\\r\\n  \\\"customerMaster.balanceRecDate\\\": \\\"Customer Master -> Balance Rec Date\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTR\\\": \\\"Customer Master -> Validated-Balance UTR\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTRAmount\\\": \\\"Customer Master -> Validate Balance UTR-Amount\\\",\\r\\n\\r\\n  // Vendor Master\\r\\n  \\\"vendorMaster.vendorOutwardPayment\\\": \\\"Vendor Master -> Outward Payment\\\",\\r\\n  \\\"vendorMaster.paidAmount\\\": \\\"Vendor Master -> Paid Amount\\\",\\r\\n  \\\"vendorMaster.balancePending\\\": \\\"Vendor Master -> Balance Pending\\\",\\r\\n  \\\"vendorMaster.vendorRemark\\\": \\\"Vendor Master -> Vendor Remark\\\",\\r\\n\\r\\n  // POD Master\\r\\n  \\\"podMaster.podVendorDate\\\": \\\"POD Master -> POD Vendor-Date\\\",\\r\\n  \\\"podMaster.podSendToCustomerDate\\\": \\\"POD Master -> POD-Send to Customer Date\\\",\\r\\n  \\\"podMaster.docNo\\\": \\\"POD Master -> Doc No\\\",\\r\\n  \\\"podMaster.podCustomerRec\\\": \\\"POD Master -> POD-Customer Rec\\\",\\r\\n  \\\"podMaster.today\\\": \\\"POD Master -> Today\\\",\\r\\n  \\\"podMaster.balanceOverdueDays\\\": \\\"POD Master -> Balance Overdue Days\\\",\\r\\n  \\\"podMaster.toBeCollectedAmount\\\": \\\"POD Master -> To be Collected Amount\\\"\\r\\n};\\r\\n\\r\\n\\r\\nconst flattenObject = (obj, prefix = \\\"\\\") => {\\r\\n  let result = {};\\r\\n  for (const key in obj) {\\r\\n    const value = obj[key];\\r\\n    const fullKey = prefix ? `${prefix}.${key}` : key;\\r\\n    if (value && typeof value === \\\"object\\\" && !value.seconds) {\\r\\n      Object.assign(result, flattenObject(value, fullKey));\\r\\n    } else {\\r\\n      result[fullKey] = value;\\r\\n    }\\r\\n  }\\r\\n  return result;\\r\\n};\\r\\n\\r\\n\\r\\nfunction App() {\\r\\n  const [user, setUser] = useState(null);\\r\\n  const [authLoading, setAuthLoading] = useState(true);\\r\\n  const [records, setRecords] = useState([]);\\r\\n  const [history, setHistory] = useState([]);\\r\\n  const [searchKey, setSearchKey] = useState(\\\"\\\");\\r\\n  const [searchField, setSearchField] = useState(\\\"indentNumber\\\");\\r\\n  const [startDate, setStartDate] = useState(\\\"\\\");\\r\\n  const [endDate, setEndDate] = useState(\\\"\\\");\\r\\n  const [originalRecords, setOriginalRecords] = useState({});\\r\\n  const [isSearching, setIsSearching] = useState(false);\\r\\n  const [isExporting, setIsExporting] = useState(false);\\r\\n  const [searchAttempted, setSearchAttempted] = useState(false);\\r\\n  const [activeOnly, setActiveOnly] = useState(false);\\r\\n  const [includeCustomer, setIncludeCustomer] = useState(false);\\r\\n  const [includeVendor, setIncludeVendor] = useState(false);\\r\\n  const [includePOD, setIncludePOD] = useState(false);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\\r\\n      setUser(currentUser);\\r\\n      setAuthLoading(false);\\r\\n    });\\r\\n    return () => unsubscribe();\\r\\n  }, []);\\r\\n\\r\\n  const handleExportToExcel = () => {\\r\\n  if (history.length === 0) {\\r\\n    toast.info(\\\"❌ No history data to export.\\\");\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  // Define columns to include\\r\\n  const fixedCols = finalColumnOrder.slice(0, 17); // First 17 are fixed\\r\\n  const customerCols = finalColumnOrder.slice(17, 32);\\r\\n  const vendorCols = finalColumnOrder.slice(32, 36);\\r\\n  const podCols = finalColumnOrder.slice(36);\\r\\n\\r\\n  const selectedCols = [\\r\\n    ...fixedCols,\\r\\n    ...(includeCustomer ? customerCols : []),\\r\\n    ...(includeVendor ? vendorCols : []),\\r\\n    ...(includePOD ? podCols : [])\\r\\n  ];\\r\\n\\r\\n  const exportData = history.map((row) => {\\r\\n    const flatRow = {};\\r\\n    selectedCols.forEach((col) => {\\r\\n      const val = row[col];\\r\\n      flatRow[col] = val?.seconds\\r\\n        ? new Date(val.seconds * 1000).toLocaleString()\\r\\n        : val ?? \\\"\\\";\\r\\n    });\\r\\n    return flatRow;\\r\\n  });\\r\\n\\r\\n  const worksheet = XLSX.utils.json_to_sheet(exportData);\\r\\n  const workbook = XLSX.utils.book_new();\\r\\n  XLSX.utils.book_append_sheet(workbook, worksheet, \\\"Filtered Export\\\");\\r\\n\\r\\n  const fileName = `FilteredExport_${new Date().toISOString().split(\\\"T\\\")[0]}.xlsx`;\\r\\n  XLSX.writeFile(workbook, fileName);\\r\\n};\\r\\n\\r\\n\\r\\n  const handleSearch = async () => {\\r\\n    setIsSearching(true);\\r\\n    try {\\r\\n      const fleetRef = collection(db, \\\"fleet_records\\\");\\r\\n      let q;\\r\\n\\r\\n          if (searchField === \\\"Date\\\") {\\r\\n  const fromDate = new Date(startDate);\\r\\n  const toDate = new Date(endDate + \\\"T23:59:59\\\");\\r\\n\\r\\n  if (fromDate > toDate) {\\r\\n    toast.warn(\\\"⚠️ 'From' date cannot be after 'To' date.\\\");\\r\\n    setIsSearching(false);\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  q = query(\\r\\n    fleetRef,\\r\\n    ...(activeOnly ? [where(\\\"isCurrent\\\", \\\"==\\\", true)] : []),\\r\\n    where(\\\"createdAt\\\", \\\">=\\\", fromDate),\\r\\n    where(\\\"createdAt\\\", \\\"<=\\\", toDate)\\r\\n  );\\r\\n}\\r\\n else if (searchKey) {\\r\\n  const key = searchField === \\\"indentNumber\\\" ? Number(searchKey) : searchKey;\\r\\n  q = query(\\r\\n    fleetRef,\\r\\n    where(searchField, \\\"==\\\", key),\\r\\n    ...(activeOnly ? [where(\\\"isCurrent\\\", \\\"==\\\", true)] : [])\\r\\n  );\\r\\n}\\r\\n\\r\\n else {\\r\\n        toast.warn(\\\"🔍 Please enter a search value.\\\");\\r\\n        setIsSearching(false);\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      setSearchAttempted(true);\\r\\n      const snapshot = await getDocs(q);\\r\\n      const allVersions = [];\\r\\n      const currentOnly = [];\\r\\n\\r\\n      snapshot.forEach((docSnap) => {\\r\\n        const rawData = { id: docSnap.id, ...docSnap.data() };\\r\\n        const row = flattenObject(rawData);\\r\\n\\r\\n        allVersions.push(row);\\r\\n        if (row.isCurrent) currentOnly.push(row);\\r\\n      });\\r\\n      allVersions.sort((a, b) => {\\r\\n  if (a.isCurrent && !b.isCurrent) return -1;\\r\\n  if (!a.isCurrent && b.isCurrent) return 1;\\r\\n  return b.indentNumber - a.indentNumber;\\r\\n});\\r\\n\\r\\n// ✅ Sort currentOnly also by indentNumber descending\\r\\ncurrentOnly.sort((a, b) => b.indentNumber - a.indentNumber);\\r\\n\\r\\n      if (searchField === \\\"indentNumber\\\") {\\r\\n        setRecords(currentOnly);\\r\\n        setHistory(allVersions);\\r\\n      } else {\\r\\n        setRecords([]);\\r\\n        setHistory(allVersions);\\r\\n      }\\r\\n\\r\\n      if (snapshot.empty || allVersions.length === 0) {\\r\\n        toast.info(\\\"❌ No records found.\\\");\\r\\n      }\\r\\n    } catch (error) {\\r\\n  toast.error(\\\"❌ Search failed: \\\" + error.message);\\r\\n\\r\\n    } finally {\\r\\n      setIsSearching(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n    const normalize = (val) => {\\r\\n    if (val === null || val === undefined) return \\\"\\\";\\r\\n    return typeof val === \\\"object\\\" && val.seconds\\r\\n      ? new Date(val.seconds * 1000).toISOString()\\r\\n      : String(val).trim();\\r\\n  };\\r\\n\\r\\n const getChangedFields = (current, original) => {\\r\\n  const ignored = [\\\"versionDate\\\", \\\"expiredAt\\\", \\\"isCurrent\\\", \\\"updateDescription\\\", \\\"createdAt\\\", \\\"createdBy\\\"];\\r\\n  const changed = [];\\r\\n\\r\\n  const flatCurrent = flattenObject(current);\\r\\n  const flatOriginal = flattenObject(original);\\r\\n\\r\\n  for (const key in flatCurrent) {\\r\\n    if (ignored.includes(key)) continue;\\r\\n    const currVal = normalize(flatCurrent[key]);\\r\\n    const origVal = normalize(flatOriginal?.[key]);\\r\\n    if (currVal !== origVal) changed.push(key);\\r\\n  }\\r\\n\\r\\n  return changed;\\r\\n};\\r\\n\\r\\n\\r\\n  const hasMeaningfulChanges = (curr, orig) => getChangedFields(curr, orig).length > 0;\\r\\n\\r\\n\\r\\n    const handleUpdate = async (row) => {\\r\\n    try {\\r\\n      const { id, indentNumber, ...updatedData } = row;\\r\\n\\r\\n      const currentDocSnap = await getDocs(\\r\\n        query(collection(db, \\\"fleet_records\\\"), where(\\\"indentNumber\\\", \\\"==\\\", indentNumber), where(\\\"isCurrent\\\", \\\"==\\\", true))\\r\\n      );\\r\\n      const oldDoc = currentDocSnap.docs.find(doc => doc.id === id);\\r\\n      const oldData = flattenObject(oldDoc?.data() || {});\\r\\n\\r\\n\\r\\n      const cleanData = {};\\r\\n      const updateLog = [];\\r\\n      for (const key in updatedData) {\\r\\n        if ([\\\"id\\\", \\\"isCurrent\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"versionDate\\\", \\\"updateDescription\\\", \\\"expiredAt\\\"].includes(key))\\r\\n          continue;\\r\\n        const newVal = updatedData[key] ?? \\\"\\\";\\r\\n        const oldVal = oldData[key] ?? \\\"\\\";\\r\\n        cleanData[key] = newVal;\\r\\n\\r\\n        if (String(newVal).trim() !== String(oldVal).trim()) {\\r\\n          updateLog.push(`Updated ${key}`);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (updateLog.length === 0) {\\r\\n        toast.info(\\\"ℹ️ No changes to update.\\\");\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      confirmAlert({\\r\\n  title: 'Confirm Update',\\r\\n  message: `Do you want to update changes: ${updateLog.join(\\\", \\\")}?`,\\r\\n  buttons: [\\r\\n    {\\r\\n      label: 'Yes',\\r\\n      onClick: async () => {\\r\\n        await updateDoc(doc(db, \\\"fleet_records\\\", id), {\\r\\n          isCurrent: false,\\r\\n          expiredAt: new Date(),\\r\\n          modifiedBy: user.email\\r\\n        });\\r\\n\\r\\n        const newVersion = {\\r\\n          ...cleanData,\\r\\n          indentNumber,\\r\\n          createdAt: new Date(),\\r\\n          createdBy: user.email,\\r\\n          isCurrent: true,\\r\\n          versionDate: new Date(),\\r\\n          updateDescription: updateLog.join(\\\", \\\")\\r\\n        };\\r\\n\\r\\n        await addDoc(collection(db, \\\"fleet_records\\\"), newVersion);\\r\\n        toast.success(\\\"✅ Record updated.\\\");\\r\\n        handleSearch();\\r\\n      }\\r\\n    },\\r\\n    {\\r\\n      label: 'No'\\r\\n    }\\r\\n  ]\\r\\n});\\r\\nreturn;\\r\\n\\r\\n\\r\\n      await updateDoc(doc(db, \\\"fleet_records\\\", id), {\\r\\n        isCurrent: false,\\r\\n        expiredAt: new Date(),\\r\\n        modifiedBy: user.email\\r\\n      });\\r\\n\\r\\n      const newVersion = {\\r\\n        ...cleanData,\\r\\n        indentNumber,\\r\\n        createdAt: new Date(),\\r\\n        createdBy: user.email,\\r\\n        isCurrent: true,\\r\\n        versionDate: new Date(),\\r\\n        updateDescription: updateLog.join(\\\", \\\")\\r\\n      };\\r\\n\\r\\n      await addDoc(collection(db, \\\"fleet_records\\\"), newVersion);\\r\\n\\r\\n      toast.success(\\\"✅ Record updated.\\\");\\r\\n      handleSearch();\\r\\n    } catch (error) {\\r\\n      toast.error(\\\"❌ Update failed: \\\" + error.message);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleDelete = async (fleetNumberToDelete) => {\\r\\n    try {\\r\\n      const q = query(collection(db, \\\"fleet_records\\\"), where(\\\"indentNumber\\\", \\\"==\\\", fleetNumberToDelete));\\r\\n      const snapshot = await getDocs(q);\\r\\n      if (snapshot.empty) {\\r\\n  toast.error(\\\"❌ No records found for deletion.\\\");\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n      confirmAlert({\\r\\n  title: 'Confirm Deletion',\\r\\n  message: `Delete all versions of Indent No. ${fleetNumberToDelete}?`,\\r\\n  buttons: [\\r\\n    {\\r\\n      label: 'Yes',\\r\\n      onClick: async () => {\\r\\n        await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \\\"fleet_records\\\", docSnap.id))));\\r\\n        setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n        setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n        toast.success(\\\"✅ Deleted all versions.\\\");\\r\\n      }\\r\\n    },\\r\\n    {\\r\\n      label: 'No'\\r\\n    }\\r\\n  ]\\r\\n});\\r\\nreturn;\\r\\n\\r\\n\\r\\n      await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \\\"fleet_records\\\", docSnap.id))));\\r\\n      setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n      setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n      toast.success(\\\"✅ Deleted all versions.\\\");\\r\\n    } catch (err) {\\r\\n      toast.error(\\\"❌ Delete failed: \\\" + err.message);\\r\\n    }\\r\\n  };\\r\\n  if (authLoading) return <p style={{ textAlign: \\\"center\\\" }}>Checking authentication...</p>;\\r\\nif (!user) return <Auth />;\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div style={{ maxWidth: \\\"100vw\\\", overflowX: \\\"hidden\\\", padding: \\\"40px 20px\\\" }}>\\r\\n      <div className=\\\"header\\\">\\r\\n        <h2>Fleet Billing Dashboard</h2>\\r\\n        <div style={{ display: \\\"flex\\\", alignItems: \\\"center\\\" }}>\\r\\n          <span className=\\\"user-email\\\">Welcome, {user.email}</span>\\r\\n          <img src=\\\"/logo.png\\\" alt=\\\"Logo\\\" style={{ height: \\\"50px\\\" }} />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <button\\r\\n  onClick={() => {\\r\\n    // ✅ Clear localStorage before logout\\r\\n    localStorage.removeItem(\\\"inProgressFleetNumber\\\");\\r\\n    localStorage.removeItem(\\\"docId\\\");\\r\\n    localStorage.removeItem(\\\"fixedFields\\\");\\r\\n    localStorage.removeItem(\\\"customerFields\\\");\\r\\n    localStorage.removeItem(\\\"vendorFields\\\");\\r\\n    localStorage.removeItem(\\\"podFields\\\");\\r\\n\\r\\n    signOut(auth);\\r\\n  }}\\r\\n>\\r\\n  Logout\\r\\n</button>\\r\\n\\r\\n      <hr />\\r\\n\\r\\n      {/* <UploadForm /> */}\\r\\n\\r\\n      <ManualEntryForm\\r\\n        onAddRow={(row, addToHistory) => {\\r\\n          setRecords([row]);\\r\\n          if (addToHistory) setHistory([row]);\\r\\n        }}\\r\\n      />\\r\\n\\r\\n      <hr />\\r\\n      <h4>Search Existing Records</h4>\\r\\n<div style={{ display: \\\"flex\\\", flexWrap: \\\"wrap\\\", gap: \\\"10px\\\", alignItems: \\\"center\\\", justifyContent: \\\"space-between\\\", width: \\\"100%\\\" }}>\\r\\n  <div style={{ display: \\\"flex\\\", gap: \\\"10px\\\", flexWrap: \\\"wrap\\\", alignItems: \\\"center\\\" }}>\\r\\n    <select value={searchField} onChange={(e) => {\\r\\n      setSearchField(e.target.value);\\r\\n      setSearchKey(\\\"\\\");\\r\\n      setStartDate(\\\"\\\");\\r\\n      setEndDate(\\\"\\\");\\r\\n    }}>\\r\\n      <option value=\\\"indentNumber\\\">Fleet Number</option>\\r\\n      <option value=\\\"Broker\\\">Broker</option>\\r\\n      <option value=\\\"Date\\\">Date</option>\\r\\n    </select>\\r\\n\\r\\n    {searchField === \\\"Date\\\" ? (\\r\\n      <>\\r\\n        <label>From:</label>\\r\\n        <input type=\\\"date\\\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\\r\\n        <label>To:</label>\\r\\n        <input type=\\\"date\\\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\\r\\n      </>\\r\\n    ) : (\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        value={searchKey}\\r\\n        onChange={(e) => setSearchKey(e.target.value)}\\r\\n        placeholder=\\\"Search key\\\"\\r\\n        style={{ flex: 1, width: \\\"250px\\\" }}\\r\\n      />\\r\\n    )}\\r\\n\\r\\n    <div style={{ display: \\\"flex\\\", alignItems: \\\"center\\\", gap: \\\"10px\\\" }}>\\r\\n    <label style={{  display: \\\"flex\\\", alignItems: \\\"center\\\", fontSize: \\\"14px\\\", marginBottom: 0 }}>\\r\\n      <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        checked={activeOnly}\\r\\n        onChange={(e) => setActiveOnly(e.target.checked)}\\r\\n        style={{ marginRight: \\\"5px\\\" }}\\r\\n      />\\r\\n      Show only active\\r\\n    </label>\\r\\n  </div>\\r\\n\\r\\n  <button className=\\\"btn btn-primary\\\" onClick={handleSearch} disabled={isSearching}>\\r\\n    {isSearching ? \\\"Searching...\\\" : \\\"Search\\\"}\\r\\n  </button>\\r\\n</div></div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n\\r\\n\\r\\n      {searchField === \\\"indentNumber\\\" && records.length > 0 && (\\r\\n        <>\\r\\n          <h4>Editable Current Records</h4>\\r\\n          <div className=\\\"table-scroll-x\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  {finalColumnOrder.map((col) => (\\r\\n                    <th key={col}>{columnLabels[col] || col}</th>\\r\\n                  ))}\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                {records.map((row, rowIndex) => (\\r\\n                  <tr key={rowIndex}>\\r\\n                    {finalColumnOrder.map((col, j) => (\\r\\n                      <td key={j}>\\r\\n                        <input\\r\\n                          type=\\\"text\\\"\\r\\n                          value={\\r\\n                            typeof row[col] === \\\"object\\\" && row[col]?.seconds\\r\\n                              ? (col === \\\"date\\\"\\r\\n            ? new Date(row[col].seconds * 1000).toLocaleDateString(\\\"en-GB\\\")\\r\\n            : new Date(row[col].seconds * 1000).toLocaleString()\\r\\n          )\\r\\n        : String(row[col] ?? \\\"\\\")\\r\\n    }\\r\\n                          onChange={(e) => {\\r\\n                            const updated = [...records];\\r\\n                            updated[rowIndex][col] = e.target.value;\\r\\n                            setRecords(updated);\\r\\n                          }}\\r\\n                          readOnly={[\\\"indentNumber\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"isCurrent\\\", \\\"updateDescription\\\"].includes(col)}\\r\\n                          style={{ width: \\\"140px\\\" }}\\r\\n                        />\\r\\n                      </td>\\r\\n                    ))}\\r\\n                    <td>\\r\\n                      <button className=\\\"save\\\" onClick={() => handleUpdate(row)}>\\r\\n                        Save\\r\\n                      </button>\\r\\n                      <button className=\\\"delete\\\" onClick={() => handleDelete(row.indentNumber)}>\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                ))}\\r\\n              </tbody>\\r\\n\\r\\n            </table>\\r\\n          </div>\\r\\n        </>\\r\\n      )}\\r\\n\\r\\n      {history.length > 0 && (\\r\\n        <>\\r\\n          <hr />\\r\\n        <div style={{ display: \\\"flex\\\", justifyContent: \\\"space-between\\\", alignItems: \\\"center\\\" }}>\\r\\n  <h4>🔍 Full Version History</h4>\\r\\n  <div style={{ display: \\\"flex\\\", gap: \\\"20px\\\", alignItems: \\\"center\\\" }}>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includeCustomer} onChange={(e) => setIncludeCustomer(e.target.checked)} />\\r\\n    Include Customer\\r\\n  </label>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includeVendor} onChange={(e) => setIncludeVendor(e.target.checked)} />\\r\\n    Include Vendor\\r\\n  </label>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includePOD} onChange={(e) => setIncludePOD(e.target.checked)} />\\r\\n    Include POD\\r\\n  </label>\\r\\n  <button onClick={handleExportToExcel} disabled={history.length === 0} className=\\\"export-button\\\">\\r\\n    ⬇️ Export Selected\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n        <div className=\\\"table-scroll-x\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                {finalColumnOrder.map((col) => (\\r\\n                  <th key={col} className=\\\"tight-header\\\">{columnLabels[col] || col}</th>\\r\\n                ))}\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              {[...history]\\r\\n                .sort((a, b) => {\\r\\n                  if (a.isCurrent) return -1;\\r\\n                  if (b.isCurrent) return 1;\\r\\n                  const aTime = a.expiredAt?.seconds || 0;\\r\\n                  const bTime = b.expiredAt?.seconds || 0;\\r\\n                  return bTime - aTime;\\r\\n                })\\r\\n                .map((row, i) => (\\r\\n                  <tr key={i}>\\r\\n                    {finalColumnOrder.map((col, j) => (\\r\\n                      <td key={j}>\\r\\n                        {typeof row[col] === \\\"object\\\" && row[col]?.seconds\\r\\n              ? (col === \\\"date\\\"\\r\\n                  ? new Date(row[col].seconds * 1000).toLocaleDateString(\\\"en-GB\\\")\\r\\n                  : new Date(row[col].seconds * 1000).toLocaleString())\\r\\n              : String(row[col] ?? \\\"\\\")}\\r\\n                      </td>\\r\\n                    ))}\\r\\n                  </tr>\\r\\n                ))}\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n        </>\\r\\n      )}\\r\\n\\r\\n      {searchAttempted && !isSearching && records.length === 0 && history.length === 0 && (\\r\\n        <p style={{ textAlign: \\\"center\\\", color: \\\"#888\\\", marginTop: \\\"30px\\\" }}>No records to display.</p>\\r\\n      )}\\r\\n\\r\\n      <ToastContainer position=\\\"bottom-right\\\" autoClose={3000} />\\r\\n      <p style={{ textAlign: \\\"center\\\", marginTop: \\\"30px\\\", color: \\\"#666\\\" }}>© 2025 Fleet Billing System</p>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,t,a){e.exports=a(40)},30:function(e,t,a){},38:function(e,t,a){},40:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),l=a(15),o=a.n(l),c=(a(30),a(21)),s=a(4),i=a(12),d=a(3),m=a(20);const u=Object(m.a)({apiKey:\"AIzaSyAOcDXL1kQsi_MoLJ33GWn9-57qhQ0CWro\",authDomain:\"fleet-9805b.firebaseapp.com\",projectId:\"fleet-9805b\",storageBucket:\"fleet-9805b.appspot.com\",messagingSenderId:\"682529821046\",appId:\"1:682529821046:web:cbb00f5dcbac062304aa57\",measurementId:\"G-T4PZQZGWZ9\"}),b=Object(i.b)(u),p=Object(d.h)(u),g={container:{minHeight:\"100vh\",background:\"linear-gradient(135deg, #1c2541, #3a506b)\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",padding:\"30px\"},card:{width:\"100%\",maxWidth:\"400px\",background:\"#0b132b\",padding:\"40px 30px\",borderRadius:\"16px\",boxShadow:\"0 0 25px rgba(0,0,0,0.3)\",textAlign:\"center\"},logo:{width:\"80%\",maxWidth:\"280px\",margin:\"0 auto 20px\",display:\"block\"},title:{marginBottom:\"20px\",color:\"#ffffff\"},form:{display:\"flex\",flexDirection:\"column\",gap:\"15px\"},input:{padding:\"12px\",borderRadius:\"8px\",border:\"1px solid #ccc\",fontSize:\"16px\",outline:\"none\"},submitBtn:{padding:\"12px\",backgroundColor:\"#1c7ed6\",color:\"#fff\",border:\"none\",borderRadius:\"8px\",fontSize:\"16px\",cursor:\"pointer\"},toggleBtn:{marginTop:\"20px\",background:\"none\",border:\"none\",color:\"#74c0fc\",cursor:\"pointer\",fontSize:\"14px\",textDecoration:\"underline\"}};var v=()=>{const[e,t]=Object(r.useState)(\"\"),[a,l]=Object(r.useState)(\"\"),[o,c]=Object(r.useState)(!0),[s,d]=Object(r.useState)(!1);return n.a.createElement(\"div\",{style:g.container},n.a.createElement(\"div\",{style:g.card},n.a.createElement(\"img\",{src:\"/logo.png\",alt:\"Logo\",style:g.logo}),n.a.createElement(\"h2\",{style:g.title},o?\"Login\":\"Sign Up\"),n.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault(),d(!0);try{o?(await Object(i.d)(b,e,a),alert(\"\\u2705 Login successful!\")):(await Object(i.a)(b,e,a),alert(\"\\u2705 Account created successfully!\"))}catch(r){alert(\"\\u274c \"+r.message)}finally{d(!1)}},style:g.form},n.a.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",value:e,onChange:e=>t(e.target.value),required:!0,style:g.input}),n.a.createElement(\"input\",{type:\"password\",placeholder:\"Password\",value:a,onChange:e=>l(e.target.value),required:!0,style:g.input}),n.a.createElement(\"button\",{type:\"submit\",disabled:s,style:g.submitBtn},s?\"Please wait...\":o?\"Login\":\"Sign Up\")),n.a.createElement(\"button\",{onClick:()=>c(!o),style:g.toggleBtn},o?\"New here? Create an account\":\"Already registered? Login\")))},y=(a(18),a(6));const f={date:\"\",months:\"\",origin:\"\",destination:\"\",customer:\"\",customerType:\"\",vehicleNo:\"\",vendor:\"\",salesRate:\"\",buyRate:\"\"},h={toBeAdvance:\"\",advanceReceived:\"\",advDeviation:\"\",advanceRecDate:\"\",validatedAdvanceUTRDescription:\"\",validatedAdvanceAmount:\"\",balance:\"\",processingCharges:\"\",inwardMisCharges:\"\",outwardMisCharges:\"\",balanceReceived:\"\",remainingBalance:\"\",balanceRecDate:\"\",validatedBalanceUTR:\"\",validatedBalanceUTRAmount:\"\"},O={vendorOutwardPayment:\"\",paidAmount:\"\",balancePending:\"\",vendorRemark:\"\"},E={podVendorDate:\"\",podSendToCustomerDate:\"\",docNo:\"\",podCustomerRec:\"\",today:\"\",balanceOverdueDays:\"\",toBeCollectedAmount:\"\"},C=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",a={};for(const r in e){const n=e[r],l=t?\"\".concat(t,\".\").concat(r):r;n&&\"object\"===typeof n&&!n.seconds?Object.assign(a,C(n,l)):a[l]=n}return a};var S=e=>{let{onAddRow:t}=e;const[a,l]=Object(r.useState)(f),[o,c]=Object(r.useState)(h),[i,m]=Object(r.useState)(O),[u,g]=Object(r.useState)(E),[v,S]=Object(r.useState)(null),[j,x]=Object(r.useState)(null),[D,M]=Object(r.useState)(!1),[N,w]=Object(r.useState)(!1),[A,R]=Object(r.useState)(!1),[k,I]=Object(r.useState)(!1),[B,T]=Object(r.useState)(!1),[F,P]=Object(r.useState)(!1);Object(r.useEffect)(()=>{const e=localStorage.getItem(\"inProgressIndentNumber\"),t=localStorage.getItem(\"fixedFields\"),a=localStorage.getItem(\"customerFields\"),r=localStorage.getItem(\"vendorFields\"),n=localStorage.getItem(\"podFields\"),o=localStorage.getItem(\"docId\");o&&x(o),e&&S(Number(e)),t&&l(JSON.parse(t)),a&&c(JSON.parse(a)),r&&m(JSON.parse(r)),n&&g(JSON.parse(n))},[]);const V=e=>e.replace(/([a-z])([A-Z])/g,\"$1 $2\").replace(/_/g,\" \").replace(/^./,e=>e.toUpperCase()),U=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const a={};return Object.entries(e).forEach(e=>{let[r,n]=e;if(t.includes(r)&&n){const e=new Date(n);a[r]=isNaN(e)?n:d.a.fromDate(e)}else a[r]=n}),a},L=e=>{const t=Object(s.a)(Object(s.a)({},a),{},{[e.target.name]:e.target.value});l(t),localStorage.setItem(\"fixedFields\",JSON.stringify(t))},_=(e,t)=>{const{name:a,value:r}=e.target;if(\"customer\"===t){const e=Object(s.a)(Object(s.a)({},o),{},{[a]:r});c(e),localStorage.setItem(\"customerFields\",JSON.stringify(e))}if(\"vendor\"===t){const e=Object(s.a)(Object(s.a)({},i),{},{[a]:r});m(e),localStorage.setItem(\"vendorFields\",JSON.stringify(e))}if(\"pod\"===t){const e=Object(s.a)(Object(s.a)({},u),{},{[a]:r});g(e),localStorage.setItem(\"podFields\",JSON.stringify(e))}},W=async function(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(j)try{const n=Object(d.e)(p,\"fleet_records\",j);await Object(d.k)(n,{[\"\".concat(e)]:U(t,a)}),\"customerMaster\"===e&&I(!0),\"vendorMaster\"===e&&T(!0),\"podMaster\"===e&&P(!0),Object(y.confirmAlert)({title:\"Saved\",message:\"\\u2705 \".concat(e,\" saved.\"),buttons:[{label:\"OK\"}]})}catch(r){Object(y.confirmAlert)({title:\"Error\",message:\"\\u274c Save error: \"+r.message,buttons:[{label:\"OK\"}]})}else Object(y.confirmAlert)({title:\"Missing Info\",message:\"\\u26a0\\ufe0f Save fixed fields first.\",buttons:[{label:\"OK\"}]})};return n.a.createElement(\"div\",{style:{marginTop:20}},n.a.createElement(\"h4\",null,\"Step 1: Fixed Fields\"),n.a.createElement(\"div\",{className:\"card p-4 mb-4\"},n.a.createElement(\"div\",{className:\"fixed-fields-grid\",style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(f).map(e=>(e.toLowerCase().includes(\"date\")&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:a[e],onChange:L,disabled:!!v,type:\"text\"}))))),!v&&n.a.createElement(\"div\",{style:{marginTop:\"20px\",width:\"100%\",textAlign:\"right\"}},n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:async()=>{if(Object.values(a).some(e=>\"\"!==String(null!==e&&void 0!==e?e:\"\").trim()))try{const t=b.currentUser,r=await(async()=>{const e=Object(d.e)(p,\"Counters\",\"fleet_counter\");return await Object(d.j)(p,async t=>{const a=await t.get(e);if(!a.exists())throw new Error(\"Counter doc missing\");const r=a.data().nextFleetNo||1;return t.update(e,{nextFleetNo:r+1}),r})})(),n=Object(s.a)(Object(s.a)({indentNumber:r},U(a,[\"date\"])),{},{createdAt:new Date,createdBy:(null===t||void 0===t?void 0:t.email)||\"anonymous\",isCurrent:!0,versionDate:new Date,updateDescription:\"\"}),l=await Object(d.b)(Object(d.c)(p,\"fleet_records\"),n);S(r),x(l.id),localStorage.setItem(\"docId\",l.id),localStorage.setItem(\"inProgressIndentNumber\",r),await navigator.clipboard.writeText(String(r)),Object(y.confirmAlert)({title:\"Success\",message:\"\\u2705 Fixed fields saved. Indent Number copied: \".concat(r),buttons:[{label:\"OK\"}]})}catch(e){Object(y.confirmAlert)({title:\"Error\",message:\"\\u274c Error saving fixed fields: \"+e.message,buttons:[{label:\"OK\"}]})}else Object(y.confirmAlert)({title:\"Validation Error\",message:\"\\u26a0\\ufe0f Please fill at least one field before continuing.\",buttons:[{label:\"OK\"}]})}},\"\\ud83d\\udcbe Save & Continue\"))),v&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"p\",{style:{color:\"green\"}},\"\\u2705 Saved. Indent No: \",v),n.a.createElement(\"h4\",null,\"Step 2: Select Master Sections\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:D,onChange:()=>M(!D),disabled:k}),\" Customer Master\"),n.a.createElement(\"label\",{style:{marginLeft:15}},n.a.createElement(\"input\",{type:\"checkbox\",checked:N,onChange:()=>w(!N),disabled:B}),\" Vendor Master\"),n.a.createElement(\"label\",{style:{marginLeft:15}},n.a.createElement(\"input\",{type:\"checkbox\",checked:A,onChange:()=>R(!A),disabled:F}),\" POD Master\"),D&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"Customer Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(h).map(e=>([\"advanceRecDate\",\"balanceRecDate\"].includes(e)&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:o[e],onChange:e=>_(e,\"customer\"),disabled:k,type:\"text\"}))))),!k&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:()=>W(\"customerMaster\",o,[\"advanceRecDate\",\"balanceRecDate\"])},\"Save Customer\")))),N&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"Vendor Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(O).map(e=>n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:i[e],onChange:e=>_(e,\"vendor\"),disabled:B,type:\"text\"})))),!B&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary mt-3\",onClick:()=>W(\"vendorMaster\",i)},\"Save Vendor\")))),A&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"POD Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(E).map(e=>([\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"].includes(e)&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:u[e],onChange:e=>_(e,\"pod\"),disabled:F,type:\"text\"}))))),!F&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary mt-3\",onClick:()=>W(\"podMaster\",u,[\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"])},\"Save POD\")))),n.a.createElement(\"br\",null),n.a.createElement(\"div\",{style:{marginTop:10,width:\"100%\",textAlign:\"right\"}},n.a.createElement(\"button\",{onClick:async()=>{if(!j)return void Object(y.confirmAlert)({title:\"Error\",message:\"Fleet data not ready.\",buttons:[{label:\"OK\"}]});D&&!k&&await W(\"customerMaster\",o,[\"advanceRecDate\",\"balanceRecDate\"]),N&&!B&&await W(\"vendorMaster\",i),A&&!F&&await W(\"podMaster\",u,[\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"]);const e=await Object(d.f)(Object(d.e)(p,\"fleet_records\",j));if(!e.exists())return void Object(y.confirmAlert)({title:\"Error\",message:\"Data not found.\",buttons:[{label:\"OK\"}]});const a=Object(s.a)({id:e.id},e.data());t(C(a),!0),l(f),c(h),m(O),g(E),S(null),x(null),M(!1),w(!1),R(!1),I(!1),T(!1),P(!1),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),localStorage.removeItem(\"inProgressIndentNumber\"),localStorage.removeItem(\"docId\"),Object(y.confirmAlert)({title:\"Done\",message:\"\\u2705 Record submitted and ready in editable table.\",buttons:[{label:\"OK\"}]})},className:\"btn btn-success me-2\"},\"\\u2705 Submit Record\"),n.a.createElement(\"button\",{onClick:()=>{Object(y.confirmAlert)({title:\"Confirm New Entry\",message:\"Start a new entry? Unsaved data will be lost.\",buttons:[{label:\"Yes\",onClick:()=>{l(f),c(h),m(O),g(E),S(null),x(null),M(!1),w(!1),R(!1),I(!1),T(!1),P(!1),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),localStorage.removeItem(\"inProgressIndentNumber\"),localStorage.removeItem(\"docId\"),Object(y.confirmAlert)({title:\"Ready\",message:\"\\ud83c\\udd95 Ready to start a new record.\",buttons:[{label:\"OK\"}]})}},{label:\"No\"}]})},className:\"btn btn-primary\"},\"\\u2795 Add New Record\"))))},j=a(10);a(38);var x=a(8);a(39);const D=[\"id\",\"indentNumber\"],M=[\"indentNumber\",\"date\",\"months\",\"origin\",\"destination\",\"customer\",\"customerType\",\"vehicleNo\",\"vendor\",\"salesRate\",\"buyRate\",\"createdAt\",\"createdBy\",\"versionDate\",\"isCurrent\",\"updateDescription\",\"expiredAt\",\"customerMaster.toBeAdvance\",\"customerMaster.advanceReceived\",\"customerMaster.advDeviation\",\"customerMaster.advanceRecDate\",\"customerMaster.validatedAdvanceUTRDescription\",\"customerMaster.validatedAdvanceAmount\",\"customerMaster.balance\",\"customerMaster.processingCharges\",\"customerMaster.inwardMisCharges\",\"customerMaster.outwardMisCharges\",\"customerMaster.balanceReceived\",\"customerMaster.remainingBalance\",\"customerMaster.balanceRecDate\",\"customerMaster.validatedBalanceUTR\",\"customerMaster.validatedBalanceUTRAmount\",\"vendorMaster.vendorOutwardPayment\",\"vendorMaster.paidAmount\",\"vendorMaster.balancePending\",\"vendorMaster.vendorRemark\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.docNo\",\"podMaster.podCustomerRec\",\"podMaster.today\",\"podMaster.balanceOverdueDays\",\"podMaster.toBeCollectedAmount\"],N={indentNumber:\"Indent Number\",date:\"Date\",months:\"Month\",origin:\"Origin\",destination:\"Destination\",customer:\"Customer\",customerType:\"Customer Type\",vehicleNo:\"Vehicle Number\",vendor:\"Vendor\",salesRate:\"Sales Rate\",buyRate:\"Buy Rate\",createdAt:\"Created At\",createdBy:\"Created By\",versionDate:\"Version Date\",isCurrent:\"Is Current\",updateDescription:\"Update Description\",expiredAt:\"Expired At\",\"customerMaster.toBeAdvance\":\"Customer Master -> To be Advance (Sales)\",\"customerMaster.advanceReceived\":\"Customer Master -> Advance / Payment Received\",\"customerMaster.advDeviation\":\"Customer Master -> Adv Deviation (as on Date)\",\"customerMaster.advanceRecDate\":\"Customer Master -> Advance Rec Date\",\"customerMaster.validatedAdvanceUTRDescription\":\"Customer Master -> Validated-Advance UTR Description\",\"customerMaster.validatedAdvanceAmount\":\"Customer Master -> Validated UTR - Advance Amount\",\"customerMaster.balance\":\"Customer Master -> Balance\",\"customerMaster.processingCharges\":\"Customer Master -> Processing Charges\",\"customerMaster.inwardMisCharges\":\"Customer Master -> Inward-Mis Charges\",\"customerMaster.outwardMisCharges\":\"Customer Master -> Outward-Mis Charges\",\"customerMaster.balanceReceived\":\"Customer Master -> Bal Received\",\"customerMaster.remainingBalance\":\"Customer Master -> Remaining Balance\",\"customerMaster.balanceRecDate\":\"Customer Master -> Balance Rec Date\",\"customerMaster.validatedBalanceUTR\":\"Customer Master -> Validated-Balance UTR\",\"customerMaster.validatedBalanceUTRAmount\":\"Customer Master -> Validate Balance UTR-Amount\",\"vendorMaster.vendorOutwardPayment\":\"Vendor Master -> Outward Payment\",\"vendorMaster.paidAmount\":\"Vendor Master -> Paid Amount\",\"vendorMaster.balancePending\":\"Vendor Master -> Balance Pending\",\"vendorMaster.vendorRemark\":\"Vendor Master -> Vendor Remark\",\"podMaster.podVendorDate\":\"POD Master -> POD Vendor-Date\",\"podMaster.podSendToCustomerDate\":\"POD Master -> POD-Send to Customer Date\",\"podMaster.docNo\":\"POD Master -> Doc No\",\"podMaster.podCustomerRec\":\"POD Master -> POD-Customer Rec\",\"podMaster.today\":\"POD Master -> Today\",\"podMaster.balanceOverdueDays\":\"POD Master -> Balance Overdue Days\",\"podMaster.toBeCollectedAmount\":\"POD Master -> To be Collected Amount\"},w=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",a={};for(const r in e){const n=e[r],l=t?\"\".concat(t,\".\").concat(r):r;n&&\"object\"===typeof n&&!n.seconds?Object.assign(a,w(n,l)):a[l]=n}return a};var A=function(){const[e,t]=Object(r.useState)(null),[a,l]=Object(r.useState)(!0),[o,m]=Object(r.useState)([]),[u,g]=Object(r.useState)([]),[f,h]=Object(r.useState)(\"\"),[O,E]=Object(r.useState)(\"indentNumber\"),[C,A]=Object(r.useState)(\"\"),[R,k]=Object(r.useState)(\"\"),[I,B]=Object(r.useState)({}),[T,F]=Object(r.useState)(!1),[P,V]=Object(r.useState)(!1),[U,L]=Object(r.useState)(!1),[_,W]=Object(r.useState)(!1),[J,K]=Object(r.useState)(!1),[z,G]=Object(r.useState)(!1),[Z,q]=Object(r.useState)(!1);Object(r.useEffect)(()=>{const e=Object(i.c)(b,e=>{t(e),l(!1)});return()=>e()},[]);const Q=async()=>{F(!0);try{const t=Object(d.c)(p,\"fleet_records\");let a;if(\"Date\"===O){const e=new Date(C),r=new Date(R+\"T23:59:59\");if(e>r)return x.b.warn(\"\\u26a0\\ufe0f 'From' date cannot be after 'To' date.\"),void F(!1);a=Object(d.i)(t,..._?[Object(d.l)(\"isCurrent\",\"==\",!0)]:[],Object(d.l)(\"createdAt\",\">=\",e),Object(d.l)(\"createdAt\",\"<=\",r))}else{if(!f)return x.b.warn(\"\\ud83d\\udd0d Please enter a search value.\"),void F(!1);{const e=\"indentNumber\"===O?Number(f):f;a=Object(d.i)(t,Object(d.l)(O,\"==\",e),..._?[Object(d.l)(\"isCurrent\",\"==\",!0)]:[])}}L(!0);const r=await Object(d.g)(a),n=[],l=[];r.forEach(e=>{const t=Object(s.a)({id:e.id},e.data()),a=w(t);n.push(a),a.isCurrent&&l.push(a)}),n.sort((e,t)=>e.isCurrent&&!t.isCurrent?-1:!e.isCurrent&&t.isCurrent?1:t.indentNumber-e.indentNumber),l.sort((e,t)=>t.indentNumber-e.indentNumber),\"indentNumber\"===O?(m(l),g(n)):(m([]),g(n)),(r.empty||0===n.length)&&x.b.info(\"\\u274c No records found.\")}catch(e){x.b.error(\"\\u274c Search failed: \"+e.message)}finally{F(!1)}};return a?n.a.createElement(\"p\",{style:{textAlign:\"center\"}},\"Checking authentication...\"):e?n.a.createElement(\"div\",{style:{maxWidth:\"100vw\",overflowX:\"hidden\",padding:\"40px 20px\"}},n.a.createElement(\"div\",{className:\"header\"},n.a.createElement(\"h2\",null,\"Fleet Billing Dashboard\"),n.a.createElement(\"div\",{style:{display:\"flex\",alignItems:\"center\"}},n.a.createElement(\"span\",{className:\"user-email\"},\"Welcome, \",e.email),n.a.createElement(\"img\",{src:\"/logo.png\",alt:\"Logo\",style:{height:\"50px\"}}))),n.a.createElement(\"button\",{onClick:()=>{localStorage.removeItem(\"inProgressFleetNumber\"),localStorage.removeItem(\"docId\"),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),Object(i.e)(b)}},\"Logout\"),n.a.createElement(\"hr\",null),n.a.createElement(S,{onAddRow:(e,t)=>{m([e]),t&&g([e])}}),n.a.createElement(\"hr\",null),n.a.createElement(\"h4\",null,\"Search Existing Records\"),n.a.createElement(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\",gap:\"10px\",alignItems:\"center\",justifyContent:\"space-between\",width:\"100%\"}},n.a.createElement(\"div\",{style:{display:\"flex\",gap:\"10px\",flexWrap:\"wrap\",alignItems:\"center\"}},n.a.createElement(\"select\",{value:O,onChange:e=>{E(e.target.value),h(\"\"),A(\"\"),k(\"\")}},n.a.createElement(\"option\",{value:\"indentNumber\"},\"Fleet Number\"),n.a.createElement(\"option\",{value:\"Broker\"},\"Broker\"),n.a.createElement(\"option\",{value:\"Date\"},\"Date\")),\"Date\"===O?n.a.createElement(n.a.Fragment,null,n.a.createElement(\"label\",null,\"From:\"),n.a.createElement(\"input\",{type:\"date\",value:C,onChange:e=>A(e.target.value)}),n.a.createElement(\"label\",null,\"To:\"),n.a.createElement(\"input\",{type:\"date\",value:R,onChange:e=>k(e.target.value)})):n.a.createElement(\"input\",{type:\"text\",value:f,onChange:e=>h(e.target.value),placeholder:\"Search key\",style:{flex:1,width:\"250px\"}}),n.a.createElement(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"}},n.a.createElement(\"label\",{style:{display:\"flex\",alignItems:\"center\",fontSize:\"14px\",marginBottom:0}},n.a.createElement(\"input\",{type:\"checkbox\",checked:_,onChange:e=>W(e.target.checked),style:{marginRight:\"5px\"}}),\"Show only active\")),n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:Q,disabled:T},T?\"Searching...\":\"Search\"))),n.a.createElement(\"hr\",null),\"indentNumber\"===O&&o.length>0&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h4\",null,\"Editable Current Records\"),n.a.createElement(\"div\",{className:\"table-scroll-x\"},n.a.createElement(\"table\",null,n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,M.map(e=>n.a.createElement(\"th\",{key:e},N[e]||e)),n.a.createElement(\"th\",null,\"Action\"))),n.a.createElement(\"tbody\",null,o.map((t,a)=>n.a.createElement(\"tr\",{key:a},M.map((e,r)=>{var l,c;return n.a.createElement(\"td\",{key:r},n.a.createElement(\"input\",{type:\"text\",value:\"object\"===typeof t[e]&&(null===(l=t[e])||void 0===l?void 0:l.seconds)?\"date\"===e?new Date(1e3*t[e].seconds).toLocaleDateString(\"en-GB\"):new Date(1e3*t[e].seconds).toLocaleString():String(null!==(c=t[e])&&void 0!==c?c:\"\"),onChange:t=>{const r=[...o];r[a][e]=t.target.value,m(r)},readOnly:[\"indentNumber\",\"createdAt\",\"createdBy\",\"isCurrent\",\"updateDescription\"].includes(e),style:{width:\"140px\"}}))}),n.a.createElement(\"td\",null,n.a.createElement(\"button\",{className:\"save\",onClick:()=>(async t=>{try{const{id:l,indentNumber:o}=t,i=Object(c.a)(t,D),m=(await Object(d.g)(Object(d.i)(Object(d.c)(p,\"fleet_records\"),Object(d.l)(\"indentNumber\",\"==\",o),Object(d.l)(\"isCurrent\",\"==\",!0)))).docs.find(e=>e.id===l),u=w((null===m||void 0===m?void 0:m.data())||{}),b={},g=[];for(const e in i){var a,r;if([\"id\",\"isCurrent\",\"createdAt\",\"createdBy\",\"versionDate\",\"updateDescription\",\"expiredAt\"].includes(e))continue;const t=null!==(a=i[e])&&void 0!==a?a:\"\",n=null!==(r=u[e])&&void 0!==r?r:\"\";b[e]=t,String(t).trim()!==String(n).trim()&&g.push(\"Updated \".concat(e))}return 0===g.length?void x.b.info(\"\\u2139\\ufe0f No changes to update.\"):void Object(y.confirmAlert)({title:\"Confirm Update\",message:\"Do you want to update changes: \".concat(g.join(\", \"),\"?\"),buttons:[{label:\"Yes\",onClick:async()=>{await Object(d.k)(Object(d.e)(p,\"fleet_records\",l),{isCurrent:!1,expiredAt:new Date,modifiedBy:e.email});const t=Object(s.a)(Object(s.a)({},b),{},{indentNumber:o,createdAt:new Date,createdBy:e.email,isCurrent:!0,versionDate:new Date,updateDescription:g.join(\", \")});await Object(d.b)(Object(d.c)(p,\"fleet_records\"),t),x.b.success(\"\\u2705 Record updated.\"),Q()}},{label:\"No\"}]})}catch(n){x.b.error(\"\\u274c Update failed: \"+n.message)}})(t)},\"Save\"),n.a.createElement(\"button\",{className:\"delete\",onClick:()=>(async e=>{try{const a=Object(d.i)(Object(d.c)(p,\"fleet_records\"),Object(d.l)(\"indentNumber\",\"==\",e)),r=await Object(d.g)(a);return r.empty?void x.b.error(\"\\u274c No records found for deletion.\"):void Object(y.confirmAlert)({title:\"Confirm Deletion\",message:\"Delete all versions of Indent No. \".concat(e,\"?\"),buttons:[{label:\"Yes\",onClick:async()=>{await Promise.all(r.docs.map(e=>Object(d.d)(Object(d.e)(p,\"fleet_records\",e.id)))),m(t=>t.filter(t=>t.indentNumber!==e)),g(t=>t.filter(t=>t.indentNumber!==e)),x.b.success(\"\\u2705 Deleted all versions.\")}},{label:\"No\"}]})}catch(t){x.b.error(\"\\u274c Delete failed: \"+t.message)}})(t.indentNumber)},\"Delete\")))))))),u.length>0&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"hr\",null),n.a.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}},n.a.createElement(\"h4\",null,\"\\ud83d\\udd0d Full Version History\"),n.a.createElement(\"div\",{style:{display:\"flex\",gap:\"20px\",alignItems:\"center\"}},n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:J,onChange:e=>K(e.target.checked)}),\"Include Customer\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:z,onChange:e=>G(e.target.checked)}),\"Include Vendor\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:Z,onChange:e=>q(e.target.checked)}),\"Include POD\"),n.a.createElement(\"button\",{onClick:()=>{if(0===u.length)return void x.b.info(\"\\u274c No history data to export.\");const e=M.slice(0,17),t=M.slice(17,32),a=M.slice(32,36),r=M.slice(36),n=[...e,...J?t:[],...z?a:[],...Z?r:[]],l=u.map(e=>{const t={};return n.forEach(a=>{const r=e[a];t[a]=(null===r||void 0===r?void 0:r.seconds)?new Date(1e3*r.seconds).toLocaleString():null!==r&&void 0!==r?r:\"\"}),t}),o=j.c.json_to_sheet(l),c=j.c.book_new();j.c.book_append_sheet(c,o,\"Filtered Export\");const s=\"FilteredExport_\".concat((new Date).toISOString().split(\"T\")[0],\".xlsx\");j.d(c,s)},disabled:0===u.length,className:\"export-button\"},\"\\u2b07\\ufe0f Export Selected\"))),n.a.createElement(\"div\",{className:\"table-scroll-x\"},n.a.createElement(\"table\",null,n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,M.map(e=>n.a.createElement(\"th\",{key:e,className:\"tight-header\"},N[e]||e)))),n.a.createElement(\"tbody\",null,[...u].sort((e,t)=>{var a,r;if(e.isCurrent)return-1;if(t.isCurrent)return 1;const n=(null===(a=e.expiredAt)||void 0===a?void 0:a.seconds)||0;return((null===(r=t.expiredAt)||void 0===r?void 0:r.seconds)||0)-n}).map((e,t)=>n.a.createElement(\"tr\",{key:t},M.map((t,a)=>{var r,l;return n.a.createElement(\"td\",{key:a},\"object\"===typeof e[t]&&(null===(r=e[t])||void 0===r?void 0:r.seconds)?\"date\"===t?new Date(1e3*e[t].seconds).toLocaleDateString(\"en-GB\"):new Date(1e3*e[t].seconds).toLocaleString():String(null!==(l=e[t])&&void 0!==l?l:\"\"))}))))))),U&&!T&&0===o.length&&0===u.length&&n.a.createElement(\"p\",{style:{textAlign:\"center\",color:\"#888\",marginTop:\"30px\"}},\"No records to display.\"),n.a.createElement(x.a,{position:\"bottom-right\",autoClose:3e3}),n.a.createElement(\"p\",{style:{textAlign:\"center\",marginTop:\"30px\",color:\"#666\"}},\"\\xa9 2025 Fleet Billing System\")):n.a.createElement(v,null)};var R=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,41)).then(t=>{let{getCLS:a,getFID:r,getFCP:n,getLCP:l,getTTFB:o}=t;a(e),r(e),n(e),l(e),o(e)})};o.a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(A,null))),R()}},[[22,1,2]]]);","extractedComments":[]}