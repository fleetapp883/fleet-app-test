{"map":"{\"version\":3,\"sources\":[\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/firebase.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/Auth.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/ManualEntryForm.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/components/UploadForm.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/App.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/reportWebVitals.js\",\"C:/Users/anupp/Downloads/fleet-billing-app/fleet-billing-app/src/index.js\"],\"names\":[\"app\",\"initializeApp\",\"apiKey\",\"authDomain\",\"projectId\",\"storageBucket\",\"messagingSenderId\",\"appId\",\"measurementId\",\"auth\",\"getAuth\",\"db\",\"getFirestore\",\"styles\",\"container\",\"minHeight\",\"background\",\"display\",\"justifyContent\",\"alignItems\",\"padding\",\"card\",\"width\",\"maxWidth\",\"borderRadius\",\"boxShadow\",\"textAlign\",\"logo\",\"margin\",\"title\",\"marginBottom\",\"color\",\"form\",\"flexDirection\",\"gap\",\"input\",\"border\",\"fontSize\",\"outline\",\"submitBtn\",\"backgroundColor\",\"cursor\",\"toggleBtn\",\"marginTop\",\"textDecoration\",\"Auth\",\"email\",\"setEmail\",\"useState\",\"password\",\"setPassword\",\"isLogin\",\"setIsLogin\",\"loading\",\"setLoading\",\"React\",\"createElement\",\"style\",\"src\",\"alt\",\"onSubmit\",\"async\",\"e\",\"preventDefault\",\"signInWithEmailAndPassword\",\"alert\",\"createUserWithEmailAndPassword\",\"err\",\"message\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"required\",\"disabled\",\"onClick\",\"fixedFieldsInitial\",\"date\",\"deliveryDate\",\"months\",\"origin\",\"destination\",\"customer\",\"customerType\",\"vehicleNo\",\"vendor\",\"salesRate\",\"buyRate\",\"customerFields\",\"toBeAdvance\",\"advanceReceived\",\"advDeviation\",\"advanceRecDate\",\"validatedAdvanceUTRDescription\",\"validatedAdvanceAmount\",\"balance\",\"processingCharges\",\"inwardMisCharges\",\"outwardMisCharges\",\"balanceReceived\",\"remainingBalance\",\"balanceRecDate\",\"validatedBalanceUTR\",\"validatedBalanceUTRAmount\",\"vendorFields\",\"vendorOutwardPayment\",\"paidAmount\",\"balancePending\",\"vendorRemark\",\"podFields\",\"podVendorDate\",\"podSendToCustomerDate\",\"docNo\",\"podCustomerRec\",\"today\",\"balanceOverdueDays\",\"toBeCollectedAmount\",\"flattenObject\",\"obj\",\"prefix\",\"arguments\",\"length\",\"undefined\",\"result\",\"key\",\"fullKey\",\"concat\",\"seconds\",\"Object\",\"assign\",\"ManualEntryForm\",\"_ref\",\"onAddRow\",\"fixedFields\",\"setFixedFields\",\"customerData\",\"setCustomerData\",\"vendorData\",\"setVendorData\",\"podData\",\"setPodData\",\"indentNumber\",\"setIndentNumber\",\"docId\",\"setDocId\",\"showCustomer\",\"setShowCustomer\",\"showVendor\",\"setShowVendor\",\"showPod\",\"setShowPod\",\"customerSaved\",\"setCustomerSaved\",\"vendorSaved\",\"setVendorSaved\",\"podSaved\",\"setPodSaved\",\"useEffect\",\"storedIndentNo\",\"localStorage\",\"getItem\",\"storedFixed\",\"storedCustomer\",\"storedVendor\",\"storedPod\",\"storedDocId\",\"Number\",\"JSON\",\"parse\",\"formatLabel\",\"replace\",\"str\",\"toUpperCase\",\"convertDateFields\",\"data\",\"allowedKeys\",\"entries\",\"forEach\",\"_ref2\",\"includes\",\"parsed\",\"Date\",\"isNaN\",\"Timestamp\",\"fromDate\",\"handleFixedChange\",\"updated\",\"_objectSpread\",\"[object Object]\",\"name\",\"setItem\",\"stringify\",\"handleSectionChange\",\"section\",\"saveSection\",\"sectionName\",\"sectionData\",\"dateFields\",\"docRef\",\"doc\",\"updateDoc\",\"confirmAlert\",\"buttons\",\"label\",\"className\",\"gridTemplateColumns\",\"keys\",\"map\",\"toLowerCase\",\"fontWeight\",\"values\",\"some\",\"val\",\"String\",\"trim\",\"user\",\"currentUser\",\"indentNo\",\"counterRef\",\"runTransaction\",\"docSnap\",\"transaction\",\"get\",\"exists\",\"Error\",\"current\",\"nextFleetNo\",\"update\",\"getNextIndentNumber\",\"enrichedData\",\"createdAt\",\"createdBy\",\"isCurrent\",\"versionDate\",\"updateDescription\",\"addDoc\",\"collection\",\"id\",\"navigator\",\"clipboard\",\"writeText\",\"Fragment\",\"checked\",\"marginLeft\",\"isDate\",\"getDoc\",\"removeItem\",\"handleNewRecord\",\"dateFieldKeys\",\"labelToKey\",\"Placement Date\",\"Delivery Date\",\"Month\",\"Origin\",\"Destination\",\"Customer\",\"Customer Type\",\"Vehicle Number\",\"Vendor\",\"Sales Rate\",\"Buy Rate\",\"Customer -> To be Advance (Sales)\",\"Customer -> Advance / Payment Received\",\"Customer -> Adv Deviation (as on Date)\",\"Customer -> Advance Rec Date\",\"Customer -> Validated-Advance UTR Description\",\"Customer -> Validated UTR - Advance Amount\",\"Customer -> Balance\",\"Customer -> Processing Charges\",\"Customer -> Inward-Mis Charges\",\"Customer -> Outward-Mis Charges\",\"Customer -> Bal Received\",\"Customer -> Remaining Balance\",\"Customer -> Balance Rec Date\",\"Customer -> Validated-Balance UTR\",\"Customer -> Validate Balance UTR-Amount\",\"Vendor -> Outward Payment\",\"Vendor -> Paid Amount\",\"Vendor -> Balance Pending\",\"Vendor -> Vendor Remark\",\"POD -> POD Vendor-Date\",\"POD -> POD-Send to Customer Date\",\"POD -> Doc No\",\"POD -> POD-Customer Rec\",\"POD -> Today\",\"POD -> Balance Overdue Days\",\"POD -> To be Collected Amount\",\"UploadForm\",\"previewData\",\"setPreviewData\",\"statusMap\",\"setStatusMap\",\"fleetNumbers\",\"setFleetNumbers\",\"parseExcel\",\"file\",\"reader\",\"FileReader\",\"onload\",\"workbook\",\"XLSX\",\"sheet\",\"Sheets\",\"SheetNames\",\"raw\",\"sheet_to_json\",\"header\",\"defval\",\"blankrows\",\"headers\",\"rows\",\"slice\",\"row\",\"h\",\"j\",\"getMappedKey\",\"readAsBinaryString\",\"saveRow\",\"i\",\"fleetNo\",\"getNextFleetNumber\",\"parsedRow\",\"match\",\"parsedDate\",\"dd\",\"mm\",\"yyyy\",\"split\",\"parseDDMMYYYY\",\"placementDate\",\"enriched\",\"prev\",\"accept\",\"_e$target$files\",\"files\",\"setTimeout\",\"generateTemplate\",\"sampleRow\",\"worksheet\",\"json_to_sheet\",\"book_new\",\"book_append_sheet\",\"resetTable\",\"d\",\"getTime\",\"getTimezoneOffset\",\"toISOString\",\"_unused\",\"handleEdit\",\"filter\",\"_\",\"idx\",\"s\",\"f\",\"deleteRow\",\"finalColumnOrder\",\"columnLabels\",\"expiredAt\",\"customerMaster.toBeAdvance\",\"customerMaster.advanceReceived\",\"customerMaster.advDeviation\",\"customerMaster.advanceRecDate\",\"customerMaster.validatedAdvanceUTRDescription\",\"customerMaster.validatedAdvanceAmount\",\"customerMaster.balance\",\"customerMaster.processingCharges\",\"customerMaster.inwardMisCharges\",\"customerMaster.outwardMisCharges\",\"customerMaster.balanceReceived\",\"customerMaster.remainingBalance\",\"customerMaster.balanceRecDate\",\"customerMaster.validatedBalanceUTR\",\"customerMaster.validatedBalanceUTRAmount\",\"vendorMaster.vendorOutwardPayment\",\"vendorMaster.paidAmount\",\"vendorMaster.balancePending\",\"vendorMaster.vendorRemark\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.docNo\",\"podMaster.podCustomerRec\",\"podMaster.today\",\"podMaster.balanceOverdueDays\",\"podMaster.toBeCollectedAmount\",\"App\",\"setUser\",\"authLoading\",\"setAuthLoading\",\"records\",\"setRecords\",\"history\",\"setHistory\",\"searchKey\",\"setSearchKey\",\"searchField\",\"setSearchField\",\"startDate\",\"setStartDate\",\"endDate\",\"setEndDate\",\"originalRecords\",\"setOriginalRecords\",\"isSearching\",\"setIsSearching\",\"isExporting\",\"setIsExporting\",\"searchAttempted\",\"setSearchAttempted\",\"activeOnly\",\"setActiveOnly\",\"includeCustomer\",\"setIncludeCustomer\",\"includeVendor\",\"setIncludeVendor\",\"includePOD\",\"setIncludePOD\",\"unsubscribe\",\"onAuthStateChanged\",\"handleSearch\",\"fleetRef\",\"q\",\"toDate\",\"toast\",\"warn\",\"query\",\"where\",\"snapshot\",\"getDocs\",\"allVersions\",\"currentOnly\",\"rawData\",\"push\",\"sort\",\"a\",\"b\",\"empty\",\"info\",\"error\",\"overflowX\",\"height\",\"signOut\",\"addToHistory\",\"flexWrap\",\"flex\",\"marginRight\",\"col\",\"rowIndex\",\"_row$col2\",\"_row$col\",\"readOnly\",\"updatedData\",\"_objectWithoutProperties\",\"_excluded\",\"oldDoc\",\"docs\",\"find\",\"oldData\",\"cleanData\",\"updateLog\",\"_updatedData$key\",\"_oldData$key\",\"newVal\",\"oldVal\",\"join\",\"flattenedOld\",\"modifiedBy\",\"newVersion\",\"success\",\"handleUpdate\",\"fleetNumberToDelete\",\"Promise\",\"all\",\"deleteDoc\",\"r\",\"handleDelete\",\"handleExportToExcel\",\"fixedCols\",\"customerCols\",\"vendorCols\",\"podCols\",\"selectedCols\",\"exportData\",\"flatRow\",\"toLocaleString\",\"fileName\",\"_a$expiredAt\",\"_b$expiredAt\",\"aTime\",\"_row$col3\",\"_row$col4\",\"toLocaleDateString\",\"ToastContainer\",\"position\",\"autoClose\",\"reportWebVitals\",\"onPerfEntry\",\"Function\",\"__webpack_require__\",\"then\",\"bind\",\"getCLS\",\"getFID\",\"getFCP\",\"getLCP\",\"getTTFB\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"iQA8BA,MAWMA,EAAMC,OAAAA,EAAAA,EAAAA,CAXW,CACrBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOJC,EAAOC,OAAAA,EAAAA,EAAAA,CAAQV,GACfW,EAAKC,OAAAA,EAAAA,EAAAA,CAAaZ,GCsBzBa,EAAS,CACbC,UAAW,CACTC,UAAW,QACXC,WAAY,4CACZC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,QAAS,QAEXC,KAAM,CACJC,MAAO,OACPC,SAAU,QACVP,WAAY,UACZI,QAAS,YACTI,aAAc,OACdC,UAAW,2BACXC,UAAW,UAEbC,KAAM,CACJL,MAAO,MACPC,SAAU,QACVK,OAAQ,cACRX,QAAS,SAEXY,MAAO,CACLC,aAAc,OACdC,MAAO,WAETC,KAAM,CACJf,QAAS,OACTgB,cAAe,SACfC,IAAK,QAEPC,MAAO,CACLf,QAAS,OACTI,aAAc,MACdY,OAAQ,iBACRC,SAAU,OACVC,QAAS,QAEXC,UAAW,CACTnB,QAAS,OACToB,gBAAiB,UACjBT,MAAO,OACPK,OAAQ,OACRZ,aAAc,MACda,SAAU,OACVI,OAAQ,WAEVC,UAAW,CACTC,UAAW,OACX3B,WAAY,OACZoB,OAAQ,OACRL,MAAO,UACPU,OAAQ,UACRJ,SAAU,OACVO,eAAgB,cAILC,IAAAA,EAxHFA,KACX,MAAOC,EAAOC,GAAYC,OAAAA,EAAAA,SAAAA,CAAS,KAC5BC,EAAUC,GAAeF,OAAAA,EAAAA,SAAAA,CAAS,KAClCG,EAASC,GAAcJ,OAAAA,EAAAA,SAAAA,EAAS,IAChCK,EAASC,GAAcN,OAAAA,EAAAA,SAAAA,EAAS,GAoBvC,OACEO,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO5C,EAAOC,WACjByC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO5C,EAAOQ,MACjBkC,EAAAA,EAAAC,cAAA,MAAA,CAAKE,IAAI,YAAYC,IAAI,OAAOF,MAAO5C,EAAOc,OAC9C4B,EAAAA,EAAAC,cAAA,KAAA,CAAIC,MAAO5C,EAAOgB,OAAQsB,EAAU,QAAU,WAC9CI,EAAAA,EAAAC,cAAA,OAAA,CAAMI,SAvBSC,MAAAA,IACnBC,EAAEC,iBACFT,GAAW,GACX,IACMH,SACIa,OAAAA,EAAAA,EAAAA,CAA2BvD,EAAMqC,EAAOG,GAC9CgB,MAAM,oCAEAC,OAAAA,EAAAA,EAAAA,CAA+BzD,EAAMqC,EAAOG,GAClDgB,MAAM,yCAER,MAAOE,GACPF,MAAM,UAAOE,EAAIC,SAClB,QACCd,GAAW,KASqBG,MAAO5C,EAAOmB,MAC1CuB,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,QACLC,YAAY,gBACZC,MAAOzB,EACP0B,SAAWV,GAAMf,EAASe,EAAEW,OAAOF,OACnCG,UAAQ,EACRjB,MAAO5C,EAAOsB,QAEhBoB,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,WACLC,YAAY,WACZC,MAAOtB,EACPuB,SAAWV,GAAMZ,EAAYY,EAAEW,OAAOF,OACtCG,UAAQ,EACRjB,MAAO5C,EAAOsB,QAEhBoB,EAAAA,EAAAC,cAAA,SAAA,CAAQa,KAAK,SAASM,SAAUtB,EAASI,MAAO5C,EAAO0B,WACpDc,EAAU,iBAAmBF,EAAU,QAAU,YAGtDI,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAASA,IAAMxB,GAAYD,GAAUM,MAAO5C,EAAO6B,WACxDS,EACG,8BACA,+CCzCd,MAAM0B,EAAqB,CACzBC,KAAM,GACNC,aAAc,GACdC,OAAQ,GACRC,OAAQ,GACRC,YAAa,GACbC,SAAU,GACVC,aAAc,GACdC,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXC,QAAS,IAGLC,EAAiB,CACrBC,YAAa,GACbC,gBAAiB,GACjBC,aAAc,GACdC,eAAgB,GAChBC,+BAAgC,GAChCC,uBAAwB,GACxBC,QAAS,GACTC,kBAAmB,GACnBC,iBAAkB,GAClBC,kBAAmB,GACnBC,gBAAiB,GACjBC,iBAAkB,GAClBC,eAAgB,GAChBC,oBAAqB,GACrBC,0BAA2B,IAGvBC,EAAe,CACnBC,qBAAsB,GACtBC,WAAY,GACZC,eAAgB,GAChBC,aAAc,IAGVC,EAAY,CAChBC,cAAe,GACfC,sBAAuB,GACvBC,MAAO,GACPC,eAAgB,GAChBC,MAAO,GACPC,mBAAoB,GACpBC,oBAAqB,IAEjBC,EAAgB,SAACC,GAAqB,IAAhBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/BG,EAAS,GACb,IAAK,MAAMC,KAAON,EAAK,CACrB,MAAMhD,EAAQgD,EAAIM,GACZC,EAAUN,EAAM,GAAAO,OAAMP,EAAM,KAAAO,OAAIF,GAAQA,EAC1CtD,GAA0B,kBAAVA,IAAuBA,EAAMyD,QAC/CC,OAAOC,OAAON,EAAQN,EAAc/C,EAAOuD,IAE3CF,EAAOE,GAAWvD,EAGtB,OAAOqD,GA4hBMO,IAAAA,EAzhBSC,IAAkB,IAAjBC,SAAEA,GAAUD,EACnC,MAAOE,EAAaC,GAAkBvF,OAAAA,EAAAA,SAAAA,CAAS6B,IACxC2D,EAAcC,GAAmBzF,OAAAA,EAAAA,SAAAA,CAASyC,IAC1CiD,EAAYC,GAAiB3F,OAAAA,EAAAA,SAAAA,CAASyD,IACtCmC,EAASC,GAAc7F,OAAAA,EAAAA,SAAAA,CAAS8D,IAChCgC,EAAcC,GAAmB/F,OAAAA,EAAAA,SAAAA,CAAS,OAC1CgG,EAAOC,GAAYjG,OAAAA,EAAAA,SAAAA,CAAS,OAE5BkG,EAAcC,GAAmBnG,OAAAA,EAAAA,SAAAA,EAAS,IAC1CoG,EAAYC,GAAiBrG,OAAAA,EAAAA,SAAAA,EAAS,IACtCsG,EAASC,GAAcvG,OAAAA,EAAAA,SAAAA,EAAS,IAEhCwG,EAAeC,GAAoBzG,OAAAA,EAAAA,SAAAA,EAAS,IAC5C0G,EAAaC,GAAkB3G,OAAAA,EAAAA,SAAAA,EAAS,IACxC4G,EAAUC,GAAe7G,OAAAA,EAAAA,SAAAA,EAAS,GAIzC8G,OAAAA,EAAAA,UAAAA,CAAU,KACR,MAAMC,EAAiBC,aAAaC,QAAQ,0BACtCC,EAAcF,aAAaC,QAAQ,eACnCE,EAAiBH,aAAaC,QAAQ,kBACtCG,EAAeJ,aAAaC,QAAQ,gBACpCI,EAAYL,aAAaC,QAAQ,aACjCK,EAAcN,aAAaC,QAAQ,SAGrCK,GAAarB,EAASqB,GACtBP,GAAgBhB,EAAgBwB,OAAOR,IACvCG,GAAa3B,EAAeiC,KAAKC,MAAMP,IACvCC,GAAgB1B,EAAgB+B,KAAKC,MAAMN,IAC3CC,GAAczB,EAAc6B,KAAKC,MAAML,IACvCC,GAAWxB,EAAW2B,KAAKC,MAAMJ,KACpC,IAEH,MAAMK,EAAe7C,GACT,SAARA,EAAuB,iBACpBA,EACJ8C,QAAQ,kBAAmB,SAC3BA,QAAQ,KAAM,KACdA,QAAQ,KAAOC,GAAQA,EAAIC,eAyBxBC,EAAoB,SAACC,GAA2B,IAArBC,EAAWvD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC7C,MAAMG,EAAS,GASf,OARAK,OAAOgD,QAAQF,GAAMG,QAAQC,IAAkB,IAAhBtD,EAAKtD,GAAM4G,EACxC,GAAIH,EAAYI,SAASvD,IAAQtD,EAAO,CACtC,MAAM8G,EAAS,IAAIC,KAAK/G,GACxBqD,EAAOC,GAAO0D,MAAMF,GAAU9G,EAAQiH,EAAAA,EAAUC,SAASJ,QAEzDzD,EAAOC,GAAOtD,IAGXqD,GAGH8D,EAAqB5H,IAC3B,MAAM6H,EAAOC,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAQtD,GAAW,GAAA,CAAEuD,CAAC/H,EAAEW,OAAOqH,MAAOhI,EAAEW,OAAOF,QAC5DgE,EAAeoD,GACf3B,aAAa+B,QAAQ,cAAevB,KAAKwB,UAAUL,KAI7CM,EAAsBA,CAACnI,EAAGoI,KAChC,MAAMJ,KAAEA,EAAIvH,MAAEA,GAAUT,EAAEW,OAC1B,GAAgB,aAAZyH,EAAwB,CAC1B,MAAMP,EAAOC,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAQpD,GAAY,GAAA,CAAEqD,CAACC,GAAOvH,IAC3CkE,EAAgBkD,GAChB3B,aAAa+B,QAAQ,iBAAkBvB,KAAKwB,UAAUL,IAExD,GAAgB,WAAZO,EAAsB,CACxB,MAAMP,EAAOC,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAQlD,GAAU,GAAA,CAAEmD,CAACC,GAAOvH,IACzCoE,EAAcgD,GACd3B,aAAa+B,QAAQ,eAAgBvB,KAAKwB,UAAUL,IAEtD,GAAgB,QAAZO,EAAmB,CACrB,MAAMP,EAAOC,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAQhD,GAAO,GAAA,CAAEiD,CAACC,GAAOvH,IACtCsE,EAAW8C,GACX3B,aAAa+B,QAAQ,YAAavB,KAAKwB,UAAUL,MA0E7CQ,EAActI,eAAOuI,EAAaC,GAAiC,IAApBC,EAAU7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAChE,GAAKuB,EASL,IACE,MAAMuD,EAASC,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,gBAAiBqI,SAClCyD,OAAAA,EAAAA,EAAAA,CAAUF,EAAQ,CACtBV,CAAA,GAAA9D,OAAIqE,IAAgBtB,EAAkBuB,EAAaC,KAEjC,mBAAhBF,GAAkC3C,GAAiB,GACnC,iBAAhB2C,GAAgCzC,GAAe,GAC/B,cAAhByC,GAA6BvC,GAAY,GAC7C6C,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,QACPuC,QAAO,UAAA2D,OAAOqE,EAAW,WACzBO,QAAS,CAAC,CAAEC,MAAO,SAGf,MAAOzI,GACPuI,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,QACPuC,QAAS,sBAAmBD,EAAIC,QAChCuI,QAAS,CAAC,CAAEC,MAAO,cA1BnBF,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,eACPuC,QAAS,wCACTuI,QAAS,CAAC,CAAEC,MAAO,UA4HrB,OACErJ,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAEd,UAAW,KACvBY,EAAAA,EAAAC,cAAA,KAAA,KAAI,wBACVD,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,iBACbtJ,EAAAA,EAAAC,cAAA,MAAA,CACEqJ,UAAU,oBACVpJ,MAAO,CACLxC,QAAS,OACT6L,oBAAqB,iBACrB5K,IAAK,SAGN+F,OAAO8E,KAAKlI,GAAoBmI,IAAKnF,IACrBA,EAAIoF,cAAc7B,SAAS,SAElC,GAAArD,OACCF,EAAG,iBAMVtE,EAAAA,EAAAC,cAAA,MAAA,CAAKqE,IAAKA,GACRtE,EAAAA,EAAAC,cAAA,QAAA,CAAOqJ,UAAU,aAAapJ,MAAO,CAAEyJ,WAAY,QAC1DxC,EAAY7C,IAEL,SAARA,GAA0B,iBAARA,EAClBtE,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,OACLyH,KAAMjE,EACNgF,UAAU,eACVtI,MAAO+D,EAAYT,GACnBrD,SAAUkH,EACV/G,WAAYmE,IAGdvF,EAAAA,EAAAC,cAAA,QAAA,CACEsI,KAAMjE,EACNgF,UAAU,eACVvI,YAAY,GACZC,MAAO+D,EAAYT,GACnBrD,SAAUkH,EACV/G,WAAYmE,EACZzE,KAAK,cAULyE,GACFvF,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAEd,UAAW,OAAQrB,MAAO,OAAQI,UAAW,UACzD6B,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,kBAAkBjI,QAhPdf,UAK1B,GAJwBoE,OAAOkF,OAAO7E,GAAa8E,KACjDC,GAAoC,KAA7BC,OAAU,OAAHD,QAAG,IAAHA,EAAAA,EAAO,IAAIE,QAiBvB,IACE,MAAMC,EAAO/M,EAAKgN,YACZC,OAlCkB7J,WAC5B,MAAM8J,EAAanB,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,WAAY,iBAQvC,aAP0BiN,OAAAA,EAAAA,EAAAA,CAAejN,EAAIkD,MAAAA,IAC3C,MAAMgK,QAAgBC,EAAYC,IAAIJ,GACtC,IAAKE,EAAQG,SAAU,MAAM,IAAIC,MAAM,uBACvC,MAAMC,EAAUL,EAAQ9C,OAAOoD,aAAe,EAE9C,OADAL,EAAYM,OAAOT,EAAY,CAAEQ,YAAaD,EAAU,IACjDA,KA2BmBG,GAClBC,EAAY1C,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,CAChB9C,aAAc4E,GACX5C,EAAkBxC,EAAa,CAAC,OAAO,kBAAgB,GAAA,CAC1DiG,UAAW,IAAIjD,KACfkD,WAAe,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAM1K,QAAS,YAC1B2L,WAAW,EACXC,YAAa,IAAIpD,KACjBqD,kBAAmB,KAGfpC,QAAeqC,OAAAA,EAAAA,EAAAA,CAAOC,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAAkB2N,GAC7DvF,EAAgB2E,GAChBzE,EAASsD,EAAOuC,IAChB9E,aAAa+B,QAAQ,QAASQ,EAAOuC,IACrC9E,aAAa+B,QAAQ,yBAA0B2B,SACzCqB,UAAUC,UAAUC,UAAU3B,OAAOI,IAC3ChB,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,UACPuC,QAAO,oDAAA2D,OAAiD2F,GACxDf,QAAS,CACP,CAAEC,MAAO,SAIP,MAAOzI,GACPuI,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,QACPuC,QAAS,qCAAkCD,EAAIC,QAC/CuI,QAAS,CAAC,CAAEC,MAAO,cA5CnBF,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,mBACPuC,QAAS,iEACTuI,QAAS,CACP,CACEC,MAAO,WAqOmD,kCAW3D9D,GACCvF,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,IAAA,CAAGC,MAAO,CAAE1B,MAAO,UAAW,4BAAqB+G,GAEnDvF,EAAAA,EAAAC,cAAA,KAAA,KAAI,kCACJD,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAASjG,EAAc1E,SAAUA,IAAM2E,GAAiBD,GAAevE,SAAU6E,IAAiB,oBAE3HjG,EAAAA,EAAAC,cAAA,QAAA,CAAOC,MAAO,CAAE2L,WAAY,KAC1B7L,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAAS/F,EAAY5E,SAAUA,IAAM6E,GAAeD,GAAazE,SAAU+E,IAAe,kBAEnHnG,EAAAA,EAAAC,cAAA,QAAA,CAAOC,MAAO,CAAE2L,WAAY,KAC1B7L,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAAS7F,EAAS9E,SAAUA,IAAM+E,GAAYD,GAAU3E,SAAUiF,IAAY,eAGtGV,GACT3F,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,KAAI,mBACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,iBACbtJ,EAAAA,EAAAC,cAAA,MAAA,CACEC,MAAO,CACLxC,QAAS,OACT6L,oBAAqB,iBACrB5K,IAAK,SAGN+F,OAAO8E,KAAKtH,GAAgBuH,IAAKnF,IAChC,MAAMwH,EAAS,CAAC,iBAAkB,kBAAkBjE,SAASvD,GAE7D,OADcwH,GAAM,GAAAtH,OAAMF,EAAG,iBAE3BtE,EAAAA,EAAAC,cAAA,MAAA,CAAKqE,IAAKA,GACRtE,EAAAA,EAAAC,cAAA,QAAA,CAAOqJ,UAAU,aAAapJ,MAAO,CAAEyJ,WAAY,QAC9DxC,EAAY7C,IAEftE,EAAAA,EAAAC,cAAA,QAAA,CACEsI,KAAMjE,EACNgF,UAAU,eACVvI,YAAY,GACZC,MAAOiE,EAAaX,GACpBrD,SAAWV,GAAMmI,EAAoBnI,EAAG,YACxCa,SAAU6E,EACVnF,KAAMgL,EAAS,OAAS,cAOlB7F,GACNjG,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAE/B,UAAW,QAASiB,UAAW,SAC3CY,EAAAA,EAAAC,cAAA,SAAA,CACEqJ,UAAU,kBACVjI,QAASA,IAAMuH,EAAY,iBAAkB3D,EAAc,CAAC,iBAAkB,oBAC/E,oBAWMY,GACT7F,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,KAAI,iBACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,iBACbtJ,EAAAA,EAAAC,cAAA,MAAA,CACEC,MAAO,CACLxC,QAAS,OACT6L,oBAAqB,iBACrB5K,IAAK,SAGN+F,OAAO8E,KAAKtG,GAAcuG,IAAKnF,GAG5BtE,EAAAA,EAAAC,cAAA,MAAA,CAAKqE,IAAKA,GACRtE,EAAAA,EAAAC,cAAA,QAAA,CAAOqJ,UAAU,aAAapJ,MAAO,CAAEyJ,WAAY,QAC9DxC,EAAY7C,IAEftE,EAAAA,EAAAC,cAAA,QAAA,CACEsI,KAAMjE,EACNgF,UAAU,eACVvI,YAAY,GACEC,MAAOmE,EAAWb,GAClBrD,SAAWV,GAAMmI,EAAoBnI,EAAG,UACxCa,SAAU+E,EACVrF,KAAK,aAMbqF,GACAnG,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAE/B,UAAW,QAASiB,UAAW,SAC7CY,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,uBAAuBjI,QAASA,IAAMuH,EAAY,eAAgBzD,IAAa,kBAU9FY,GACT/F,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,KAAI,cACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,iBACbtJ,EAAAA,EAAAC,cAAA,MAAA,CACEC,MAAO,CACLxC,QAAS,OACT6L,oBAAqB,iBACrB5K,IAAK,SAGN+F,OAAO8E,KAAKjG,GAAWkG,IAAKnF,IAC3B,MAAMwH,EAAS,CAAC,gBAAiB,wBAAyB,iBAAkB,SAASjE,SAASvD,GAE9F,OADcwH,GAAM,GAAAtH,OAAMF,EAAG,iBAE3BtE,EAAAA,EAAAC,cAAA,MAAA,CAAKqE,IAAKA,GACRtE,EAAAA,EAAAC,cAAA,QAAA,CAAOqJ,UAAU,aAAapJ,MAAO,CAAEyJ,WAAY,QAC9DxC,EAAY7C,IAEDtE,EAAAA,EAAAC,cAAA,QAAA,CACEsI,KAAMjE,EACNgF,UAAU,eACVvI,YAAY,GACZC,MAAOqE,EAAQf,GACfrD,SAAWV,GAAMmI,EAAoBnI,EAAG,OACxCa,SAAUiF,EACVvF,KAAMgL,EAAS,OAAS,cAOhCzF,GACArG,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAE/B,UAAW,QAASiB,UAAW,SAC7CY,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,uBAAuBjI,QAASA,IAAMuH,EAAY,YAAavD,EAAS,CAAC,gBAAiB,wBAAyB,iBAAkB,WAAW,eAUhKrF,EAAAA,EAAAC,cAAA,KAAA,MACAD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAEd,UAAW,GAAIrB,MAAO,OAAQI,UAAW,UAC/D6B,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QA3TiBf,UACzB,IAAKmF,EAML,YALA0D,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,QACPuC,QAAS,wBACTuI,QAAS,CAAC,CAAEC,MAAO,SAOjB1D,IAAiBM,SACb2C,EAAY,iBAAkB3D,EAAc,CAAC,iBAAkB,mBAEnEY,IAAeM,SACXyC,EAAY,eAAgBzD,GAEhCY,IAAYM,SACRuC,EAAY,YAAavD,EAAS,CAAC,gBAAiB,wBAAyB,iBAAkB,UAGvG,MAAMiF,QAAgByB,OAAAA,EAAAA,EAAAA,CAAO9C,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,gBAAiBqI,IACtD,IAAK6E,EAAQG,SAMb,YALAtB,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,QACPuC,QAAS,kBACTuI,QAAS,CAAC,CAAEC,MAAO,SAKrB,MAAM7B,EAAIa,OAAAA,EAAAA,EAAAA,CAAA,CAAKkD,GAAIjB,EAAQiB,IAAOjB,EAAQ9C,QAC1C1C,EAASf,EAAcyD,IAAO,GAC9Bf,aAAa+B,QAAQ,oBAAqB,gBAC1C/B,aAAa+B,QAAQ,kBAAmBuB,OAAOvC,EAAKjC,eAKpDP,EAAe1D,GACf4D,EAAgBhD,GAChBkD,EAAclC,GACdoC,EAAW/B,GACXiC,EAAgB,MAChBE,EAAS,MACTE,GAAgB,GAChBE,GAAc,GACdE,GAAW,GACXE,GAAiB,GACjBE,GAAe,GACfE,GAAY,GAEZG,aAAauF,WAAW,eACxBvF,aAAauF,WAAW,kBACxBvF,aAAauF,WAAW,gBACxBvF,aAAauF,WAAW,aACxBvF,aAAauF,WAAW,0BACxBvF,aAAauF,WAAW,SAIxB7C,OAAAA,EAAAA,aAAAA,CAAa,CACb7K,MAAO,OACPuC,QAAS,uDACTuI,QAAS,CAAC,CAAEC,MAAO,UA0PiBC,UAAU,wBAAuB,wBAGrEtJ,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAxPc4K,KACtB9C,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,oBACPuC,QAAS,gDACTuI,QAAS,CACP,CACEC,MAAO,MACPhI,QAASA,KAjPf2D,EAAe1D,GACf4D,EAAgBhD,GAChBkD,EAAclC,GACdoC,EAAW/B,GACXiC,EAAgB,MAChBE,EAAS,MACTE,GAAgB,GAChBE,GAAc,GACdE,GAAW,GACXE,GAAiB,GACjBE,GAAe,GACfE,GAAY,GAEZG,aAAauF,WAAW,eACxBvF,aAAauF,WAAW,kBACxBvF,aAAauF,WAAW,gBACxBvF,aAAauF,WAAW,aACxBvF,aAAauF,WAAW,0BACxBvF,aAAauF,WAAW,SAiOhB7C,OAAAA,EAAAA,aAAAA,CAAa,CACX7K,MAAO,QACPuC,QAAS,4CACTuI,QAAS,CAAC,CAAEC,MAAO,WAIzB,CACEA,MAAO,UAuOqBC,UAAU,mBAAkB,qCC1lBhE,MAAM4C,EAAgB,CACpB,gBACA,eACA,gCACA,gCACA,0BACA,kCACA,2BACA,mBAIIC,EAAa,CACjBC,iBAAkB,gBAClBC,gBAAiB,eACjBC,MAAS,SACTC,OAAU,SACVC,YAAe,cACfC,SAAY,WACZC,gBAAiB,eACjBC,iBAAkB,YAClBC,OAAU,SACVC,aAAc,YACdC,WAAY,UAEZC,oCAAqC,6BACrCC,yCAA0C,iCAC1CC,yCAA0C,8BAC1CC,+BAAgC,gCAChCC,gDAAiD,gDACjDC,6CAA8C,wCAC9CC,sBAAuB,yBACvBC,iCAAkC,mCAClCC,iCAAkC,kCAClCC,kCAAmC,mCACnCC,2BAA4B,iCAC5BC,gCAAiC,kCACjCC,+BAAgC,gCAChCC,oCAAqC,qCACrCC,0CAA2C,2CAE3CC,4BAA6B,oCAC7BC,wBAAyB,0BACzBC,4BAA6B,8BAC7BC,0BAA2B,4BAE3BC,yBAA0B,0BAC1BC,mCAAoC,kCACpCC,gBAAiB,kBACjBC,0BAA2B,2BAC3BC,eAAgB,kBAChBC,8BAA+B,+BAC/BC,gCAAiC,iCAuNpBC,IAAAA,EApNIA,KACjB,MAAOC,EAAaC,GAAkBlP,OAAAA,EAAAA,SAAAA,CAAS,KACxCmP,EAAWC,GAAgBpP,OAAAA,EAAAA,SAAAA,CAAS,KACpCqP,EAAcC,GAAmBtP,OAAAA,EAAAA,SAAAA,CAAS,IA6B3CuP,EAAcC,IAClB,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAU7O,CAAAA,IACf,MAAM8O,EAAWC,EAAAA,EAAU/O,EAAEW,OAAOmD,OAAQ,CAAEvD,KAAM,WAC9CyO,EAAQF,EAASG,OAAOH,EAASI,WAAW,IAC5CC,EAAMJ,EAAAA,EAAWK,cAAcJ,EAAO,CAAEK,OAAQ,EAAGC,OAAQ,GAAIC,WAAW,IAE1EC,EAAUL,EAAI,GACdM,EAAON,EAAIO,MAAM,GAAGxG,IAAKyG,IAC7B,MAAMlM,EAAM,GAKZ,OAJA+L,EAAQpI,QAAQ,CAACwI,EAAGC,KAClB,MAAM9L,EAbQ+E,CAAAA,GAAU8C,EAAW9C,EAAMW,SAAW,KAaxCqG,CAAaF,GACrB7L,IAAKN,EAAIM,GAAO4L,EAAIE,MAEnBpM,IAGT2K,EAAeqB,GACfnB,EAAa,IACbE,EAAgB,MAElBG,EAAOoB,mBAAmBrB,IAqBtBsB,EAAUjQ,MAAO4P,EAAKM,KAC5B,MAAMvG,EAAO/M,EAAKgN,YAClB,IACE,MAAMuG,OArBmBnQ,WACzB,MAAM8J,EAAanB,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,WAAY,iBAOvC,aANyBiN,OAAAA,EAAAA,EAAAA,CAAejN,EAAIkD,MAAAA,IAC1C,MACMqK,SADgBJ,EAAYC,IAAIJ,IACd5C,OAAOoD,aAAe,EAE9C,OADAL,EAAYM,OAAOT,EAAY,CAAEQ,YAAaD,EAAU,IACjDA,KAea+F,GAEhBC,EAAStI,OAAAA,EAAAA,EAAAA,CAAA,GAAQ6H,GACvBxL,OAAO8E,KAAKmH,GAAWhJ,QAASrD,IAC9B,GAA8B,kBAAnBqM,EAAUrM,IAAqBqM,EAAUrM,GAAKsM,MAAM,uBAAwB,CACrF,MAAMC,EAhBWxJ,CAAAA,IACvB,MAAOyJ,EAAIC,EAAIC,GAAQ3J,EAAI4J,MAAM,KACjC,OAAKH,GAAOC,GAAOC,EACZ,IAAIjJ,KAAKf,OAAOgK,GAAOhK,OAAO+J,GAAM,EAAG/J,OAAO8J,IADrB,MAcPI,CAAcP,EAAUrM,IACvCuM,aAAsB9I,OAASC,MAAM6I,KACvCF,EAAUrM,GAAOuM,MAInBF,EAAUQ,gBAAkBR,EAAUpP,OAC5CoP,EAAUpP,KAAOoP,EAAUQ,eAEzB,MAAMC,EAAQ/I,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GACTsI,GAAS,GAAA,CACZpL,aAAckL,EACdzF,UAAW,IAAIjD,KACfkD,WAAe,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAM1K,QAAS,YAC1B2L,WAAW,EACXC,YAAa,IAAIpD,aAGbsD,OAAAA,EAAAA,EAAAA,CAAOC,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAAkBgU,GAC9CvC,EAAcwC,GAAIhJ,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAWgJ,GAAI,GAAA,CAAE/I,CAACkI,GAAI,kBACxCzB,EAAiBsC,GAAIhJ,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAWgJ,GAAI,GAAA,CAAE/I,CAACkI,GAAIC,KAC3C,MAAO7P,GACPiO,EAAcwC,GAAIhJ,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GAAWgJ,GAAI,GAAA,CAAE/I,CAACkI,GAAI,qBAgC1C,OACExQ,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAE3B,aAAc,KAC1ByB,EAAAA,EAAAC,cAAA,KAAA,KAAI,0BACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQE,WAAY,SAAUe,IAAK,SACxDqB,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,OACLwQ,OAAO,cACPrQ,SAAWV,IAAM,IAAAgR,EACf,MAAMtC,EAAqB,QAAjBsC,EAAGhR,EAAEW,OAAOsQ,aAAK,IAAAD,OAAA,EAAdA,EAAiB,GAC1BtC,IACFD,EAAWC,GACXwC,WAAW,KAAQlR,EAAEW,OAAOF,MAAQ,IAAO,SAIjDhB,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAlJWqQ,KACzB,MAAM3B,EAAUrL,OAAO8E,KAAK2C,GACtBwF,EAAY,GAClB5B,EAAQpI,QAAQiI,IACd,MAAMtL,EAAM6H,EAAWyD,GACnB1D,EAAcrE,SAASvD,GACzBqN,EAAU/B,GAAU,aACc,UAAzBA,EAAOlG,eAA6BkG,EAAOlG,cAAc7B,SAAS,SAC3E8J,EAAU/B,GAAU,YACXA,EAAOlG,cAAc7B,SAAS,SAAW+H,EAAOlG,cAAc7B,SAAS,UAChF8J,EAAU/B,GAAU,QACXA,EAAOlG,cAAc7B,SAAS,WAAa+H,EAAOlG,cAAc7B,SAAS,MAClF8J,EAAU/B,GAAU,SAEpB+B,EAAU/B,GAAU,WAIxB,MAAMgC,EAAYtC,EAAAA,EAAWuC,cAAc,CAACF,IACtCtC,EAAWC,EAAAA,EAAWwC,WAC5BxC,EAAAA,EAAWyC,kBAAkB1C,EAAUuC,EAAW,YAClDtC,EAAAA,EAAeD,EAAU,8BA6HgB,mCAGpCX,EAAYvK,OAAS,GACpBnE,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,CAAIC,MAAO,CAAEd,UAAW,KAAM,6CAC9BY,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QA/CAf,UACd,IAAK,IAAIkQ,EAAI,EAAGA,EAAI9B,EAAYvK,OAAQqM,IACjC5B,EAAU4B,UAAUD,EAAQ7B,EAAY8B,GAAIA,KA6CnB,yBAC1BxQ,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QA5BG2Q,KACjBrD,EAAe,IACfE,EAAa,IACbE,EAAgB,KAyBmB7O,MAAO,CAAE2L,WAAY,GAAIrN,MAAO,QAAS,sBACtEwB,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,kBACbtJ,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KAAI,gBACHyE,OAAO8E,KAAKkF,EAAY,IAAIjF,IAAKnF,GAAQtE,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKA,GAAMA,IACzDtE,EAAAA,EAAAC,cAAA,KAAA,KAAI,UACJD,EAAAA,EAAAC,cAAA,KAAA,KAAI,YAGRD,EAAAA,EAAAC,cAAA,QAAA,KACGyO,EAAYjF,IAAI,CAACyG,EAAKM,IACrBxQ,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKkM,GACPxQ,EAAAA,EAAAC,cAAA,KAAA,KAAK6O,EAAa0B,IAAM,IACvB9L,OAAO8E,KAAK0G,GAAKzG,IAAKnF,GACrBtE,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKA,GACPtE,EAAAA,EAAAC,cAAA,QAAA,CACIa,KAAMoL,EAAcrE,SAASvD,GAAO,OAAS,OAC7CtD,MACEkL,EAAcrE,SAASvD,IAAQ4L,EAAI5L,GAC/B,MACE,IACE,MAAM2N,EAAI,IAAIlK,KAAKmI,EAAI5L,IACvB,OAAO0D,MAAMiK,EAAEC,WAAa,GAAK,IAAInK,KAAKkK,EAAEC,UAAoC,IAAxBD,EAAEE,qBAA6BC,cAAcnB,MAAM,KAAK,GAEhH,MAAAoB,GACA,MAAO,KANX,GASAnC,EAAI5L,GAEVrD,SAAWV,GA1ElB+R,EAAC9B,EAAGlM,EAAKtD,KAC1B,MAAMoH,EAAU,IAAIsG,GACpBtG,EAAQoI,GAAGlM,GAAOtD,EAClB2N,EAAevG,IAuE0BkK,CAAW9B,EAAGlM,EAAK/D,EAAEW,OAAOF,OAC7Cd,MAAO,CAAEnC,MAAO,aAKxBiC,EAAAA,EAAAC,cAAA,KAAA,KAAK2O,EAAU4B,IAAM,kBACrBxQ,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAASA,IAAMkP,EAAQL,EAAKM,GAAIpP,SAA2B,iBAAjBwN,EAAU4B,IAAkB,QAC9ExQ,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAASA,IA7ElBmP,CAAAA,IACjB7B,EAAeD,EAAY6D,OAAO,CAACC,EAAGC,IAAQA,IAAQjC,IACtD,MAAMkC,EAACrK,OAAAA,EAAAA,EAAAA,CAAA,GAAQuG,UAAoB8D,EAAElC,GACrC,MAAMmC,EAACtK,OAAAA,EAAAA,EAAAA,CAAA,GAAQyG,UAAuB6D,EAAEnC,GACxC3B,EAAa6D,GACb3D,EAAgB4D,IAwEyBC,CAAUpC,GAAItQ,MAAO,CAAE2L,WAAY,EAAGrN,MAAO,QAAS,sEC3O7F0N,EAAgB,CACpB,OAAQ,eAAgB,gCAAiC,gCACzD,8BAA+B,gDAC/B,wCAAyC,qCACzC,2CACA,0BAA2B,kCAAmC,2BAA4B,mBAItF2G,EAAmB,CACvB,eAAgB,OAAO,eAAgB,SAAU,SAAU,cAAe,WAAY,eACtF,YAAa,SAAU,YAAa,UAAW,YAAa,YAAa,cACzE,YAAa,oBAAqB,YAElC,6BAA8B,iCAAkC,8BAChE,gCAAiC,gDACjC,wCAAyC,yBAA0B,mCACnE,kCAAmC,mCAAoC,iCACvE,kCAAmC,gCAAiC,qCACpE,2CAEA,oCAAqC,0BAA2B,8BAChE,4BAEA,0BAA2B,kCAAmC,kBAC9D,2BAA4B,kBAAmB,+BAC/C,iCAGIC,EAAe,CACnBvN,aAAc,gBACdhE,KAAM,iBACNC,aAAc,gBACdC,OAAQ,QACRC,OAAQ,SACRC,YAAa,cACbC,SAAU,WACVC,aAAc,gBACdC,UAAW,iBACXC,OAAQ,SACRC,UAAW,aACXC,QAAS,WACT+I,UAAW,aACXC,UAAW,aACXE,YAAa,eACbD,UAAW,aACXE,kBAAmB,qBACnB2H,UAAW,aAGXC,6BAA8B,2CAC9BC,iCAAkC,gDAClCC,8BAA+B,gDAC/BC,gCAAiC,sCACjCC,gDAAiD,uDACjDC,wCAAyC,oDACzCC,yBAA0B,6BAC1BC,mCAAoC,wCACpCC,kCAAmC,wCACnCC,mCAAoC,yCACpCC,iCAAkC,kCAClCC,kCAAmC,uCACnCC,gCAAiC,sCACjCC,qCAAsC,2CACtCC,2CAA4C,iDAG5CC,oCAAqC,mCACrCC,0BAA2B,+BAC3BC,8BAA+B,mCAC/BC,4BAA6B,iCAG7BC,0BAA2B,gCAC3BC,kCAAmC,0CACnCC,kBAAmB,uBACnBC,2BAA4B,iCAC5BC,kBAAmB,sBACnBC,+BAAgC,qCAChCC,gCAAiC,wCAI7B1Q,EAAgB,SAACC,GAAqB,IAAhBC,EAAMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC/BG,EAAS,GACb,IAAK,MAAMC,KAAON,EAAK,CACrB,MAAMhD,EAAQgD,EAAIM,GACZC,EAAUN,EAAM,GAAAO,OAAMP,EAAM,KAAAO,OAAIF,GAAQA,EAC1CtD,GAA0B,kBAAVA,IAAuBA,EAAMyD,QAC/CC,OAAOC,OAAON,EAAQN,EAAc/C,EAAOuD,IAE3CF,EAAOE,GAAWvD,EAGtB,OAAOqD,GAyjBMqQ,IAAAA,EArjBf,WACE,MAAOzK,EAAM0K,GAAWlV,OAAAA,EAAAA,SAAAA,CAAS,OAC1BmV,EAAaC,GAAkBpV,OAAAA,EAAAA,SAAAA,EAAS,IACxCqV,EAASC,GAActV,OAAAA,EAAAA,SAAAA,CAAS,KAChCuV,EAASC,GAAcxV,OAAAA,EAAAA,SAAAA,CAAS,KAChCyV,EAAWC,GAAgB1V,OAAAA,EAAAA,SAAAA,CAAS,KACpC2V,EAAaC,GAAkB5V,OAAAA,EAAAA,SAAAA,CAAS,iBACxC6V,EAAWC,GAAgB9V,OAAAA,EAAAA,SAAAA,CAAS,KACpC+V,EAASC,GAAchW,OAAAA,EAAAA,SAAAA,CAAS,KAChCiW,EAAiBC,GAAsBlW,OAAAA,EAAAA,SAAAA,CAAS,KAChDmW,EAAaC,GAAkBpW,OAAAA,EAAAA,SAAAA,EAAS,IACxCqW,EAAaC,GAAkBtW,OAAAA,EAAAA,SAAAA,EAAS,IACxCuW,EAAiBC,GAAsBxW,OAAAA,EAAAA,SAAAA,EAAS,IAChDyW,EAAYC,GAAiB1W,OAAAA,EAAAA,SAAAA,EAAS,IACtC2W,EAAiBC,GAAsB5W,OAAAA,EAAAA,SAAAA,EAAS,IAChD6W,EAAeC,GAAoB9W,OAAAA,EAAAA,SAAAA,EAAS,IAC5C+W,EAAYC,GAAiBhX,OAAAA,EAAAA,SAAAA,EAAS,GAM7C8G,OAAAA,EAAAA,UAAAA,CAAU,KACR,MAAMmQ,EAAcC,OAAAA,EAAAA,EAAAA,CAAmBzZ,EAAOgN,IAC5CyK,EAAQzK,GACR2K,GAAe,KAEjB,MAAO,IAAM6B,KACZ,IAEH,MAuCME,EAAetW,UACnBuV,GAAe,GACf,IACE,MAAMgB,EAAWvL,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAChC,IAAI0Z,EAEA,GAAoB,SAAhB1B,EAAwB,CACpC,MAAMlN,EAAW,IAAIH,KAAKuN,GACpByB,EAAS,IAAIhP,KAAKyN,EAAU,aAElC,GAAItN,EAAW6O,EAGb,OAFAC,EAAAA,EAAMC,KAAK,4DACXpB,GAAe,GAIjBiB,EAAII,OAAAA,EAAAA,EAAAA,CACFL,KACIX,EAAa,CAACiB,OAAAA,EAAAA,EAAAA,CAAM,YAAa,MAAM,IAAS,GACpDA,OAAAA,EAAAA,EAAAA,CAAM,YAAa,KAAMjP,GACzBiP,OAAAA,EAAAA,EAAAA,CAAM,YAAa,KAAMJ,QAGvB,CAAA,IAAI7B,EAYF,OAFA8B,EAAAA,EAAMC,KAAK,kDACXpB,GAAe,GAXF,CACnB,MAAMvR,EAAsB,iBAAhB8Q,EAAiCpO,OAAOkO,GAAaA,EACjE4B,EAAII,OAAAA,EAAAA,EAAAA,CACFL,EACAM,OAAAA,EAAAA,EAAAA,CAAM/B,EAAa,KAAM9Q,MACrB4R,EAAa,CAACiB,OAAAA,EAAAA,EAAAA,CAAM,YAAa,MAAM,IAAS,KAUlDlB,GAAmB,GACnB,MAAMmB,QAAiBC,OAAAA,EAAAA,EAAAA,CAAQP,GACzBQ,EAAc,GACdC,EAAc,GAEpBH,EAASzP,QAAS2C,IAChB,MAAMkN,EAAOnP,OAAAA,EAAAA,EAAAA,CAAA,CAAKkD,GAAIjB,EAAQiB,IAAOjB,EAAQ9C,QACvC0I,EAAMnM,EAAcyT,GAE1BF,EAAYG,KAAKvH,GACbA,EAAIhF,WAAWqM,EAAYE,KAAKvH,KAEtCoH,EAAYI,KAAK,CAACC,EAAGC,IACrBD,EAAEzM,YAAc0M,EAAE1M,WAAmB,GACpCyM,EAAEzM,WAAa0M,EAAE1M,UAAkB,EACjC0M,EAAErS,aAAeoS,EAAEpS,cAI5BgS,EAAYG,KAAK,CAACC,EAAGC,IAAMA,EAAErS,aAAeoS,EAAEpS,cAEpB,iBAAhB6P,GACFL,EAAWwC,GACXtC,EAAWqC,KAEXvC,EAAW,IACXE,EAAWqC,KAGTF,EAASS,OAAgC,IAAvBP,EAAYnT,SAChC6S,EAAAA,EAAMc,KAAK,4BAEb,MAAOC,GACXf,EAAAA,EAAMe,MAAM,yBAAsBA,EAAMlX,SAErC,QACCgV,GAAe,KAkLnB,OAAIjB,EAAoB5U,EAAAA,EAAAC,cAAA,IAAA,CAAGC,MAAO,CAAE/B,UAAW,WAAY,8BACxD8L,EAIDjK,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAElC,SAAU,QAASga,UAAW,SAAUna,QAAS,cAC7DmC,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,UACbtJ,EAAAA,EAAAC,cAAA,KAAA,KAAI,2BACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQE,WAAY,WACzCoC,EAAAA,EAAAC,cAAA,OAAA,CAAMqJ,UAAU,cAAa,YAAUW,EAAK1K,OAC5CS,EAAAA,EAAAC,cAAA,MAAA,CAAKE,IAAI,YAAYC,IAAI,OAAOF,MAAO,CAAE+X,OAAQ,YAIrDjY,EAAAA,EAAAC,cAAA,SAAA,CACJoB,QAASA,KAEPoF,aAAauF,WAAW,yBACxBvF,aAAauF,WAAW,SACxBvF,aAAauF,WAAW,eACxBvF,aAAauF,WAAW,kBACxBvF,aAAauF,WAAW,gBACxBvF,aAAauF,WAAW,aAExBkM,OAAAA,EAAAA,EAAAA,CAAQhb,KAEX,UAIK8C,EAAAA,EAAAC,cAAA,KAAA,MAEAD,EAAAA,EAAAC,cAACwO,EAAU,MAEXzO,EAAAA,EAAAC,cAAC2E,EAAe,CAChBE,SAAUA,CAACoL,EAAKiI,KACdpD,EAAW,CAAC7E,IACRiI,GAAclD,EAAW,CAAC/E,IAG9BmF,EAAe,gBACfF,EAAapL,OAAOmG,EAAI3K,eACxB0Q,GAAmB,GACnBE,GAAc,MAKhBnW,EAAAA,EAAAC,cAAA,KAAA,MACAD,EAAAA,EAAAC,cAAA,KAAA,KAAI,2BACVD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQ0a,SAAU,OAAQzZ,IAAK,OAAQf,WAAY,SAAUD,eAAgB,gBAAiBI,MAAO,SAC1HiC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQiB,IAAK,OAAQyZ,SAAU,OAAQxa,WAAY,WACxEoC,EAAAA,EAAAC,cAAA,SAAA,CAAQe,MAAOoU,EAAanU,SAAWV,IACrC8U,EAAe9U,EAAEW,OAAOF,OACxBmU,EAAa,IACbI,EAAa,IACbE,EAAW,MAEXzV,EAAAA,EAAAC,cAAA,SAAA,CAAQe,MAAM,gBAAe,iBAC7BhB,EAAAA,EAAAC,cAAA,SAAA,CAAQe,MAAM,UAAS,UACvBhB,EAAAA,EAAAC,cAAA,SAAA,CAAQe,MAAM,QAAO,SAGN,SAAhBoU,EACCpV,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,QAAA,KAAO,SACPD,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,OAAOE,MAAOsU,EAAWrU,SAAWV,GAAMgV,EAAahV,EAAEW,OAAOF,SAC5EhB,EAAAA,EAAAC,cAAA,QAAA,KAAO,OACPD,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,OAAOE,MAAOwU,EAASvU,SAAWV,GAAMkV,EAAWlV,EAAEW,OAAOF,UAG1EhB,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,OACLE,MAAOkU,EACPjU,SAAWV,GAAM4U,EAAa5U,EAAEW,OAAOF,OACvCD,YAAY,aACZb,MAAO,CAAEmY,KAAM,EAAGta,MAAO,WAI7BiC,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQE,WAAY,SAAUe,IAAK,SAC1DqB,EAAAA,EAAAC,cAAA,QAAA,CAAOC,MAAO,CAAGxC,QAAS,OAAQE,WAAY,SAAUkB,SAAU,OAAQP,aAAc,IACtFyB,EAAAA,EAAAC,cAAA,QAAA,CACEa,KAAK,WACL8K,QAASsK,EACTjV,SAAWV,GAAM4V,EAAc5V,EAAEW,OAAO0K,SACxC1L,MAAO,CAAEoY,YAAa,SACtB,qBAKNtY,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,kBAAkBjI,QAASuV,EAAcxV,SAAUwU,GAClEA,EAAc,eAAiB,YAIpC5V,EAAAA,EAAAC,cAAA,KAAA,MAIuB,iBAAhBmV,GAAkCN,EAAQ3Q,OAAS,GAClDnE,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,KAAI,4BACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,kBACbtJ,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KACG4S,EAAiBpJ,IAAK8O,GACrBvY,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKiU,GAAMzF,EAAayF,IAAQA,IAEtCvY,EAAAA,EAAAC,cAAA,KAAA,KAAI,YAGRD,EAAAA,EAAAC,cAAA,QAAA,KACG6U,EAAQrL,IAAI,CAACyG,EAAKsI,IACjBxY,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKkU,GACN3F,EAAiBpJ,IAAI,CAAC8O,EAAKnI,KAAC,IAAAqI,EAAA,OAC3BzY,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAK8L,GACPpQ,EAAAA,EAAAC,cAAA,QAAA,CACAa,KAAMoL,EAAcrE,SAAS0Q,GAAO,OAAS,OAC7CvX,MACEkL,EAAcrE,SAAS0Q,IAAQrI,EAAIqI,GAC/B,MACE,IAAI,IAAAG,EACF,MAAMzG,EAAI,IAAIlK,KAAyB,KAAZ,QAAR2Q,EAAAxI,EAAIqI,UAAI,IAAAG,OAAA,EAARA,EAAUjU,UAAkByL,EAAIqI,IACnD,OAAOvQ,MAAMiK,EAAEC,WACX,GACA,IAAInK,KAAKkK,EAAEC,UAAoC,IAAxBD,EAAEE,qBACtBC,cACAnB,MAAM,KAAK,GAClB,MAAAoB,GACA,MAAO,KATX,GAYQ,QADJoG,EACJvI,EAAIqI,UAAI,IAAAE,EAAAA,EAAI,GAElBxX,SAAWV,IACT,MAAM6H,EAAU,IAAI0M,GACdhL,EAAMvJ,EAAEW,OAAOF,MACjBkL,EAAcrE,SAAS0Q,GACzBnQ,EAAQoQ,GAAUD,GAAOzO,EACrB,IAAI/B,KAAK+B,GACT,GAEJ1B,EAAQoQ,GAAUD,GAAOzO,EAE3BiL,EAAW3M,IAEbuQ,SAAU,CAAC,eAAgB,YAAa,YAAa,YAAa,qBAAqB9Q,SAAS0Q,GAChGrY,MAAO,CAAEnC,MAAO,cAKpBiC,EAAAA,EAAAC,cAAA,KAAA,KACED,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,OAAOjI,QAASA,IA9S/Bf,OAAAA,IACrB,IACE,MAAMiL,GAAEA,EAAEhG,aAAEA,GAAiC2K,EAAhB0I,EAAWC,OAAAA,EAAAA,EAAAA,CAAK3I,EAAG4I,GAK1CC,SAHuB1B,OAAAA,EAAAA,EAAAA,CAC3BH,OAAAA,EAAAA,EAAAA,CAAM5L,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAAkB+Z,OAAAA,EAAAA,EAAAA,CAAM,eAAgB,KAAM5R,GAAe4R,OAAAA,EAAAA,EAAAA,CAAM,YAAa,MAAM,MAE/E6B,KAAKC,KAAKhQ,GAAOA,EAAIsC,KAAOA,GACpD2N,EAAUnV,GAAoB,OAANgV,QAAM,IAANA,OAAM,EAANA,EAAQvR,SAAU,IAG1C2R,EAAY,GACZC,EAAY,GAClB,IAAK,MAAM9U,KAAOsU,EAAa,CAAA,IAAAS,EAAAC,EAC7B,GAAI,CAAC,KAAM,YAAa,YAAa,YAAa,cAAe,oBAAqB,aAAazR,SAASvD,GAC1G,SACF,MAAMiV,EAAyB,QAAnBF,EAAGT,EAAYtU,UAAI,IAAA+U,EAAAA,EAAI,GAC7BG,EAAqB,QAAfF,EAAGJ,EAAQ5U,UAAI,IAAAgV,EAAAA,EAAI,GAC/BH,EAAU7U,GAAOiV,EAEbxP,OAAOwP,GAAQvP,SAAWD,OAAOyP,GAAQxP,QAC3CoP,EAAU3B,KAAI,WAAAjT,OAAYF,IAI9B,OAAyB,IAArB8U,EAAUjV,YACZ6S,EAAAA,EAAMc,KAAK,2CAIb3O,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,iBACPuC,QAAO,kCAAA2D,OAAoC4U,EAAUK,KAAK,MAAK,KAC/DrQ,QAAS,CACP,CACEC,MAAO,MACPhI,QAASf,UACP,MAAMoZ,EAAe3V,EAAcgV,EAAOvR,cAEpC0B,OAAAA,EAAAA,EAAAA,CAAUD,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,gBAAiBmO,GAAGlD,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GACvCqR,GAAY,GAAA,CACfxO,WAAW,EACX6H,UAAW,IAAIhL,KACf4R,WAAY1P,EAAK1K,SAGnB,MAAMqa,EAAUvR,OAAAA,EAAAA,EAAAA,CAAAA,OAAAA,EAAAA,EAAAA,CAAA,GACX8Q,GAAS,GAAA,CACZ5T,aAAAA,EACAyF,UAAW,IAAIjD,KACfkD,UAAWhB,EAAK1K,MAChB2L,WAAW,EACXC,YAAa,IAAIpD,KACjBqD,kBAAmBgO,EAAUK,KAAK,cAG9BpO,OAAAA,EAAAA,EAAAA,CAAOC,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAAkBwc,GAC9CvE,EAAe,gBACfF,EAAapL,OAAOxE,IACpB0Q,GAAmB,GACnBE,GAAc,GACda,EAAAA,EAAM6C,QAAQ,0BAEdpI,WAAW,KACTmF,KACC,OAGP,CACEvN,MAAO,SAiCP,MAAO0O,GACPf,EAAAA,EAAMe,MAAM,yBAAsBA,EAAMlX,WAuMgBiZ,CAAa5J,IAAM,QAG3DlQ,EAAAA,EAAAC,cAAA,SAAA,CAAQqJ,UAAU,SAASjI,QAASA,IAtMnCf,OAAAA,IACnB,IACE,MAAMwW,EAAII,OAAAA,EAAAA,EAAAA,CAAM5L,OAAAA,EAAAA,EAAAA,CAAWlO,EAAI,iBAAkB+Z,OAAAA,EAAAA,EAAAA,CAAM,eAAgB,KAAM4C,IACvE3C,QAAiBC,OAAAA,EAAAA,EAAAA,CAAQP,GAC/B,OAAIM,EAASS,WACjBb,EAAAA,EAAMe,MAAM,8CAKR5O,OAAAA,EAAAA,aAAAA,CAAa,CACjB7K,MAAO,mBACPuC,QAAO,qCAAA2D,OAAuCuV,EAAmB,KACjE3Q,QAAS,CACP,CACEC,MAAO,MACPhI,QAASf,gBACD0Z,QAAQC,IAAI7C,EAAS4B,KAAKvP,IAAIa,GAAW4P,OAAAA,EAAAA,EAAAA,CAAUjR,OAAAA,EAAAA,EAAAA,CAAI7L,EAAI,gBAAiBkN,EAAQiB,OAC1FwJ,EAAW1D,GAAQA,EAAKkB,OAAO4H,GAAKA,EAAE5U,eAAiBwU,IACvD9E,EAAW5D,GAAQA,EAAKkB,OAAO4H,GAAKA,EAAE5U,eAAiBwU,IACvD/C,EAAAA,EAAM6C,QAAQ,kCAGlB,CACExQ,MAAO,SAWP,MAAOzI,GACPoW,EAAAA,EAAMe,MAAM,yBAAsBnX,EAAIC,WAkKoBuZ,CAAalK,EAAI3K,eAAe,iBAazFyP,EAAQ7Q,OAAS,GAChBnE,EAAAA,EAAAC,cAAAD,EAAAA,EAAA2L,SAAA,KACE3L,EAAAA,EAAAC,cAAA,KAAA,MACFD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,WAClFoC,EAAAA,EAAAC,cAAA,KAAA,KAAI,qCACJD,EAAAA,EAAAC,cAAA,MAAA,CAAKC,MAAO,CAAExC,QAAS,OAAQiB,IAAK,OAAQf,WAAY,WACxDoC,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAASwK,EAAiBnV,SAAWV,GAAM8V,EAAmB9V,EAAEW,OAAO0K,WAAY,oBAG5G5L,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAAS0K,EAAerV,SAAWV,GAAMgW,EAAiBhW,EAAEW,OAAO0K,WAAY,kBAGxG5L,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,CAAOa,KAAK,WAAW8K,QAAS4K,EAAYvV,SAAWV,GAAMkW,EAAclW,EAAEW,OAAO0K,WAAY,eAGlG5L,EAAAA,EAAAC,cAAA,SAAA,CAAQoB,QAjeoBgZ,KAC5B,GAAuB,IAAnBrF,EAAQ7Q,OAEV,YADA6S,EAAAA,EAAMc,KAAK,qCAKb,MAAMwC,EAAYzH,EAAiB5C,MAAM,EAAG,IACtCsK,EAAe1H,EAAiB5C,MAAM,GAAI,IAC1CuK,EAAa3H,EAAiB5C,MAAM,GAAI,IACxCwK,EAAU5H,EAAiB5C,MAAM,IAEjCyK,EAAe,IAChBJ,KACClE,EAAkBmE,EAAe,MACjCjE,EAAgBkE,EAAa,MAC7BhE,EAAaiE,EAAU,IAGvBE,EAAa3F,EAAQvL,IAAKyG,IAC9B,MAAM0K,EAAU,GAOhB,OANAF,EAAa/S,QAAS4Q,IACpB,MAAMzO,EAAMoG,EAAIqI,GAChBqC,EAAQrC,IAAU,OAAHzO,QAAG,IAAHA,OAAG,EAAHA,EAAKrF,SAChB,IAAIsD,KAAmB,IAAd+B,EAAIrF,SAAgBoW,iBAC1B,OAAH/Q,QAAG,IAAHA,EAAAA,EAAO,KAEN8Q,IAGHhJ,EAAYtC,EAAAA,EAAWuC,cAAc8I,GACrCtL,EAAWC,EAAAA,EAAWwC,WAC5BxC,EAAAA,EAAWyC,kBAAkB1C,EAAUuC,EAAW,mBAElD,MAAMkJ,EAAQ,kBAAAtW,QAAqB,IAAIuD,MAAOqK,cAAcnB,MAAM,KAAK,GAAE,SACzE3B,EAAAA,EAAeD,EAAUyL,IA8ba1Z,SAA6B,IAAnB4T,EAAQ7Q,OAAcmF,UAAU,iBAAgB,kCAM1FtJ,EAAAA,EAAAC,cAAA,MAAA,CAAKqJ,UAAU,kBACbtJ,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,QAAA,KACED,EAAAA,EAAAC,cAAA,KAAA,KACG4S,EAAiBpJ,IAAK8O,GACrBvY,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKiU,EAAKjP,UAAU,gBAAgBwJ,EAAayF,IAAQA,MAInEvY,EAAAA,EAAAC,cAAA,QAAA,KACG,IAAI+U,GACF0C,KAAK,CAACC,EAAGC,KAAM,IAAAmD,EAAAC,EACd,GAAIrD,EAAEzM,UAAW,OAAQ,EACzB,GAAI0M,EAAE1M,UAAW,OAAO,EACxB,MAAM+P,GAAmB,QAAXF,EAAApD,EAAE5E,iBAAS,IAAAgI,OAAA,EAAXA,EAAatW,UAAW,EAEtC,QADyB,QAAXuW,EAAApD,EAAE7E,iBAAS,IAAAiI,OAAA,EAAXA,EAAavW,UAAW,GACvBwW,IAEhBxR,IAAI,CAACyG,EAAKM,IACTxQ,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAKkM,GACNqC,EAAiBpJ,IAAI,CAAC8O,EAAKnI,KAAC,IAAA8K,EAAAC,EAAA,OAC3Bnb,EAAAA,EAAAC,cAAA,KAAA,CAAIqE,IAAK8L,GACc,kBAAbF,EAAIqI,KAA6B,QAAZ2C,EAAIhL,EAAIqI,UAAI,IAAA2C,OAAA,EAARA,EAAUzW,SAC1C,SAAR8T,EACG,IAAIxQ,KAAwB,IAAnBmI,EAAIqI,GAAK9T,SAAgB2W,mBAAmB,SACrD,IAAIrT,KAAwB,IAAnBmI,EAAIqI,GAAK9T,SAAgBoW,iBACtC9Q,OAAe,QAAToR,EAACjL,EAAIqI,UAAI,IAAA4C,EAAAA,EAAI,aAY5BnF,IAAoBJ,GAAkC,IAAnBd,EAAQ3Q,QAAmC,IAAnB6Q,EAAQ7Q,QAClEnE,EAAAA,EAAAC,cAAA,IAAA,CAAGC,MAAO,CAAE/B,UAAW,SAAUK,MAAO,OAAQY,UAAW,SAAU,0BAGvEY,EAAAA,EAAAC,cAACob,EAAAA,EAAc,CAACC,SAAS,eAAeC,UAAW,MACnDvb,EAAAA,EAAAC,cAAA,IAAA,CAAGC,MAAO,CAAE/B,UAAW,SAAUiB,UAAW,OAAQZ,MAAO,SAAU,mCA9OzDwB,EAAAA,EAAAC,cAACX,EAAI,OChbRkc,IAAAA,EAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAApb,EAAA,GAAAqb,KAAAD,EAAAE,KAAA,KAAA,KAAqBD,KAAK/W,IAAiD,IAAhDiX,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASrX,EACpEiX,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,EAAAA,EAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvc,EAAAA,EAAAC,cAACD,EAAAA,EAAMwc,WAAU,KACfxc,EAAAA,EAAAC,cAACyU,EAAG,QAOR8G\",\"sourcesContent\":[\"\\r\\n// // src/firebase.js\\r\\n\\r\\n// import { initializeApp } from \\\"firebase/app\\\";\\r\\n// import { getAuth } from \\\"firebase/auth\\\";\\r\\n// import { getFirestore } from \\\"firebase/firestore\\\";\\r\\n\\r\\n// // ✅ Your Firebase configuration\\r\\n// const firebaseConfig = {\\r\\n//   apiKey: \\\"AIzaSyCWw-I6mxAkJ1Q0Gt_wP1Bge-N0o-7MePU\\\",\\r\\n//   authDomain: \\\"sample-firebase-ai-app-c8afb.firebaseapp.com\\\",\\r\\n//   projectId: \\\"sample-firebase-ai-app-c8afb\\\",\\r\\n//   storageBucket: \\\"sample-firebase-ai-app-c8afb.appspot.com\\\", // 🔧 fixed from .app to .appspot.com\\r\\n//   messagingSenderId: \\\"221369775323\\\",\\r\\n//   appId: \\\"1:221369775323:web:c05d3eb4f88d1278d348fe\\\"\\r\\n// };\\r\\n\\r\\n// // ✅ Initialize Firebase app\\r\\n// const app = initializeApp(firebaseConfig);\\r\\n\\r\\n// // ✅ Export auth and firestore\\r\\n// export const auth = getAuth(app);\\r\\n// export const db = getFirestore(app);\\r\\n// src/firebase.js\\r\\n\\r\\nimport { initializeApp } from \\\"firebase/app\\\";\\r\\nimport { getAuth } from \\\"firebase/auth\\\";\\r\\nimport { getFirestore } from \\\"firebase/firestore\\\";\\r\\n\\r\\n// ✅ Your Firebase configuration (copied from Firebase Console)\\r\\nconst firebaseConfig = {\\r\\n  apiKey: \\\"AIzaSyAOcDXL1kQsi_MoLJ33GWn9-57qhQ0CWro\\\",\\r\\n  authDomain: \\\"fleet-9805b.firebaseapp.com\\\",\\r\\n  projectId: \\\"fleet-9805b\\\",\\r\\n  storageBucket: \\\"fleet-9805b.appspot.com\\\", // ✅ fixed: was \\\"firebasestorage.app\\\", should be \\\"appspot.com\\\"\\r\\n  messagingSenderId: \\\"682529821046\\\",\\r\\n  appId: \\\"1:682529821046:web:cbb00f5dcbac062304aa57\\\",\\r\\n  measurementId: \\\"G-T4PZQZGWZ9\\\"\\r\\n};\\r\\n\\r\\n// ✅ Initialize Firebase\\r\\nconst app = initializeApp(firebaseConfig);\\r\\n\\r\\n// ✅ Export Firebase services\\r\\nexport const auth = getAuth(app);\\r\\nexport const db = getFirestore(app);\",\"import React, { useState } from \\\"react\\\";\\r\\nimport { auth } from \\\"../firebase\\\";\\r\\nimport {\\r\\n  createUserWithEmailAndPassword,\\r\\n  signInWithEmailAndPassword\\r\\n} from \\\"firebase/auth\\\";\\r\\n\\r\\nconst Auth = () => {\\r\\n  const [email, setEmail] = useState(\\\"\\\");\\r\\n  const [password, setPassword] = useState(\\\"\\\");\\r\\n  const [isLogin, setIsLogin] = useState(true);\\r\\n  const [loading, setLoading] = useState(false);\\r\\n\\r\\n  const handleSubmit = async (e) => {\\r\\n    e.preventDefault();\\r\\n    setLoading(true);\\r\\n    try {\\r\\n      if (isLogin) {\\r\\n        await signInWithEmailAndPassword(auth, email, password);\\r\\n        alert(\\\"✅ Login successful!\\\");\\r\\n      } else {\\r\\n        await createUserWithEmailAndPassword(auth, email, password);\\r\\n        alert(\\\"✅ Account created successfully!\\\");\\r\\n      }\\r\\n    } catch (err) {\\r\\n      alert(\\\"❌ \\\" + err.message);\\r\\n    } finally {\\r\\n      setLoading(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={styles.container}>\\r\\n      <div style={styles.card}>\\r\\n        <img src=\\\"/logo.png\\\" alt=\\\"Logo\\\" style={styles.logo} />\\r\\n        <h2 style={styles.title}>{isLogin ? \\\"Login\\\" : \\\"Sign Up\\\"}</h2>\\r\\n        <form onSubmit={handleSubmit} style={styles.form}>\\r\\n          <input\\r\\n            type=\\\"email\\\"\\r\\n            placeholder=\\\"Email Address\\\"\\r\\n            value={email}\\r\\n            onChange={(e) => setEmail(e.target.value)}\\r\\n            required\\r\\n            style={styles.input}\\r\\n          />\\r\\n          <input\\r\\n            type=\\\"password\\\"\\r\\n            placeholder=\\\"Password\\\"\\r\\n            value={password}\\r\\n            onChange={(e) => setPassword(e.target.value)}\\r\\n            required\\r\\n            style={styles.input}\\r\\n          />\\r\\n          <button type=\\\"submit\\\" disabled={loading} style={styles.submitBtn}>\\r\\n            {loading ? \\\"Please wait...\\\" : isLogin ? \\\"Login\\\" : \\\"Sign Up\\\"}\\r\\n          </button>\\r\\n        </form>\\r\\n        <button onClick={() => setIsLogin(!isLogin)} style={styles.toggleBtn}>\\r\\n          {isLogin\\r\\n            ? \\\"New here? Create an account\\\"\\r\\n            : \\\"Already registered? Login\\\"}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nconst styles = {\\r\\n  container: {\\r\\n    minHeight: \\\"100vh\\\",\\r\\n    background: \\\"linear-gradient(135deg, #1c2541, #3a506b)\\\",\\r\\n    display: \\\"flex\\\",\\r\\n    justifyContent: \\\"center\\\",\\r\\n    alignItems: \\\"center\\\",\\r\\n    padding: \\\"30px\\\"\\r\\n  },\\r\\n  card: {\\r\\n    width: \\\"100%\\\",\\r\\n    maxWidth: \\\"400px\\\",\\r\\n    background: \\\"#0b132b\\\",\\r\\n    padding: \\\"40px 30px\\\",\\r\\n    borderRadius: \\\"16px\\\",\\r\\n    boxShadow: \\\"0 0 25px rgba(0,0,0,0.3)\\\",\\r\\n    textAlign: \\\"center\\\"\\r\\n  },\\r\\n  logo: {\\r\\n    width: \\\"80%\\\",     // ✅ fit horizontally without overflowing\\r\\n    maxWidth: \\\"280px\\\",\\r\\n    margin: \\\"0 auto 20px\\\",\\r\\n    display: \\\"block\\\"\\r\\n  },\\r\\n  title: {\\r\\n    marginBottom: \\\"20px\\\",\\r\\n    color: \\\"#ffffff\\\"\\r\\n  },\\r\\n  form: {\\r\\n    display: \\\"flex\\\",\\r\\n    flexDirection: \\\"column\\\",\\r\\n    gap: \\\"15px\\\"\\r\\n  },\\r\\n  input: {\\r\\n    padding: \\\"12px\\\",\\r\\n    borderRadius: \\\"8px\\\",\\r\\n    border: \\\"1px solid #ccc\\\",\\r\\n    fontSize: \\\"16px\\\",\\r\\n    outline: \\\"none\\\"\\r\\n  },\\r\\n  submitBtn: {\\r\\n    padding: \\\"12px\\\",\\r\\n    backgroundColor: \\\"#1c7ed6\\\",\\r\\n    color: \\\"#fff\\\",\\r\\n    border: \\\"none\\\",\\r\\n    borderRadius: \\\"8px\\\",\\r\\n    fontSize: \\\"16px\\\",\\r\\n    cursor: \\\"pointer\\\"\\r\\n  },\\r\\n  toggleBtn: {\\r\\n    marginTop: \\\"20px\\\",\\r\\n    background: \\\"none\\\",\\r\\n    border: \\\"none\\\",\\r\\n    color: \\\"#74c0fc\\\",\\r\\n    cursor: \\\"pointer\\\",\\r\\n    fontSize: \\\"14px\\\",\\r\\n    textDecoration: \\\"underline\\\"\\r\\n  }\\r\\n};\\r\\n\\r\\nexport default Auth;\\r\\n\",\"import React, { useState, useEffect } from \\\"react\\\";\\r\\nimport {\\r\\n  collection,\\r\\n  addDoc,\\r\\n  updateDoc,\\r\\n  doc,\\r\\n  runTransaction,\\r\\n  Timestamp,\\r\\n  getDoc\\r\\n} from \\\"firebase/firestore\\\";\\r\\nimport { db, auth } from \\\"../firebase\\\";\\r\\nimport 'react-confirm-alert/src/react-confirm-alert.css';\\r\\nimport { confirmAlert } from 'react-confirm-alert';\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nconst fixedFieldsInitial = {\\r\\n  date: \\\"\\\",\\r\\n  deliveryDate: \\\"\\\",\\r\\n  months: \\\"\\\",\\r\\n  origin: \\\"\\\",\\r\\n  destination: \\\"\\\",\\r\\n  customer: \\\"\\\",\\r\\n  customerType: \\\"\\\",\\r\\n  vehicleNo: \\\"\\\",\\r\\n  vendor: \\\"\\\",\\r\\n  salesRate: \\\"\\\",\\r\\n  buyRate: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst customerFields = {\\r\\n  toBeAdvance: \\\"\\\",\\r\\n  advanceReceived: \\\"\\\",\\r\\n  advDeviation: \\\"\\\",\\r\\n  advanceRecDate: \\\"\\\",\\r\\n  validatedAdvanceUTRDescription: \\\"\\\",\\r\\n  validatedAdvanceAmount: \\\"\\\",\\r\\n  balance: \\\"\\\",\\r\\n  processingCharges: \\\"\\\",\\r\\n  inwardMisCharges: \\\"\\\",\\r\\n  outwardMisCharges: \\\"\\\",\\r\\n  balanceReceived: \\\"\\\",\\r\\n  remainingBalance: \\\"\\\",\\r\\n  balanceRecDate: \\\"\\\",\\r\\n  validatedBalanceUTR: \\\"\\\",\\r\\n  validatedBalanceUTRAmount: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst vendorFields = {\\r\\n  vendorOutwardPayment: \\\"\\\",\\r\\n  paidAmount: \\\"\\\",\\r\\n  balancePending: \\\"\\\",\\r\\n  vendorRemark: \\\"\\\"\\r\\n};\\r\\n\\r\\nconst podFields = {\\r\\n  podVendorDate: \\\"\\\",\\r\\n  podSendToCustomerDate: \\\"\\\",\\r\\n  docNo: \\\"\\\",\\r\\n  podCustomerRec: \\\"\\\",\\r\\n  today: \\\"\\\",\\r\\n  balanceOverdueDays: \\\"\\\",\\r\\n  toBeCollectedAmount: \\\"\\\"\\r\\n};\\r\\nconst flattenObject = (obj, prefix = \\\"\\\") => {\\r\\n  let result = {};\\r\\n  for (const key in obj) {\\r\\n    const value = obj[key];\\r\\n    const fullKey = prefix ? `${prefix}.${key}` : key;\\r\\n    if (value && typeof value === \\\"object\\\" && !value.seconds) {\\r\\n      Object.assign(result, flattenObject(value, fullKey));\\r\\n    } else {\\r\\n      result[fullKey] = value;\\r\\n    }\\r\\n  }\\r\\n  return result;\\r\\n};\\r\\n\\r\\nconst ManualEntryForm = ({ onAddRow }) => {\\r\\n  const [fixedFields, setFixedFields] = useState(fixedFieldsInitial);\\r\\n  const [customerData, setCustomerData] = useState(customerFields);\\r\\n  const [vendorData, setVendorData] = useState(vendorFields);\\r\\n  const [podData, setPodData] = useState(podFields);\\r\\n  const [indentNumber, setIndentNumber] = useState(null);\\r\\n  const [docId, setDocId] = useState(null);\\r\\n\\r\\n  const [showCustomer, setShowCustomer] = useState(false);\\r\\n  const [showVendor, setShowVendor] = useState(false);\\r\\n  const [showPod, setShowPod] = useState(false);\\r\\n\\r\\n  const [customerSaved, setCustomerSaved] = useState(false);\\r\\n  const [vendorSaved, setVendorSaved] = useState(false);\\r\\n  const [podSaved, setPodSaved] = useState(false);\\r\\n\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    const storedIndentNo = localStorage.getItem(\\\"inProgressIndentNumber\\\");\\r\\n    const storedFixed = localStorage.getItem(\\\"fixedFields\\\");\\r\\n    const storedCustomer = localStorage.getItem(\\\"customerFields\\\");\\r\\n    const storedVendor = localStorage.getItem(\\\"vendorFields\\\");\\r\\n    const storedPod = localStorage.getItem(\\\"podFields\\\");\\r\\n    const storedDocId = localStorage.getItem(\\\"docId\\\");\\r\\n    \\r\\n    \\r\\n    if (storedDocId) setDocId(storedDocId);\\r\\n    if (storedIndentNo) setIndentNumber(Number(storedIndentNo));\\r\\n    if (storedFixed) setFixedFields(JSON.parse(storedFixed));\\r\\n    if (storedCustomer) setCustomerData(JSON.parse(storedCustomer));\\r\\n    if (storedVendor) setVendorData(JSON.parse(storedVendor));\\r\\n    if (storedPod) setPodData(JSON.parse(storedPod));\\r\\n  }, []);\\r\\n\\r\\n  const formatLabel = (key) => {\\r\\n  if (key === \\\"date\\\") return \\\"Placement Date\\\";\\r\\n  return key\\r\\n    .replace(/([a-z])([A-Z])/g, \\\"$1 $2\\\")\\r\\n    .replace(/_/g, \\\" \\\")\\r\\n    .replace(/^./, (str) => str.toUpperCase());\\r\\n};\\r\\n\\r\\n  const resetAll = () => {\\r\\n  setFixedFields(fixedFieldsInitial);\\r\\n  setCustomerData(customerFields);\\r\\n  setVendorData(vendorFields);\\r\\n  setPodData(podFields);\\r\\n  setIndentNumber(null);\\r\\n  setDocId(null);\\r\\n  setShowCustomer(false);\\r\\n  setShowVendor(false);\\r\\n  setShowPod(false);\\r\\n  setCustomerSaved(false);\\r\\n  setVendorSaved(false);\\r\\n  setPodSaved(false);\\r\\n\\r\\n  localStorage.removeItem(\\\"fixedFields\\\");\\r\\n  localStorage.removeItem(\\\"customerFields\\\");\\r\\n  localStorage.removeItem(\\\"vendorFields\\\");\\r\\n  localStorage.removeItem(\\\"podFields\\\");\\r\\n  localStorage.removeItem(\\\"inProgressIndentNumber\\\");\\r\\n  localStorage.removeItem(\\\"docId\\\");\\r\\n};\\r\\n\\r\\n  const convertDateFields = (data, allowedKeys = []) => {\\r\\n    const result = {};\\r\\n    Object.entries(data).forEach(([key, value]) => {\\r\\n      if (allowedKeys.includes(key) && value) {\\r\\n        const parsed = new Date(value);\\r\\n        result[key] = isNaN(parsed) ? value : Timestamp.fromDate(parsed);\\r\\n      } else {\\r\\n        result[key] = value;\\r\\n      }\\r\\n    });\\r\\n    return result;\\r\\n  };\\r\\n\\r\\n  const handleFixedChange = (e) => {\\r\\n  const updated = { ...fixedFields, [e.target.name]: e.target.value };\\r\\n  setFixedFields(updated);\\r\\n  localStorage.setItem(\\\"fixedFields\\\", JSON.stringify(updated));  // ✅ Save\\r\\n};\\r\\n\\r\\n\\r\\n  const handleSectionChange = (e, section) => {\\r\\n  const { name, value } = e.target;\\r\\n  if (section === \\\"customer\\\") {\\r\\n    const updated = { ...customerData, [name]: value };\\r\\n    setCustomerData(updated);\\r\\n    localStorage.setItem(\\\"customerFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n  if (section === \\\"vendor\\\") {\\r\\n    const updated = { ...vendorData, [name]: value };\\r\\n    setVendorData(updated);\\r\\n    localStorage.setItem(\\\"vendorFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n  if (section === \\\"pod\\\") {\\r\\n    const updated = { ...podData, [name]: value };\\r\\n    setPodData(updated);\\r\\n    localStorage.setItem(\\\"podFields\\\", JSON.stringify(updated));\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n  const getNextIndentNumber = async () => {\\r\\n  const counterRef = doc(db, \\\"Counters\\\", \\\"fleet_counter\\\");\\r\\n  const newIndentNo = await runTransaction(db, async (transaction) => {\\r\\n    const docSnap = await transaction.get(counterRef);\\r\\n    if (!docSnap.exists()) throw new Error(\\\"Counter doc missing\\\");\\r\\n    const current = docSnap.data().nextFleetNo || 1;\\r\\n    transaction.update(counterRef, { nextFleetNo: current + 1 });\\r\\n    return current;\\r\\n  });\\r\\n  return newIndentNo;\\r\\n};\\r\\n\\r\\n\\r\\n  const handleFixedSave = async () => {\\r\\n    const hasAnyValue = Object.values(fixedFields).some(\\r\\n  val => String(val ?? \\\"\\\").trim() !== \\\"\\\"\\r\\n);\\r\\n\\r\\nif (!hasAnyValue) {\\r\\n  confirmAlert({\\r\\n    title: 'Validation Error',\\r\\n    message: '⚠️ Please fill at least one field before continuing.',\\r\\n    buttons: [\\r\\n      {\\r\\n        label: 'OK'\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n    try {\\r\\n      const user = auth.currentUser;\\r\\n      const indentNo  = await getNextIndentNumber();\\r\\n      const enrichedData = {\\r\\n        indentNumber: indentNo,\\r\\n        ...convertDateFields(fixedFields, [\\\"date\\\",\\\"deliveryDate\\\"]),\\r\\n        createdAt: new Date(),\\r\\n        createdBy: user?.email || \\\"anonymous\\\",\\r\\n        isCurrent: true,\\r\\n        versionDate: new Date(),\\r\\n        updateDescription: \\\"\\\"\\r\\n      };\\r\\n\\r\\n      const docRef = await addDoc(collection(db, \\\"fleet_records\\\"), enrichedData);\\r\\n      setIndentNumber(indentNo);\\r\\n      setDocId(docRef.id);\\r\\n      localStorage.setItem(\\\"docId\\\", docRef.id);\\r\\n      localStorage.setItem(\\\"inProgressIndentNumber\\\", indentNo);\\r\\n      await navigator.clipboard.writeText(String(indentNo));\\r\\n      confirmAlert({\\r\\n  title: 'Success',\\r\\n  message: `✅ Fixed fields saved. Indent Number copied: ${indentNo}`,\\r\\n  buttons: [\\r\\n    { label: 'OK' }\\r\\n  ]\\r\\n});\\r\\n\\r\\n    } catch (err) {\\r\\n      confirmAlert({\\r\\n  title: 'Error',\\r\\n  message: \\\"❌ Error saving fixed fields: \\\" + err.message,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const saveSection = async (sectionName, sectionData, dateFields = []) => {\\r\\n    if (!docId) {\\r\\n  confirmAlert({\\r\\n    title: 'Missing Info',\\r\\n    message: '⚠️ Save fixed fields first.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n    try {\\r\\n      const docRef = doc(db, \\\"fleet_records\\\", docId);\\r\\n      await updateDoc(docRef, {\\r\\n        [`${sectionName}`]: convertDateFields(sectionData, dateFields)\\r\\n      });\\r\\n      if (sectionName === \\\"customerMaster\\\") setCustomerSaved(true);\\r\\n      if (sectionName === \\\"vendorMaster\\\") setVendorSaved(true);\\r\\n      if (sectionName === \\\"podMaster\\\") setPodSaved(true);\\r\\n      confirmAlert({\\r\\n  title: 'Saved',\\r\\n  message: `✅ ${sectionName} saved.`,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    } catch (err) {\\r\\n      confirmAlert({\\r\\n  title: 'Error',\\r\\n  message: \\\"❌ Save error: \\\" + err.message,\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n    }\\r\\n  };\\r\\n\\r\\n const handleFinalSubmit = async () => {\\r\\n  if (!docId) {\\r\\n  confirmAlert({\\r\\n    title: 'Error',\\r\\n    message: 'Fleet data not ready.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n  // Save any unsaved sections first\\r\\n  if (showCustomer && !customerSaved) {\\r\\n    await saveSection(\\\"customerMaster\\\", customerData, [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"]);\\r\\n  }\\r\\n  if (showVendor && !vendorSaved) {\\r\\n    await saveSection(\\\"vendorMaster\\\", vendorData);\\r\\n  }\\r\\n  if (showPod && !podSaved) {\\r\\n    await saveSection(\\\"podMaster\\\", podData, [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"]);\\r\\n  }\\r\\n\\r\\n  const docSnap = await getDoc(doc(db, \\\"fleet_records\\\", docId));\\r\\n  if (!docSnap.exists()) {\\r\\n  confirmAlert({\\r\\n    title: 'Error',\\r\\n    message: 'Data not found.',\\r\\n    buttons: [{ label: 'OK' }]\\r\\n  });\\r\\n  return;\\r\\n}\\r\\n\\r\\n  const data = { id: docSnap.id, ...docSnap.data() };\\r\\n  onAddRow(flattenObject(data), true);\\r\\n  localStorage.setItem(\\\"latestSearchField\\\", \\\"indentNumber\\\");\\r\\n  localStorage.setItem(\\\"latestSearchKey\\\", String(data.indentNumber));\\r\\n\\r\\n\\r\\n\\r\\n  // Reset all state\\r\\n  setFixedFields(fixedFieldsInitial);\\r\\n  setCustomerData(customerFields);\\r\\n  setVendorData(vendorFields);\\r\\n  setPodData(podFields);\\r\\n  setIndentNumber(null);\\r\\n  setDocId(null);\\r\\n  setShowCustomer(false);\\r\\n  setShowVendor(false);\\r\\n  setShowPod(false);\\r\\n  setCustomerSaved(false);\\r\\n  setVendorSaved(false);\\r\\n  setPodSaved(false);\\r\\n\\r\\n  localStorage.removeItem(\\\"fixedFields\\\");\\r\\n  localStorage.removeItem(\\\"customerFields\\\");\\r\\n  localStorage.removeItem(\\\"vendorFields\\\");\\r\\n  localStorage.removeItem(\\\"podFields\\\");\\r\\n  localStorage.removeItem(\\\"inProgressIndentNumber\\\");\\r\\n  localStorage.removeItem(\\\"docId\\\");\\r\\n\\r\\n\\r\\n\\r\\n  confirmAlert({\\r\\n  title: 'Done',\\r\\n  message: '✅ Record submitted and ready in editable table.',\\r\\n  buttons: [{ label: 'OK' }]\\r\\n});\\r\\n\\r\\n};\\r\\n\\r\\nconst handleNewRecord = () => {\\r\\n  confirmAlert({\\r\\n    title: 'Confirm New Entry',\\r\\n    message: 'Start a new entry? Unsaved data will be lost.',\\r\\n    buttons: [\\r\\n      {\\r\\n        label: 'Yes',\\r\\n        onClick: () => {\\r\\n          resetAll();\\r\\n          confirmAlert({\\r\\n            title: 'Ready',\\r\\n            message: '🆕 Ready to start a new record.',\\r\\n            buttons: [{ label: 'OK' }]\\r\\n          });\\r\\n        }\\r\\n      },\\r\\n      {\\r\\n        label: 'No'\\r\\n      }\\r\\n    ]\\r\\n  });\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div style={{ marginTop: 20 }}>\\r\\n      <h4>Step 1: Fixed Fields</h4>\\r\\n<div className=\\\"card p-4 mb-4\\\">\\r\\n  <div\\r\\n    className=\\\"fixed-fields-grid\\\"\\r\\n    style={{\\r\\n      display: \\\"grid\\\",\\r\\n      gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n      gap: \\\"16px\\\",\\r\\n    }}\\r\\n  >\\r\\n    {Object.keys(fixedFieldsInitial).map((key) => {\\r\\n      const isDate = key.toLowerCase().includes(\\\"date\\\");\\r\\n      const label =\\r\\n        isDate\\r\\n          ? `${key} (dd/mm/yyyy)`\\r\\n          : key === \\\"months\\\"\\r\\n          ? \\\"months (e.g. Jul-2025)\\\"\\r\\n          : key;\\r\\n\\r\\n      return (\\r\\n        <div key={key}>\\r\\n          <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n{(key === \\\"date\\\" || key === \\\"deliveryDate\\\") ? (\\r\\n  <input\\r\\n    type=\\\"date\\\"\\r\\n    name={key}\\r\\n    className=\\\"form-control\\\"\\r\\n    value={fixedFields[key]}\\r\\n    onChange={handleFixedChange}\\r\\n    disabled={!!indentNumber}\\r\\n  />\\r\\n) : (\\r\\n  <input\\r\\n    name={key}\\r\\n    className=\\\"form-control\\\"\\r\\n    placeholder=\\\"\\\"\\r\\n    value={fixedFields[key]}\\r\\n    onChange={handleFixedChange}\\r\\n    disabled={!!indentNumber}\\r\\n    type=\\\"text\\\"\\r\\n  />\\r\\n)}\\r\\n\\r\\n\\r\\n        </div>\\r\\n      );\\r\\n    })}\\r\\n  </div>\\r\\n\\r\\n  {!indentNumber && (\\r\\n  <div style={{ marginTop: \\\"20px\\\", width: \\\"100%\\\", textAlign: \\\"right\\\" }}>\\r\\n    <button className=\\\"btn btn-primary\\\" onClick={handleFixedSave}>\\r\\n      💾 Save & Continue\\r\\n    </button>\\r\\n  </div>\\r\\n)}\\r\\n\\r\\n \\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n      {indentNumber  && (\\r\\n        <>\\r\\n          <p style={{ color: \\\"green\\\" }}>✅ Saved. Indent No: {indentNumber}</p>\\r\\n\\r\\n          <h4>Step 2: Select Master Sections</h4>\\r\\n          <label>\\r\\n            <input type=\\\"checkbox\\\" checked={showCustomer} onChange={() => setShowCustomer(!showCustomer)} disabled={customerSaved} /> Customer Master\\r\\n          </label>\\r\\n          <label style={{ marginLeft: 15 }}>\\r\\n            <input type=\\\"checkbox\\\" checked={showVendor} onChange={() => setShowVendor(!showVendor)} disabled={vendorSaved} /> Vendor Master\\r\\n          </label>\\r\\n          <label style={{ marginLeft: 15 }}>\\r\\n            <input type=\\\"checkbox\\\" checked={showPod} onChange={() => setShowPod(!showPod)} disabled={podSaved} /> POD Master\\r\\n          </label>\\r\\n\\r\\n          {showCustomer && (\\r\\n  <>\\r\\n    <h5>Customer Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(customerFields).map((key) => {\\r\\n          const isDate = [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"].includes(key);\\r\\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n  value={customerData[key]}\\r\\n  onChange={(e) => handleSectionChange(e, \\\"customer\\\")}\\r\\n  disabled={customerSaved}\\r\\n  type={isDate ? \\\"date\\\" : \\\"text\\\"}\\r\\n/>\\r\\n\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!customerSaved && (\\r\\n  <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n    <button\\r\\n      className=\\\"btn btn-primary\\\"\\r\\n      onClick={() => saveSection(\\\"customerMaster\\\", customerData, [\\\"advanceRecDate\\\", \\\"balanceRecDate\\\"])}\\r\\n    >\\r\\n      Save Customer\\r\\n    </button>\\r\\n  </div>\\r\\n)}\\r\\n\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          {showVendor && (\\r\\n  <>\\r\\n    <h5>Vendor Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(vendorFields).map((key) => {\\r\\n          const label = key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n</label>\\r\\n<input\\r\\n  name={key}\\r\\n  className=\\\"form-control\\\"\\r\\n  placeholder=\\\"\\\"\\r\\n                value={vendorData[key]}\\r\\n                onChange={(e) => handleSectionChange(e, \\\"vendor\\\")}\\r\\n                disabled={vendorSaved}\\r\\n                type=\\\"text\\\"\\r\\n              />\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!vendorSaved && (\\r\\n        <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n        <button className=\\\"btn btn-primary mt-3\\\" onClick={() => saveSection(\\\"vendorMaster\\\", vendorData)}>\\r\\n          Save Vendor\\r\\n        </button>\\r\\n        </div>\\r\\n      )}\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          {showPod && (\\r\\n  <>\\r\\n    <h5>POD Master</h5>\\r\\n    <div className=\\\"card p-3 mb-3\\\">\\r\\n      <div\\r\\n        style={{\\r\\n          display: \\\"grid\\\",\\r\\n          gridTemplateColumns: \\\"repeat(5, 1fr)\\\",\\r\\n          gap: \\\"16px\\\",\\r\\n        }}\\r\\n      >\\r\\n        {Object.keys(podFields).map((key) => {\\r\\n          const isDate = [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"].includes(key);\\r\\n          const label = isDate ? `${key} (dd/mm/yyyy)` : key;\\r\\n          return (\\r\\n            <div key={key}>\\r\\n              <label className=\\\"form-label\\\" style={{ fontWeight: \\\"500\\\" }}>\\r\\n  {formatLabel(key)}\\r\\n            </label>\\r\\n              <input\\r\\n                name={key}\\r\\n                className=\\\"form-control\\\"\\r\\n                placeholder=\\\"\\\"\\r\\n                value={podData[key]}\\r\\n                onChange={(e) => handleSectionChange(e, \\\"pod\\\")}\\r\\n                disabled={podSaved}\\r\\n                type={isDate ? \\\"date\\\" : \\\"text\\\"}\\r\\n              />\\r\\n\\r\\n            </div>\\r\\n          );\\r\\n        })}\\r\\n      </div>\\r\\n      {!podSaved && (\\r\\n        <div style={{ textAlign: \\\"right\\\", marginTop: \\\"16px\\\" }}>\\r\\n        <button className=\\\"btn btn-primary mt-3\\\" onClick={() => saveSection(\\\"podMaster\\\", podData, [\\\"podVendorDate\\\", \\\"podSendToCustomerDate\\\", \\\"podCustomerRec\\\", \\\"today\\\"])}>\\r\\n          Save POD\\r\\n        </button>\\r\\n        </div>\\r\\n      )}\\r\\n    </div>\\r\\n  </>\\r\\n)}\\r\\n\\r\\n\\r\\n          <br />\\r\\n          <div style={{ marginTop: 10, width: \\\"100%\\\", textAlign: \\\"right\\\" }}>\\r\\n  <button onClick={handleFinalSubmit} className=\\\"btn btn-success me-2\\\">\\r\\n    ✅ Submit Record\\r\\n  </button>\\r\\n  <button onClick={handleNewRecord} className=\\\"btn btn-primary\\\">\\r\\n    ➕ Add New Record\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n        </>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default ManualEntryForm;\\r\\n\",\"import React, { useState } from \\\"react\\\";\\r\\nimport { addDoc, collection, doc, runTransaction } from \\\"firebase/firestore\\\";\\r\\nimport * as XLSX from \\\"xlsx\\\";\\r\\nimport { db, auth } from \\\"../firebase\\\";\\r\\n\\r\\nconst dateFieldKeys = [\\r\\n  \\\"placementDate\\\",\\r\\n  \\\"deliveryDate\\\",\\r\\n  \\\"customerMaster.advanceRecDate\\\",\\r\\n  \\\"customerMaster.balanceRecDate\\\",\\r\\n  \\\"podMaster.podVendorDate\\\",\\r\\n  \\\"podMaster.podSendToCustomerDate\\\",\\r\\n  \\\"podMaster.podCustomerRec\\\",\\r\\n  \\\"podMaster.today\\\"\\r\\n];\\r\\n\\r\\n\\r\\nconst labelToKey = {\\r\\n  \\\"Placement Date\\\": \\\"placementDate\\\",\\r\\n  \\\"Delivery Date\\\": \\\"deliveryDate\\\",\\r\\n  \\\"Month\\\": \\\"months\\\",\\r\\n  \\\"Origin\\\": \\\"origin\\\",\\r\\n  \\\"Destination\\\": \\\"destination\\\",\\r\\n  \\\"Customer\\\": \\\"customer\\\",\\r\\n  \\\"Customer Type\\\": \\\"customerType\\\",\\r\\n  \\\"Vehicle Number\\\": \\\"vehicleNo\\\",\\r\\n  \\\"Vendor\\\": \\\"vendor\\\",\\r\\n  \\\"Sales Rate\\\": \\\"salesRate\\\",\\r\\n  \\\"Buy Rate\\\": \\\"buyRate\\\",\\r\\n  // Customer Master\\r\\n  \\\"Customer -> To be Advance (Sales)\\\": \\\"customerMaster.toBeAdvance\\\",\\r\\n  \\\"Customer -> Advance / Payment Received\\\": \\\"customerMaster.advanceReceived\\\",\\r\\n  \\\"Customer -> Adv Deviation (as on Date)\\\": \\\"customerMaster.advDeviation\\\",\\r\\n  \\\"Customer -> Advance Rec Date\\\": \\\"customerMaster.advanceRecDate\\\",\\r\\n  \\\"Customer -> Validated-Advance UTR Description\\\": \\\"customerMaster.validatedAdvanceUTRDescription\\\",\\r\\n  \\\"Customer -> Validated UTR - Advance Amount\\\": \\\"customerMaster.validatedAdvanceAmount\\\",\\r\\n  \\\"Customer -> Balance\\\": \\\"customerMaster.balance\\\",\\r\\n  \\\"Customer -> Processing Charges\\\": \\\"customerMaster.processingCharges\\\",\\r\\n  \\\"Customer -> Inward-Mis Charges\\\": \\\"customerMaster.inwardMisCharges\\\",\\r\\n  \\\"Customer -> Outward-Mis Charges\\\": \\\"customerMaster.outwardMisCharges\\\",\\r\\n  \\\"Customer -> Bal Received\\\": \\\"customerMaster.balanceReceived\\\",\\r\\n  \\\"Customer -> Remaining Balance\\\": \\\"customerMaster.remainingBalance\\\",\\r\\n  \\\"Customer -> Balance Rec Date\\\": \\\"customerMaster.balanceRecDate\\\",\\r\\n  \\\"Customer -> Validated-Balance UTR\\\": \\\"customerMaster.validatedBalanceUTR\\\",\\r\\n  \\\"Customer -> Validate Balance UTR-Amount\\\": \\\"customerMaster.validatedBalanceUTRAmount\\\",\\r\\n  // Vendor Master\\r\\n  \\\"Vendor -> Outward Payment\\\": \\\"vendorMaster.vendorOutwardPayment\\\",\\r\\n  \\\"Vendor -> Paid Amount\\\": \\\"vendorMaster.paidAmount\\\",\\r\\n  \\\"Vendor -> Balance Pending\\\": \\\"vendorMaster.balancePending\\\",\\r\\n  \\\"Vendor -> Vendor Remark\\\": \\\"vendorMaster.vendorRemark\\\",\\r\\n  // POD Master\\r\\n  \\\"POD -> POD Vendor-Date\\\": \\\"podMaster.podVendorDate\\\",\\r\\n  \\\"POD -> POD-Send to Customer Date\\\": \\\"podMaster.podSendToCustomerDate\\\",\\r\\n  \\\"POD -> Doc No\\\": \\\"podMaster.docNo\\\",\\r\\n  \\\"POD -> POD-Customer Rec\\\": \\\"podMaster.podCustomerRec\\\",\\r\\n  \\\"POD -> Today\\\": \\\"podMaster.today\\\",\\r\\n  \\\"POD -> Balance Overdue Days\\\": \\\"podMaster.balanceOverdueDays\\\",\\r\\n  \\\"POD -> To be Collected Amount\\\": \\\"podMaster.toBeCollectedAmount\\\"\\r\\n};\\r\\n\\r\\nconst UploadForm = () => {\\r\\n  const [previewData, setPreviewData] = useState([]);\\r\\n  const [statusMap, setStatusMap] = useState({});\\r\\n  const [fleetNumbers, setFleetNumbers] = useState({});\\r\\n\\r\\n  const generateTemplate = () => {\\r\\n  const headers = Object.keys(labelToKey);\\r\\n  const sampleRow = {};\\r\\n  headers.forEach(header => {\\r\\n    const key = labelToKey[header];\\r\\n    if (dateFieldKeys.includes(key)) {\\r\\n      sampleRow[header] = \\\"01-01-2025\\\"; // DD-MM-YYYY\\r\\n    } else if (header.toLowerCase() === \\\"month\\\" || header.toLowerCase().includes(\\\"month\\\")) {\\r\\n      sampleRow[header] = \\\"July-2025\\\"; // Month format\\r\\n    } else if (header.toLowerCase().includes(\\\"rate\\\") || header.toLowerCase().includes(\\\"amount\\\")) {\\r\\n      sampleRow[header] = \\\"10000\\\";\\r\\n    } else if (header.toLowerCase().includes(\\\"number\\\") || header.toLowerCase().includes(\\\"no\\\")) {\\r\\n      sampleRow[header] = \\\"ABC123\\\";\\r\\n    } else {\\r\\n      sampleRow[header] = \\\"Sample\\\";\\r\\n    }\\r\\n  });\\r\\n\\r\\n  const worksheet = XLSX.utils.json_to_sheet([sampleRow]);\\r\\n  const workbook = XLSX.utils.book_new();\\r\\n  XLSX.utils.book_append_sheet(workbook, worksheet, \\\"Template\\\");\\r\\n  XLSX.writeFile(workbook, \\\"FleetUploadTemplate.xlsx\\\");\\r\\n};\\r\\n\\r\\n\\r\\n  const getMappedKey = (label) => labelToKey[label.trim()] || null;\\r\\n\\r\\n  const parseExcel = (file) => {\\r\\n    const reader = new FileReader();\\r\\n    reader.onload = (e) => {\\r\\n      const workbook = XLSX.read(e.target.result, { type: \\\"binary\\\" });\\r\\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\\r\\n      const raw = XLSX.utils.sheet_to_json(sheet, { header: 1, defval: \\\"\\\", blankrows: false });\\r\\n\\r\\n      const headers = raw[0];\\r\\n      const rows = raw.slice(1).map((row) => {\\r\\n        const obj = {};\\r\\n        headers.forEach((h, j) => {\\r\\n          const key = getMappedKey(h);\\r\\n          if (key) obj[key] = row[j];\\r\\n        });\\r\\n        return obj;\\r\\n      });\\r\\n\\r\\n      setPreviewData(rows);\\r\\n      setStatusMap({});\\r\\n      setFleetNumbers({});\\r\\n    };\\r\\n    reader.readAsBinaryString(file);\\r\\n  };\\r\\n\\r\\n  const getNextFleetNumber = async () => {\\r\\n    const counterRef = doc(db, \\\"Counters\\\", \\\"fleet_counter\\\");\\r\\n    const newFleetNo = await runTransaction(db, async (transaction) => {\\r\\n      const docSnap = await transaction.get(counterRef);\\r\\n      const current = docSnap.data().nextFleetNo || 1;\\r\\n      transaction.update(counterRef, { nextFleetNo: current + 1 });\\r\\n      return current;\\r\\n    });\\r\\n    return newFleetNo;\\r\\n  };\\r\\n  const parseDDMMYYYY = (str) => {\\r\\n  const [dd, mm, yyyy] = str.split(\\\"-\\\");\\r\\n  if (!dd || !mm || !yyyy) return null;\\r\\n  return new Date(Number(yyyy), Number(mm) - 1, Number(dd));  // Local timezone-safe\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n  const saveRow = async (row, i) => {\\r\\n  const user = auth.currentUser;\\r\\n  try {\\r\\n    const fleetNo = await getNextFleetNumber(); // This is your indentNumber now\\r\\n\\r\\n    const parsedRow = { ...row };\\r\\n    Object.keys(parsedRow).forEach((key) => {\\r\\n      if (typeof parsedRow[key] === \\\"string\\\" && parsedRow[key].match(/^\\\\d{2}-\\\\d{2}-\\\\d{4}$/)) {\\r\\n        const parsedDate = parseDDMMYYYY(parsedRow[key]);\\r\\n        if (parsedDate instanceof Date && !isNaN(parsedDate)) {\\r\\n          parsedRow[key] = parsedDate;\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n    if (parsedRow.placementDate && !parsedRow.date) {\\r\\n  parsedRow.date = parsedRow.placementDate;\\r\\n}\\r\\n    const enriched = {\\r\\n      ...parsedRow,\\r\\n      indentNumber: fleetNo, // ✅ THIS FIXES IT\\r\\n      createdAt: new Date(),\\r\\n      createdBy: user?.email || \\\"anonymous\\\",\\r\\n      isCurrent: true,\\r\\n      versionDate: new Date(),\\r\\n    };\\r\\n\\r\\n    await addDoc(collection(db, \\\"fleet_records\\\"), enriched);\\r\\n    setStatusMap((prev) => ({ ...prev, [i]: \\\"✅ Saved\\\" }));\\r\\n    setFleetNumbers((prev) => ({ ...prev, [i]: fleetNo }));\\r\\n  } catch (err) {\\r\\n    setStatusMap((prev) => ({ ...prev, [i]: \\\"❌ Failed\\\" }));\\r\\n  }\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n  const saveAll = async () => {\\r\\n    for (let i = 0; i < previewData.length; i++) {\\r\\n      if (!statusMap[i]) await saveRow(previewData[i], i);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleEdit = (i, key, value) => {\\r\\n    const updated = [...previewData];\\r\\n    updated[i][key] = value;\\r\\n    setPreviewData(updated);\\r\\n  };\\r\\n\\r\\n  const deleteRow = (i) => {\\r\\n    setPreviewData(previewData.filter((_, idx) => idx !== i));\\r\\n    const s = { ...statusMap }; delete s[i];\\r\\n    const f = { ...fleetNumbers }; delete f[i];\\r\\n    setStatusMap(s);\\r\\n    setFleetNumbers(f);\\r\\n  };\\r\\n\\r\\n  const resetTable = () => {\\r\\n    setPreviewData([]);\\r\\n    setStatusMap({});\\r\\n    setFleetNumbers({});\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div style={{ marginBottom: 40 }}>\\r\\n      <h4>Upload Excel & Preview</h4>\\r\\n      <div style={{ display: \\\"flex\\\", alignItems: \\\"center\\\", gap: \\\"10px\\\" }}>\\r\\n        <input\\r\\n          type=\\\"file\\\"\\r\\n          accept=\\\".xlsx, .xls\\\"\\r\\n          onChange={(e) => {\\r\\n            const file = e.target.files?.[0];\\r\\n            if (file) {\\r\\n              parseExcel(file);\\r\\n              setTimeout(() => { e.target.value = \\\"\\\"; }, 100);\\r\\n            }\\r\\n          }}\\r\\n        />\\r\\n        <button onClick={generateTemplate}>⬇️ Download Template</button>\\r\\n      </div>\\r\\n\\r\\n      {previewData.length > 0 && (\\r\\n        <>\\r\\n          <h5 style={{ marginTop: 20 }}>📄 Preview Table (Excel Upload)</h5>\\r\\n          <button onClick={saveAll}>💾 Save All</button>\\r\\n          <button onClick={resetTable} style={{ marginLeft: 10, color: \\\"red\\\" }}>🧹 Clear</button>\\r\\n          <div className=\\\"table-scroll-x\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  <th>Fleet Number</th>\\r\\n                  {Object.keys(previewData[0]).map((key) => <th key={key}>{key}</th>)}\\r\\n                  <th>Status</th>\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                {previewData.map((row, i) => (\\r\\n                  <tr key={i}>\\r\\n                    <td>{fleetNumbers[i] || \\\"\\\"}</td>\\r\\n                    {Object.keys(row).map((key) => (\\r\\n                      <td key={key}>\\r\\n                        <input\\r\\n                            type={dateFieldKeys.includes(key) ? \\\"date\\\" : \\\"text\\\"}\\r\\n                            value={\\r\\n                              dateFieldKeys.includes(key) && row[key]\\r\\n                                ? (() => {\\r\\n                                    try {\\r\\n                                      const d = new Date(row[key]);\\r\\n                                      return isNaN(d.getTime()) ? \\\"\\\" : new Date(d.getTime() - d.getTimezoneOffset() * 60000).toISOString().split(\\\"T\\\")[0];\\r\\n\\r\\n                                    } catch {\\r\\n                                      return \\\"\\\";\\r\\n                                    }\\r\\n                                  })()\\r\\n                                : row[key]\\r\\n                            }\\r\\n                            onChange={(e) => handleEdit(i, key, e.target.value)}\\r\\n                            style={{ width: \\\"120px\\\" }}\\r\\n                          />\\r\\n\\r\\n                      </td>\\r\\n                    ))}\\r\\n                    <td>{statusMap[i] || \\\"⏳ Pending\\\"}</td>\\r\\n                    <td>\\r\\n                      <button onClick={() => saveRow(row, i)} disabled={statusMap[i] === \\\"✅ Saved\\\"}>Save</button>\\r\\n                      <button onClick={() => deleteRow(i)} style={{ marginLeft: 6, color: \\\"red\\\" }}>Delete</button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                ))}\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n        </>\\r\\n      )}\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default UploadForm;\\r\\n\",\"import React, { useEffect, useState } from \\\"react\\\";\\r\\nimport { onAuthStateChanged, signOut } from \\\"firebase/auth\\\";\\r\\nimport {\\r\\n  collection,\\r\\n  query,\\r\\n  where,\\r\\n  getDocs,\\r\\n  getDoc,\\r\\n  updateDoc,\\r\\n  deleteDoc,\\r\\n  doc,\\r\\n  addDoc,\\r\\n} from \\\"firebase/firestore\\\";\\r\\nimport { auth, db } from \\\"./firebase\\\";\\r\\nimport Auth from \\\"./components/Auth\\\";\\r\\nimport ManualEntryForm from \\\"./components/ManualEntryForm\\\";\\r\\nimport UploadForm from \\\"./components/UploadForm\\\";\\r\\nimport \\\"./App.css\\\";\\r\\nimport { toast, ToastContainer } from \\\"react-toastify\\\";\\r\\nimport \\\"react-toastify/dist/ReactToastify.css\\\";\\r\\nimport * as XLSX from \\\"xlsx\\\";\\r\\nimport { confirmAlert } from 'react-confirm-alert';\\r\\nimport 'react-confirm-alert/src/react-confirm-alert.css';\\r\\n\\r\\nconst dateFieldKeys = [\\r\\n  \\\"date\\\", \\\"deliveryDate\\\", \\\"customerMaster.advanceRecDate\\\", \\\"customerMaster.balanceRecDate\\\",\\r\\n  \\\"customerMaster.advDeviation\\\", \\\"customerMaster.validatedAdvanceUTRDescription\\\",\\r\\n  \\\"customerMaster.validatedAdvanceAmount\\\", \\\"customerMaster.validatedBalanceUTR\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTRAmount\\\",\\r\\n  \\\"podMaster.podVendorDate\\\", \\\"podMaster.podSendToCustomerDate\\\", \\\"podMaster.podCustomerRec\\\", \\\"podMaster.today\\\"\\r\\n];\\r\\n\\r\\n\\r\\nconst finalColumnOrder = [\\r\\n  \\\"indentNumber\\\", \\\"date\\\",\\\"deliveryDate\\\", \\\"months\\\", \\\"origin\\\", \\\"destination\\\", \\\"customer\\\", \\\"customerType\\\",\\r\\n  \\\"vehicleNo\\\", \\\"vendor\\\", \\\"salesRate\\\", \\\"buyRate\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"versionDate\\\",\\r\\n  \\\"isCurrent\\\", \\\"updateDescription\\\", \\\"expiredAt\\\",\\r\\n  // Customer Master\\r\\n  \\\"customerMaster.toBeAdvance\\\", \\\"customerMaster.advanceReceived\\\", \\\"customerMaster.advDeviation\\\",\\r\\n  \\\"customerMaster.advanceRecDate\\\", \\\"customerMaster.validatedAdvanceUTRDescription\\\",\\r\\n  \\\"customerMaster.validatedAdvanceAmount\\\", \\\"customerMaster.balance\\\", \\\"customerMaster.processingCharges\\\",\\r\\n  \\\"customerMaster.inwardMisCharges\\\", \\\"customerMaster.outwardMisCharges\\\", \\\"customerMaster.balanceReceived\\\",\\r\\n  \\\"customerMaster.remainingBalance\\\", \\\"customerMaster.balanceRecDate\\\", \\\"customerMaster.validatedBalanceUTR\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTRAmount\\\",\\r\\n  // Vendor Master\\r\\n  \\\"vendorMaster.vendorOutwardPayment\\\", \\\"vendorMaster.paidAmount\\\", \\\"vendorMaster.balancePending\\\",\\r\\n  \\\"vendorMaster.vendorRemark\\\",\\r\\n  // POD Master\\r\\n  \\\"podMaster.podVendorDate\\\", \\\"podMaster.podSendToCustomerDate\\\", \\\"podMaster.docNo\\\",\\r\\n  \\\"podMaster.podCustomerRec\\\", \\\"podMaster.today\\\", \\\"podMaster.balanceOverdueDays\\\",\\r\\n  \\\"podMaster.toBeCollectedAmount\\\"\\r\\n];\\r\\n\\r\\nconst columnLabels = {\\r\\n  indentNumber: \\\"Indent Number\\\",\\r\\n  date: \\\"Placement Date\\\",\\r\\n  deliveryDate: \\\"Delivery Date\\\",\\r\\n  months: \\\"Month\\\",\\r\\n  origin: \\\"Origin\\\",\\r\\n  destination: \\\"Destination\\\",\\r\\n  customer: \\\"Customer\\\",\\r\\n  customerType: \\\"Customer Type\\\",\\r\\n  vehicleNo: \\\"Vehicle Number\\\",\\r\\n  vendor: \\\"Vendor\\\",\\r\\n  salesRate: \\\"Sales Rate\\\",\\r\\n  buyRate: \\\"Buy Rate\\\",\\r\\n  createdAt: \\\"Created At\\\",\\r\\n  createdBy: \\\"Created By\\\",\\r\\n  versionDate: \\\"Version Date\\\",\\r\\n  isCurrent: \\\"Is Current\\\",\\r\\n  updateDescription: \\\"Update Description\\\",\\r\\n  expiredAt: \\\"Expired At\\\",\\r\\n\\r\\n  // Customer Master\\r\\n  \\\"customerMaster.toBeAdvance\\\": \\\"Customer Master -> To be Advance (Sales)\\\",\\r\\n  \\\"customerMaster.advanceReceived\\\": \\\"Customer Master -> Advance / Payment Received\\\",\\r\\n  \\\"customerMaster.advDeviation\\\": \\\"Customer Master -> Adv Deviation (as on Date)\\\",\\r\\n  \\\"customerMaster.advanceRecDate\\\": \\\"Customer Master -> Advance Rec Date\\\",\\r\\n  \\\"customerMaster.validatedAdvanceUTRDescription\\\": \\\"Customer Master -> Validated-Advance UTR Description\\\",\\r\\n  \\\"customerMaster.validatedAdvanceAmount\\\": \\\"Customer Master -> Validated UTR - Advance Amount\\\",\\r\\n  \\\"customerMaster.balance\\\": \\\"Customer Master -> Balance\\\",\\r\\n  \\\"customerMaster.processingCharges\\\": \\\"Customer Master -> Processing Charges\\\",\\r\\n  \\\"customerMaster.inwardMisCharges\\\": \\\"Customer Master -> Inward-Mis Charges\\\",\\r\\n  \\\"customerMaster.outwardMisCharges\\\": \\\"Customer Master -> Outward-Mis Charges\\\",\\r\\n  \\\"customerMaster.balanceReceived\\\": \\\"Customer Master -> Bal Received\\\",\\r\\n  \\\"customerMaster.remainingBalance\\\": \\\"Customer Master -> Remaining Balance\\\",\\r\\n  \\\"customerMaster.balanceRecDate\\\": \\\"Customer Master -> Balance Rec Date\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTR\\\": \\\"Customer Master -> Validated-Balance UTR\\\",\\r\\n  \\\"customerMaster.validatedBalanceUTRAmount\\\": \\\"Customer Master -> Validate Balance UTR-Amount\\\",\\r\\n\\r\\n  // Vendor Master\\r\\n  \\\"vendorMaster.vendorOutwardPayment\\\": \\\"Vendor Master -> Outward Payment\\\",\\r\\n  \\\"vendorMaster.paidAmount\\\": \\\"Vendor Master -> Paid Amount\\\",\\r\\n  \\\"vendorMaster.balancePending\\\": \\\"Vendor Master -> Balance Pending\\\",\\r\\n  \\\"vendorMaster.vendorRemark\\\": \\\"Vendor Master -> Vendor Remark\\\",\\r\\n\\r\\n  // POD Master\\r\\n  \\\"podMaster.podVendorDate\\\": \\\"POD Master -> POD Vendor-Date\\\",\\r\\n  \\\"podMaster.podSendToCustomerDate\\\": \\\"POD Master -> POD-Send to Customer Date\\\",\\r\\n  \\\"podMaster.docNo\\\": \\\"POD Master -> Doc No\\\",\\r\\n  \\\"podMaster.podCustomerRec\\\": \\\"POD Master -> POD-Customer Rec\\\",\\r\\n  \\\"podMaster.today\\\": \\\"POD Master -> Today\\\",\\r\\n  \\\"podMaster.balanceOverdueDays\\\": \\\"POD Master -> Balance Overdue Days\\\",\\r\\n  \\\"podMaster.toBeCollectedAmount\\\": \\\"POD Master -> To be Collected Amount\\\"\\r\\n};\\r\\n\\r\\n\\r\\nconst flattenObject = (obj, prefix = \\\"\\\") => {\\r\\n  let result = {};\\r\\n  for (const key in obj) {\\r\\n    const value = obj[key];\\r\\n    const fullKey = prefix ? `${prefix}.${key}` : key;\\r\\n    if (value && typeof value === \\\"object\\\" && !value.seconds) {\\r\\n      Object.assign(result, flattenObject(value, fullKey));\\r\\n    } else {\\r\\n      result[fullKey] = value;\\r\\n    }\\r\\n  }\\r\\n  return result;\\r\\n};\\r\\n\\r\\n\\r\\nfunction App() {\\r\\n  const [user, setUser] = useState(null);\\r\\n  const [authLoading, setAuthLoading] = useState(true);\\r\\n  const [records, setRecords] = useState([]);\\r\\n  const [history, setHistory] = useState([]);\\r\\n  const [searchKey, setSearchKey] = useState(\\\"\\\");\\r\\n  const [searchField, setSearchField] = useState(\\\"indentNumber\\\");\\r\\n  const [startDate, setStartDate] = useState(\\\"\\\");\\r\\n  const [endDate, setEndDate] = useState(\\\"\\\");\\r\\n  const [originalRecords, setOriginalRecords] = useState({});\\r\\n  const [isSearching, setIsSearching] = useState(false);\\r\\n  const [isExporting, setIsExporting] = useState(false);\\r\\n  const [searchAttempted, setSearchAttempted] = useState(false);\\r\\n  const [activeOnly, setActiveOnly] = useState(false);\\r\\n  const [includeCustomer, setIncludeCustomer] = useState(false);\\r\\n  const [includeVendor, setIncludeVendor] = useState(false);\\r\\n  const [includePOD, setIncludePOD] = useState(false);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  useEffect(() => {\\r\\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\\r\\n      setUser(currentUser);\\r\\n      setAuthLoading(false);\\r\\n    });\\r\\n    return () => unsubscribe();\\r\\n  }, []);\\r\\n\\r\\n  const handleExportToExcel = () => {\\r\\n  if (history.length === 0) {\\r\\n    toast.info(\\\"❌ No history data to export.\\\");\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  // Define columns to include\\r\\n  const fixedCols = finalColumnOrder.slice(0, 17); // First 17 are fixed\\r\\n  const customerCols = finalColumnOrder.slice(17, 32);\\r\\n  const vendorCols = finalColumnOrder.slice(32, 36);\\r\\n  const podCols = finalColumnOrder.slice(36);\\r\\n\\r\\n  const selectedCols = [\\r\\n    ...fixedCols,\\r\\n    ...(includeCustomer ? customerCols : []),\\r\\n    ...(includeVendor ? vendorCols : []),\\r\\n    ...(includePOD ? podCols : [])\\r\\n  ];\\r\\n\\r\\n  const exportData = history.map((row) => {\\r\\n    const flatRow = {};\\r\\n    selectedCols.forEach((col) => {\\r\\n      const val = row[col];\\r\\n      flatRow[col] = val?.seconds\\r\\n        ? new Date(val.seconds * 1000).toLocaleString()\\r\\n        : val ?? \\\"\\\";\\r\\n    });\\r\\n    return flatRow;\\r\\n  });\\r\\n\\r\\n  const worksheet = XLSX.utils.json_to_sheet(exportData);\\r\\n  const workbook = XLSX.utils.book_new();\\r\\n  XLSX.utils.book_append_sheet(workbook, worksheet, \\\"Filtered Export\\\");\\r\\n\\r\\n  const fileName = `FilteredExport_${new Date().toISOString().split(\\\"T\\\")[0]}.xlsx`;\\r\\n  XLSX.writeFile(workbook, fileName);\\r\\n};\\r\\n\\r\\n\\r\\n  const handleSearch = async () => {\\r\\n    setIsSearching(true);\\r\\n    try {\\r\\n      const fleetRef = collection(db, \\\"fleet_records\\\");\\r\\n      let q;\\r\\n\\r\\n          if (searchField === \\\"Date\\\") {\\r\\n  const fromDate = new Date(startDate);\\r\\n  const toDate = new Date(endDate + \\\"T23:59:59\\\");\\r\\n\\r\\n  if (fromDate > toDate) {\\r\\n    toast.warn(\\\"⚠️ 'From' date cannot be after 'To' date.\\\");\\r\\n    setIsSearching(false);\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  q = query(\\r\\n    fleetRef,\\r\\n    ...(activeOnly ? [where(\\\"isCurrent\\\", \\\"==\\\", true)] : []),\\r\\n    where(\\\"createdAt\\\", \\\">=\\\", fromDate),\\r\\n    where(\\\"createdAt\\\", \\\"<=\\\", toDate)\\r\\n  );\\r\\n}\\r\\n else if (searchKey) {\\r\\n  const key = searchField === \\\"indentNumber\\\" ? Number(searchKey) : searchKey;\\r\\n  q = query(\\r\\n    fleetRef,\\r\\n    where(searchField, \\\"==\\\", key),\\r\\n    ...(activeOnly ? [where(\\\"isCurrent\\\", \\\"==\\\", true)] : [])\\r\\n  );\\r\\n}\\r\\n\\r\\n else {\\r\\n        toast.warn(\\\"🔍 Please enter a search value.\\\");\\r\\n        setIsSearching(false);\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      setSearchAttempted(true);\\r\\n      const snapshot = await getDocs(q);\\r\\n      const allVersions = [];\\r\\n      const currentOnly = [];\\r\\n\\r\\n      snapshot.forEach((docSnap) => {\\r\\n        const rawData = { id: docSnap.id, ...docSnap.data() };\\r\\n        const row = flattenObject(rawData);\\r\\n\\r\\n        allVersions.push(row);\\r\\n        if (row.isCurrent) currentOnly.push(row);\\r\\n      });\\r\\n      allVersions.sort((a, b) => {\\r\\n  if (a.isCurrent && !b.isCurrent) return -1;\\r\\n  if (!a.isCurrent && b.isCurrent) return 1;\\r\\n  return b.indentNumber - a.indentNumber;\\r\\n});\\r\\n\\r\\n// ✅ Sort currentOnly also by indentNumber descending\\r\\ncurrentOnly.sort((a, b) => b.indentNumber - a.indentNumber);\\r\\n\\r\\n      if (searchField === \\\"indentNumber\\\") {\\r\\n        setRecords(currentOnly);\\r\\n        setHistory(allVersions);\\r\\n      } else {\\r\\n        setRecords([]);\\r\\n        setHistory(allVersions);\\r\\n      }\\r\\n\\r\\n      if (snapshot.empty || allVersions.length === 0) {\\r\\n        toast.info(\\\"❌ No records found.\\\");\\r\\n      }\\r\\n    } catch (error) {\\r\\n  toast.error(\\\"❌ Search failed: \\\" + error.message);\\r\\n\\r\\n    } finally {\\r\\n      setIsSearching(false);\\r\\n    }\\r\\n  };\\r\\n\\r\\n    const normalize = (val) => {\\r\\n    if (val === null || val === undefined) return \\\"\\\";\\r\\n    return typeof val === \\\"object\\\" && val.seconds\\r\\n      ? new Date(val.seconds * 1000).toISOString()\\r\\n      : String(val).trim();\\r\\n  };\\r\\n\\r\\n const getChangedFields = (current, original) => {\\r\\n  const ignored = [\\\"versionDate\\\", \\\"expiredAt\\\", \\\"isCurrent\\\", \\\"updateDescription\\\", \\\"createdAt\\\", \\\"createdBy\\\"];\\r\\n  const changed = [];\\r\\n\\r\\n  const flatCurrent = flattenObject(current);\\r\\n  const flatOriginal = flattenObject(original);\\r\\n\\r\\n  for (const key in flatCurrent) {\\r\\n    if (ignored.includes(key)) continue;\\r\\n    const currVal = normalize(flatCurrent[key]);\\r\\n    const origVal = normalize(flatOriginal?.[key]);\\r\\n    if (currVal !== origVal) changed.push(key);\\r\\n  }\\r\\n\\r\\n  return changed;\\r\\n};\\r\\n\\r\\n\\r\\n  const hasMeaningfulChanges = (curr, orig) => getChangedFields(curr, orig).length > 0;\\r\\n\\r\\n\\r\\n    const handleUpdate = async (row) => {\\r\\n    try {\\r\\n      const { id, indentNumber, ...updatedData } = row;\\r\\n\\r\\n      const currentDocSnap = await getDocs(\\r\\n        query(collection(db, \\\"fleet_records\\\"), where(\\\"indentNumber\\\", \\\"==\\\", indentNumber), where(\\\"isCurrent\\\", \\\"==\\\", true))\\r\\n      );\\r\\n      const oldDoc = currentDocSnap.docs.find(doc => doc.id === id);\\r\\n      const oldData = flattenObject(oldDoc?.data() || {});\\r\\n\\r\\n\\r\\n      const cleanData = {};\\r\\n      const updateLog = [];\\r\\n      for (const key in updatedData) {\\r\\n        if ([\\\"id\\\", \\\"isCurrent\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"versionDate\\\", \\\"updateDescription\\\", \\\"expiredAt\\\"].includes(key))\\r\\n          continue;\\r\\n        const newVal = updatedData[key] ?? \\\"\\\";\\r\\n        const oldVal = oldData[key] ?? \\\"\\\";\\r\\n        cleanData[key] = newVal;\\r\\n\\r\\n        if (String(newVal).trim() !== String(oldVal).trim()) {\\r\\n          updateLog.push(`Updated ${key}`);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (updateLog.length === 0) {\\r\\n        toast.info(\\\"ℹ️ No changes to update.\\\");\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      confirmAlert({\\r\\n  title: 'Confirm Update',\\r\\n  message: `Do you want to update changes: ${updateLog.join(\\\", \\\")}?`,\\r\\n  buttons: [\\r\\n    {\\r\\n      label: 'Yes',\\r\\n      onClick: async () => {\\r\\n        const flattenedOld = flattenObject(oldDoc.data());\\r\\n\\r\\n        await updateDoc(doc(db, \\\"fleet_records\\\", id), {\\r\\n          ...flattenedOld,\\r\\n          isCurrent: false,\\r\\n          expiredAt: new Date(),\\r\\n          modifiedBy: user.email\\r\\n        });\\r\\n\\r\\n        const newVersion = {\\r\\n          ...cleanData,\\r\\n          indentNumber,\\r\\n          createdAt: new Date(),\\r\\n          createdBy: user.email,\\r\\n          isCurrent: true,\\r\\n          versionDate: new Date(),\\r\\n          updateDescription: updateLog.join(\\\", \\\")\\r\\n        };\\r\\n\\r\\n        await addDoc(collection(db, \\\"fleet_records\\\"), newVersion);\\r\\n        setSearchField(\\\"indentNumber\\\");\\r\\n        setSearchKey(String(indentNumber));\\r\\n        setSearchAttempted(true);\\r\\n        setActiveOnly(false); \\r\\n        toast.success(\\\"✅ Record updated.\\\");\\r\\n\\r\\n        setTimeout(() => {\\r\\n          handleSearch();\\r\\n        }, 500);\\r\\n      }\\r\\n    },\\r\\n    {\\r\\n      label: 'No'\\r\\n    }\\r\\n  ]\\r\\n});\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nreturn;\\r\\n\\r\\n\\r\\n      await updateDoc(doc(db, \\\"fleet_records\\\", id), {\\r\\n        ...oldDoc.data(),\\r\\n        isCurrent: false,\\r\\n        expiredAt: new Date(),\\r\\n        modifiedBy: user.email\\r\\n      });\\r\\n\\r\\n\\r\\n      const newVersion = {\\r\\n        ...cleanData,\\r\\n        indentNumber,\\r\\n        createdAt: new Date(),\\r\\n        createdBy: user.email,\\r\\n        isCurrent: true,\\r\\n        versionDate: new Date(),\\r\\n        updateDescription: updateLog.join(\\\", \\\")\\r\\n      };\\r\\n\\r\\n      await addDoc(collection(db, \\\"fleet_records\\\"), newVersion);\\r\\n\\r\\n      toast.success(\\\"✅ Record updated.\\\");\\r\\n      handleSearch();\\r\\n    } catch (error) {\\r\\n      toast.error(\\\"❌ Update failed: \\\" + error.message);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  const handleDelete = async (fleetNumberToDelete) => {\\r\\n    try {\\r\\n      const q = query(collection(db, \\\"fleet_records\\\"), where(\\\"indentNumber\\\", \\\"==\\\", fleetNumberToDelete));\\r\\n      const snapshot = await getDocs(q);\\r\\n      if (snapshot.empty) {\\r\\n  toast.error(\\\"❌ No records found for deletion.\\\");\\r\\n  return;\\r\\n}\\r\\n\\r\\n\\r\\n      confirmAlert({\\r\\n  title: 'Confirm Deletion',\\r\\n  message: `Delete all versions of Indent No. ${fleetNumberToDelete}?`,\\r\\n  buttons: [\\r\\n    {\\r\\n      label: 'Yes',\\r\\n      onClick: async () => {\\r\\n        await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \\\"fleet_records\\\", docSnap.id))));\\r\\n        setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n        setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n        toast.success(\\\"✅ Deleted all versions.\\\");\\r\\n      }\\r\\n    },\\r\\n    {\\r\\n      label: 'No'\\r\\n    }\\r\\n  ]\\r\\n});\\r\\nreturn;\\r\\n\\r\\n\\r\\n      await Promise.all(snapshot.docs.map(docSnap => deleteDoc(doc(db, \\\"fleet_records\\\", docSnap.id))));\\r\\n      setRecords(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n      setHistory(prev => prev.filter(r => r.indentNumber !== fleetNumberToDelete));\\r\\n      toast.success(\\\"✅ Deleted all versions.\\\");\\r\\n    } catch (err) {\\r\\n      toast.error(\\\"❌ Delete failed: \\\" + err.message);\\r\\n    }\\r\\n  };\\r\\n  if (authLoading) return <p style={{ textAlign: \\\"center\\\" }}>Checking authentication...</p>;\\r\\nif (!user) return <Auth />;\\r\\n\\r\\n\\r\\n  return (\\r\\n    <div style={{ maxWidth: \\\"100vw\\\", overflowX: \\\"hidden\\\", padding: \\\"40px 20px\\\" }}>\\r\\n      <div className=\\\"header\\\">\\r\\n        <h2>Fleet Billing Dashboard</h2>\\r\\n        <div style={{ display: \\\"flex\\\", alignItems: \\\"center\\\" }}>\\r\\n          <span className=\\\"user-email\\\">Welcome, {user.email}</span>\\r\\n          <img src=\\\"/logo.png\\\" alt=\\\"Logo\\\" style={{ height: \\\"50px\\\" }} />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <button\\r\\n  onClick={() => {\\r\\n    // ✅ Clear localStorage before logout\\r\\n    localStorage.removeItem(\\\"inProgressFleetNumber\\\");\\r\\n    localStorage.removeItem(\\\"docId\\\");\\r\\n    localStorage.removeItem(\\\"fixedFields\\\");\\r\\n    localStorage.removeItem(\\\"customerFields\\\");\\r\\n    localStorage.removeItem(\\\"vendorFields\\\");\\r\\n    localStorage.removeItem(\\\"podFields\\\");\\r\\n\\r\\n    signOut(auth);\\r\\n  }}\\r\\n>\\r\\n  Logout\\r\\n</button>\\r\\n\\r\\n      <hr />\\r\\n\\r\\n      <UploadForm />\\r\\n\\r\\n      <ManualEntryForm\\r\\n      onAddRow={(row, addToHistory) => {\\r\\n        setRecords([row]);\\r\\n        if (addToHistory) setHistory([row]);\\r\\n\\r\\n        // ✅ Store latest indentNumber to maintain search context\\r\\n        setSearchField(\\\"indentNumber\\\");\\r\\n        setSearchKey(String(row.indentNumber));\\r\\n        setSearchAttempted(true);\\r\\n        setActiveOnly(false);\\r\\n      }}\\r\\n    />\\r\\n\\r\\n\\r\\n      <hr />\\r\\n      <h4>Search Existing Records</h4>\\r\\n<div style={{ display: \\\"flex\\\", flexWrap: \\\"wrap\\\", gap: \\\"10px\\\", alignItems: \\\"center\\\", justifyContent: \\\"space-between\\\", width: \\\"100%\\\" }}>\\r\\n  <div style={{ display: \\\"flex\\\", gap: \\\"10px\\\", flexWrap: \\\"wrap\\\", alignItems: \\\"center\\\" }}>\\r\\n    <select value={searchField} onChange={(e) => {\\r\\n      setSearchField(e.target.value);\\r\\n      setSearchKey(\\\"\\\");\\r\\n      setStartDate(\\\"\\\");\\r\\n      setEndDate(\\\"\\\");\\r\\n    }}>\\r\\n      <option value=\\\"indentNumber\\\">Indent Number</option>\\r\\n      <option value=\\\"Broker\\\">Broker</option>\\r\\n      <option value=\\\"Date\\\">Date</option>\\r\\n    </select>\\r\\n\\r\\n    {searchField === \\\"Date\\\" ? (\\r\\n      <>\\r\\n        <label>From:</label>\\r\\n        <input type=\\\"date\\\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\\r\\n        <label>To:</label>\\r\\n        <input type=\\\"date\\\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\\r\\n      </>\\r\\n    ) : (\\r\\n      <input\\r\\n        type=\\\"text\\\"\\r\\n        value={searchKey}\\r\\n        onChange={(e) => setSearchKey(e.target.value)}\\r\\n        placeholder=\\\"Search key\\\"\\r\\n        style={{ flex: 1, width: \\\"250px\\\" }}\\r\\n      />\\r\\n    )}\\r\\n\\r\\n    <div style={{ display: \\\"flex\\\", alignItems: \\\"center\\\", gap: \\\"10px\\\" }}>\\r\\n    <label style={{  display: \\\"flex\\\", alignItems: \\\"center\\\", fontSize: \\\"14px\\\", marginBottom: 0 }}>\\r\\n      <input\\r\\n        type=\\\"checkbox\\\"\\r\\n        checked={activeOnly}\\r\\n        onChange={(e) => setActiveOnly(e.target.checked)}\\r\\n        style={{ marginRight: \\\"5px\\\" }}\\r\\n      />\\r\\n      Show only active\\r\\n    </label>\\r\\n  </div>\\r\\n\\r\\n  <button className=\\\"btn btn-primary\\\" onClick={handleSearch} disabled={isSearching}>\\r\\n    {isSearching ? \\\"Searching...\\\" : \\\"Search\\\"}\\r\\n  </button>\\r\\n</div></div>\\r\\n\\r\\n<hr />\\r\\n\\r\\n\\r\\n\\r\\n      {searchField === \\\"indentNumber\\\" && records.length > 0 && (\\r\\n        <>\\r\\n          <h4>Editable Current Records</h4>\\r\\n          <div className=\\\"table-scroll-x\\\">\\r\\n            <table>\\r\\n              <thead>\\r\\n                <tr>\\r\\n                  {finalColumnOrder.map((col) => (\\r\\n                    <th key={col}>{columnLabels[col] || col}</th>\\r\\n                  ))}\\r\\n                  <th>Action</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                {records.map((row, rowIndex) => (\\r\\n                  <tr key={rowIndex}>\\r\\n                    {finalColumnOrder.map((col, j) => (\\r\\n                      <td key={j}>\\r\\n                        <input\\r\\n                        type={dateFieldKeys.includes(col) ? \\\"date\\\" : \\\"text\\\"}\\r\\n                        value={\\r\\n                          dateFieldKeys.includes(col) && row[col]\\r\\n                            ? (() => {\\r\\n                                try {\\r\\n                                  const d = new Date(row[col]?.seconds * 1000 || row[col]);\\r\\n                                  return isNaN(d.getTime())\\r\\n                                    ? \\\"\\\"\\r\\n                                    : new Date(d.getTime() - d.getTimezoneOffset() * 60000)\\r\\n                                        .toISOString()\\r\\n                                        .split(\\\"T\\\")[0];\\r\\n                                } catch {\\r\\n                                  return \\\"\\\";\\r\\n                                }\\r\\n                              })()\\r\\n                            : row[col] ?? \\\"\\\"\\r\\n                        }\\r\\n                        onChange={(e) => {\\r\\n                          const updated = [...records];\\r\\n                          const val = e.target.value;\\r\\n                          if (dateFieldKeys.includes(col)) {\\r\\n                            updated[rowIndex][col] = val\\r\\n                              ? new Date(val)\\r\\n                              : \\\"\\\";\\r\\n                          } else {\\r\\n                            updated[rowIndex][col] = val;\\r\\n                          }\\r\\n                          setRecords(updated);\\r\\n                        }}\\r\\n                        readOnly={[\\\"indentNumber\\\", \\\"createdAt\\\", \\\"createdBy\\\", \\\"isCurrent\\\", \\\"updateDescription\\\"].includes(col)}\\r\\n                        style={{ width: \\\"140px\\\" }}\\r\\n                      />\\r\\n\\r\\n                      </td>\\r\\n                    ))}\\r\\n                    <td>\\r\\n                      <button className=\\\"save\\\" onClick={() => handleUpdate(row)}>\\r\\n                        Save\\r\\n                      </button>\\r\\n                      <button className=\\\"delete\\\" onClick={() => handleDelete(row.indentNumber)}>\\r\\n                        Delete\\r\\n                      </button>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                ))}\\r\\n              </tbody>\\r\\n\\r\\n            </table>\\r\\n          </div>\\r\\n        </>\\r\\n      )}\\r\\n\\r\\n      {history.length > 0 && (\\r\\n        <>\\r\\n          <hr />\\r\\n        <div style={{ display: \\\"flex\\\", justifyContent: \\\"space-between\\\", alignItems: \\\"center\\\" }}>\\r\\n  <h4>🔍 Full Version History</h4>\\r\\n  <div style={{ display: \\\"flex\\\", gap: \\\"20px\\\", alignItems: \\\"center\\\" }}>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includeCustomer} onChange={(e) => setIncludeCustomer(e.target.checked)} />\\r\\n    Include Customer\\r\\n  </label>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includeVendor} onChange={(e) => setIncludeVendor(e.target.checked)} />\\r\\n    Include Vendor\\r\\n  </label>\\r\\n  <label>\\r\\n    <input type=\\\"checkbox\\\" checked={includePOD} onChange={(e) => setIncludePOD(e.target.checked)} />\\r\\n    Include POD\\r\\n  </label>\\r\\n  <button onClick={handleExportToExcel} disabled={history.length === 0} className=\\\"export-button\\\">\\r\\n    ⬇️ Export Selected\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n        <div className=\\\"table-scroll-x\\\">\\r\\n          <table>\\r\\n            <thead>\\r\\n              <tr>\\r\\n                {finalColumnOrder.map((col) => (\\r\\n                  <th key={col} className=\\\"tight-header\\\">{columnLabels[col] || col}</th>\\r\\n                ))}\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              {[...history]\\r\\n                .sort((a, b) => {\\r\\n                  if (a.isCurrent) return -1;\\r\\n                  if (b.isCurrent) return 1;\\r\\n                  const aTime = a.expiredAt?.seconds || 0;\\r\\n                  const bTime = b.expiredAt?.seconds || 0;\\r\\n                  return bTime - aTime;\\r\\n                })\\r\\n                .map((row, i) => (\\r\\n                  <tr key={i}>\\r\\n                    {finalColumnOrder.map((col, j) => (\\r\\n                      <td key={j}>\\r\\n                        {typeof row[col] === \\\"object\\\" && row[col]?.seconds\\r\\n              ? (col === \\\"date\\\"\\r\\n                  ? new Date(row[col].seconds * 1000).toLocaleDateString(\\\"en-GB\\\")\\r\\n                  : new Date(row[col].seconds * 1000).toLocaleString())\\r\\n              : String(row[col] ?? \\\"\\\")}\\r\\n                      </td>\\r\\n                    ))}\\r\\n                  </tr>\\r\\n                ))}\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n\\r\\n        </>\\r\\n      )}\\r\\n\\r\\n      {searchAttempted && !isSearching && records.length === 0 && history.length === 0 && (\\r\\n        <p style={{ textAlign: \\\"center\\\", color: \\\"#888\\\", marginTop: \\\"30px\\\" }}>No records to display.</p>\\r\\n      )}\\r\\n\\r\\n      <ToastContainer position=\\\"bottom-right\\\" autoClose={3000} />\\r\\n      <p style={{ textAlign: \\\"center\\\", marginTop: \\\"30px\\\", color: \\\"#666\\\" }}>© 2025 Fleet Billing System</p>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\\r\\n\",\"const reportWebVitals = onPerfEntry => {\\n  if (onPerfEntry && onPerfEntry instanceof Function) {\\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\\n      getCLS(onPerfEntry);\\n      getFID(onPerfEntry);\\n      getFCP(onPerfEntry);\\n      getLCP(onPerfEntry);\\n      getTTFB(onPerfEntry);\\n    });\\n  }\\n};\\n\\nexport default reportWebVitals;\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom/client';\\nimport './index.css';\\nimport App from './App';\\nimport reportWebVitals from './reportWebVitals';\\n\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>\\n);\\n\\n// If you want to start measuring performance in your app, pass a function\\n// to log results (for example: reportWebVitals(console.log))\\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\\nreportWebVitals();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{22:function(e,t,a){e.exports=a(40)},30:function(e,t,a){},38:function(e,t,a){},40:function(e,t,a){\"use strict\";a.r(t);var r=a(0),n=a.n(r),o=a(15),l=a.n(o),c=(a(30),a(21)),s=a(4),d=a(12),i=a(3),m=a(20);const u=Object(m.a)({apiKey:\"AIzaSyAOcDXL1kQsi_MoLJ33GWn9-57qhQ0CWro\",authDomain:\"fleet-9805b.firebaseapp.com\",projectId:\"fleet-9805b\",storageBucket:\"fleet-9805b.appspot.com\",messagingSenderId:\"682529821046\",appId:\"1:682529821046:web:cbb00f5dcbac062304aa57\",measurementId:\"G-T4PZQZGWZ9\"}),b=Object(d.b)(u),p=Object(i.h)(u),g={container:{minHeight:\"100vh\",background:\"linear-gradient(135deg, #1c2541, #3a506b)\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",padding:\"30px\"},card:{width:\"100%\",maxWidth:\"400px\",background:\"#0b132b\",padding:\"40px 30px\",borderRadius:\"16px\",boxShadow:\"0 0 25px rgba(0,0,0,0.3)\",textAlign:\"center\"},logo:{width:\"80%\",maxWidth:\"280px\",margin:\"0 auto 20px\",display:\"block\"},title:{marginBottom:\"20px\",color:\"#ffffff\"},form:{display:\"flex\",flexDirection:\"column\",gap:\"15px\"},input:{padding:\"12px\",borderRadius:\"8px\",border:\"1px solid #ccc\",fontSize:\"16px\",outline:\"none\"},submitBtn:{padding:\"12px\",backgroundColor:\"#1c7ed6\",color:\"#fff\",border:\"none\",borderRadius:\"8px\",fontSize:\"16px\",cursor:\"pointer\"},toggleBtn:{marginTop:\"20px\",background:\"none\",border:\"none\",color:\"#74c0fc\",cursor:\"pointer\",fontSize:\"14px\",textDecoration:\"underline\"}};var v=()=>{const[e,t]=Object(r.useState)(\"\"),[a,o]=Object(r.useState)(\"\"),[l,c]=Object(r.useState)(!0),[s,i]=Object(r.useState)(!1);return n.a.createElement(\"div\",{style:g.container},n.a.createElement(\"div\",{style:g.card},n.a.createElement(\"img\",{src:\"/logo.png\",alt:\"Logo\",style:g.logo}),n.a.createElement(\"h2\",{style:g.title},l?\"Login\":\"Sign Up\"),n.a.createElement(\"form\",{onSubmit:async t=>{t.preventDefault(),i(!0);try{l?(await Object(d.d)(b,e,a),alert(\"\\u2705 Login successful!\")):(await Object(d.a)(b,e,a),alert(\"\\u2705 Account created successfully!\"))}catch(r){alert(\"\\u274c \"+r.message)}finally{i(!1)}},style:g.form},n.a.createElement(\"input\",{type:\"email\",placeholder:\"Email Address\",value:e,onChange:e=>t(e.target.value),required:!0,style:g.input}),n.a.createElement(\"input\",{type:\"password\",placeholder:\"Password\",value:a,onChange:e=>o(e.target.value),required:!0,style:g.input}),n.a.createElement(\"button\",{type:\"submit\",disabled:s,style:g.submitBtn},s?\"Please wait...\":l?\"Login\":\"Sign Up\")),n.a.createElement(\"button\",{onClick:()=>c(!l),style:g.toggleBtn},l?\"New here? Create an account\":\"Already registered? Login\")))},y=(a(18),a(6));const h={date:\"\",deliveryDate:\"\",months:\"\",origin:\"\",destination:\"\",customer:\"\",customerType:\"\",vehicleNo:\"\",vendor:\"\",salesRate:\"\",buyRate:\"\"},O={toBeAdvance:\"\",advanceReceived:\"\",advDeviation:\"\",advanceRecDate:\"\",validatedAdvanceUTRDescription:\"\",validatedAdvanceAmount:\"\",balance:\"\",processingCharges:\"\",inwardMisCharges:\"\",outwardMisCharges:\"\",balanceReceived:\"\",remainingBalance:\"\",balanceRecDate:\"\",validatedBalanceUTR:\"\",validatedBalanceUTRAmount:\"\"},f={vendorOutwardPayment:\"\",paidAmount:\"\",balancePending:\"\",vendorRemark:\"\"},E={podVendorDate:\"\",podSendToCustomerDate:\"\",docNo:\"\",podCustomerRec:\"\",today:\"\",balanceOverdueDays:\"\",toBeCollectedAmount:\"\"},C=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",a={};for(const r in e){const n=e[r],o=t?\"\".concat(t,\".\").concat(r):r;n&&\"object\"===typeof n&&!n.seconds?Object.assign(a,C(n,o)):a[o]=n}return a};var D=e=>{let{onAddRow:t}=e;const[a,o]=Object(r.useState)(h),[l,c]=Object(r.useState)(O),[d,m]=Object(r.useState)(f),[u,g]=Object(r.useState)(E),[v,D]=Object(r.useState)(null),[M,S]=Object(r.useState)(null),[j,x]=Object(r.useState)(!1),[N,w]=Object(r.useState)(!1),[A,R]=Object(r.useState)(!1),[k,T]=Object(r.useState)(!1),[I,B]=Object(r.useState)(!1),[P,F]=Object(r.useState)(!1);Object(r.useEffect)(()=>{const e=localStorage.getItem(\"inProgressIndentNumber\"),t=localStorage.getItem(\"fixedFields\"),a=localStorage.getItem(\"customerFields\"),r=localStorage.getItem(\"vendorFields\"),n=localStorage.getItem(\"podFields\"),l=localStorage.getItem(\"docId\");l&&S(l),e&&D(Number(e)),t&&o(JSON.parse(t)),a&&c(JSON.parse(a)),r&&m(JSON.parse(r)),n&&g(JSON.parse(n))},[]);const V=e=>\"date\"===e?\"Placement Date\":e.replace(/([a-z])([A-Z])/g,\"$1 $2\").replace(/_/g,\" \").replace(/^./,e=>e.toUpperCase()),U=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const a={};return Object.entries(e).forEach(e=>{let[r,n]=e;if(t.includes(r)&&n){const e=new Date(n);a[r]=isNaN(e)?n:i.a.fromDate(e)}else a[r]=n}),a},_=e=>{const t=Object(s.a)(Object(s.a)({},a),{},{[e.target.name]:e.target.value});o(t),localStorage.setItem(\"fixedFields\",JSON.stringify(t))},L=(e,t)=>{const{name:a,value:r}=e.target;if(\"customer\"===t){const e=Object(s.a)(Object(s.a)({},l),{},{[a]:r});c(e),localStorage.setItem(\"customerFields\",JSON.stringify(e))}if(\"vendor\"===t){const e=Object(s.a)(Object(s.a)({},d),{},{[a]:r});m(e),localStorage.setItem(\"vendorFields\",JSON.stringify(e))}if(\"pod\"===t){const e=Object(s.a)(Object(s.a)({},u),{},{[a]:r});g(e),localStorage.setItem(\"podFields\",JSON.stringify(e))}},W=async function(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(M)try{const n=Object(i.e)(p,\"fleet_records\",M);await Object(i.k)(n,{[\"\".concat(e)]:U(t,a)}),\"customerMaster\"===e&&T(!0),\"vendorMaster\"===e&&B(!0),\"podMaster\"===e&&F(!0),Object(y.confirmAlert)({title:\"Saved\",message:\"\\u2705 \".concat(e,\" saved.\"),buttons:[{label:\"OK\"}]})}catch(r){Object(y.confirmAlert)({title:\"Error\",message:\"\\u274c Save error: \"+r.message,buttons:[{label:\"OK\"}]})}else Object(y.confirmAlert)({title:\"Missing Info\",message:\"\\u26a0\\ufe0f Save fixed fields first.\",buttons:[{label:\"OK\"}]})};return n.a.createElement(\"div\",{style:{marginTop:20}},n.a.createElement(\"h4\",null,\"Step 1: Fixed Fields\"),n.a.createElement(\"div\",{className:\"card p-4 mb-4\"},n.a.createElement(\"div\",{className:\"fixed-fields-grid\",style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(h).map(e=>(e.toLowerCase().includes(\"date\")&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),\"date\"===e||\"deliveryDate\"===e?n.a.createElement(\"input\",{type:\"date\",name:e,className:\"form-control\",value:a[e],onChange:_,disabled:!!v}):n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:a[e],onChange:_,disabled:!!v,type:\"text\"}))))),!v&&n.a.createElement(\"div\",{style:{marginTop:\"20px\",width:\"100%\",textAlign:\"right\"}},n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:async()=>{if(Object.values(a).some(e=>\"\"!==String(null!==e&&void 0!==e?e:\"\").trim()))try{const t=b.currentUser,r=await(async()=>{const e=Object(i.e)(p,\"Counters\",\"fleet_counter\");return await Object(i.j)(p,async t=>{const a=await t.get(e);if(!a.exists())throw new Error(\"Counter doc missing\");const r=a.data().nextFleetNo||1;return t.update(e,{nextFleetNo:r+1}),r})})(),n=Object(s.a)(Object(s.a)({indentNumber:r},U(a,[\"date\",\"deliveryDate\"])),{},{createdAt:new Date,createdBy:(null===t||void 0===t?void 0:t.email)||\"anonymous\",isCurrent:!0,versionDate:new Date,updateDescription:\"\"}),o=await Object(i.b)(Object(i.c)(p,\"fleet_records\"),n);D(r),S(o.id),localStorage.setItem(\"docId\",o.id),localStorage.setItem(\"inProgressIndentNumber\",r),await navigator.clipboard.writeText(String(r)),Object(y.confirmAlert)({title:\"Success\",message:\"\\u2705 Fixed fields saved. Indent Number copied: \".concat(r),buttons:[{label:\"OK\"}]})}catch(e){Object(y.confirmAlert)({title:\"Error\",message:\"\\u274c Error saving fixed fields: \"+e.message,buttons:[{label:\"OK\"}]})}else Object(y.confirmAlert)({title:\"Validation Error\",message:\"\\u26a0\\ufe0f Please fill at least one field before continuing.\",buttons:[{label:\"OK\"}]})}},\"\\ud83d\\udcbe Save & Continue\"))),v&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"p\",{style:{color:\"green\"}},\"\\u2705 Saved. Indent No: \",v),n.a.createElement(\"h4\",null,\"Step 2: Select Master Sections\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:j,onChange:()=>x(!j),disabled:k}),\" Customer Master\"),n.a.createElement(\"label\",{style:{marginLeft:15}},n.a.createElement(\"input\",{type:\"checkbox\",checked:N,onChange:()=>w(!N),disabled:I}),\" Vendor Master\"),n.a.createElement(\"label\",{style:{marginLeft:15}},n.a.createElement(\"input\",{type:\"checkbox\",checked:A,onChange:()=>R(!A),disabled:P}),\" POD Master\"),j&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"Customer Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(O).map(e=>{const t=[\"advanceRecDate\",\"balanceRecDate\"].includes(e);return t&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:l[e],onChange:e=>L(e,\"customer\"),disabled:k,type:t?\"date\":\"text\"}))})),!k&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:()=>W(\"customerMaster\",l,[\"advanceRecDate\",\"balanceRecDate\"])},\"Save Customer\")))),N&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"Vendor Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(f).map(e=>n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:d[e],onChange:e=>L(e,\"vendor\"),disabled:I,type:\"text\"})))),!I&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary mt-3\",onClick:()=>W(\"vendorMaster\",d)},\"Save Vendor\")))),A&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",null,\"POD Master\"),n.a.createElement(\"div\",{className:\"card p-3 mb-3\"},n.a.createElement(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(5, 1fr)\",gap:\"16px\"}},Object.keys(E).map(e=>{const t=[\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"].includes(e);return t&&\"\".concat(e,\" (dd/mm/yyyy)\"),n.a.createElement(\"div\",{key:e},n.a.createElement(\"label\",{className:\"form-label\",style:{fontWeight:\"500\"}},V(e)),n.a.createElement(\"input\",{name:e,className:\"form-control\",placeholder:\"\",value:u[e],onChange:e=>L(e,\"pod\"),disabled:P,type:t?\"date\":\"text\"}))})),!P&&n.a.createElement(\"div\",{style:{textAlign:\"right\",marginTop:\"16px\"}},n.a.createElement(\"button\",{className:\"btn btn-primary mt-3\",onClick:()=>W(\"podMaster\",u,[\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"])},\"Save POD\")))),n.a.createElement(\"br\",null),n.a.createElement(\"div\",{style:{marginTop:10,width:\"100%\",textAlign:\"right\"}},n.a.createElement(\"button\",{onClick:async()=>{if(!M)return void Object(y.confirmAlert)({title:\"Error\",message:\"Fleet data not ready.\",buttons:[{label:\"OK\"}]});j&&!k&&await W(\"customerMaster\",l,[\"advanceRecDate\",\"balanceRecDate\"]),N&&!I&&await W(\"vendorMaster\",d),A&&!P&&await W(\"podMaster\",u,[\"podVendorDate\",\"podSendToCustomerDate\",\"podCustomerRec\",\"today\"]);const e=await Object(i.f)(Object(i.e)(p,\"fleet_records\",M));if(!e.exists())return void Object(y.confirmAlert)({title:\"Error\",message:\"Data not found.\",buttons:[{label:\"OK\"}]});const a=Object(s.a)({id:e.id},e.data());t(C(a),!0),localStorage.setItem(\"latestSearchField\",\"indentNumber\"),localStorage.setItem(\"latestSearchKey\",String(a.indentNumber)),o(h),c(O),m(f),g(E),D(null),S(null),x(!1),w(!1),R(!1),T(!1),B(!1),F(!1),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),localStorage.removeItem(\"inProgressIndentNumber\"),localStorage.removeItem(\"docId\"),Object(y.confirmAlert)({title:\"Done\",message:\"\\u2705 Record submitted and ready in editable table.\",buttons:[{label:\"OK\"}]})},className:\"btn btn-success me-2\"},\"\\u2705 Submit Record\"),n.a.createElement(\"button\",{onClick:()=>{Object(y.confirmAlert)({title:\"Confirm New Entry\",message:\"Start a new entry? Unsaved data will be lost.\",buttons:[{label:\"Yes\",onClick:()=>{o(h),c(O),m(f),g(E),D(null),S(null),x(!1),w(!1),R(!1),T(!1),B(!1),F(!1),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),localStorage.removeItem(\"inProgressIndentNumber\"),localStorage.removeItem(\"docId\"),Object(y.confirmAlert)({title:\"Ready\",message:\"\\ud83c\\udd95 Ready to start a new record.\",buttons:[{label:\"OK\"}]})}},{label:\"No\"}]})},className:\"btn btn-primary\"},\"\\u2795 Add New Record\"))))},M=a(10);const S=[\"placementDate\",\"deliveryDate\",\"customerMaster.advanceRecDate\",\"customerMaster.balanceRecDate\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.podCustomerRec\",\"podMaster.today\"],j={\"Placement Date\":\"placementDate\",\"Delivery Date\":\"deliveryDate\",Month:\"months\",Origin:\"origin\",Destination:\"destination\",Customer:\"customer\",\"Customer Type\":\"customerType\",\"Vehicle Number\":\"vehicleNo\",Vendor:\"vendor\",\"Sales Rate\":\"salesRate\",\"Buy Rate\":\"buyRate\",\"Customer -> To be Advance (Sales)\":\"customerMaster.toBeAdvance\",\"Customer -> Advance / Payment Received\":\"customerMaster.advanceReceived\",\"Customer -> Adv Deviation (as on Date)\":\"customerMaster.advDeviation\",\"Customer -> Advance Rec Date\":\"customerMaster.advanceRecDate\",\"Customer -> Validated-Advance UTR Description\":\"customerMaster.validatedAdvanceUTRDescription\",\"Customer -> Validated UTR - Advance Amount\":\"customerMaster.validatedAdvanceAmount\",\"Customer -> Balance\":\"customerMaster.balance\",\"Customer -> Processing Charges\":\"customerMaster.processingCharges\",\"Customer -> Inward-Mis Charges\":\"customerMaster.inwardMisCharges\",\"Customer -> Outward-Mis Charges\":\"customerMaster.outwardMisCharges\",\"Customer -> Bal Received\":\"customerMaster.balanceReceived\",\"Customer -> Remaining Balance\":\"customerMaster.remainingBalance\",\"Customer -> Balance Rec Date\":\"customerMaster.balanceRecDate\",\"Customer -> Validated-Balance UTR\":\"customerMaster.validatedBalanceUTR\",\"Customer -> Validate Balance UTR-Amount\":\"customerMaster.validatedBalanceUTRAmount\",\"Vendor -> Outward Payment\":\"vendorMaster.vendorOutwardPayment\",\"Vendor -> Paid Amount\":\"vendorMaster.paidAmount\",\"Vendor -> Balance Pending\":\"vendorMaster.balancePending\",\"Vendor -> Vendor Remark\":\"vendorMaster.vendorRemark\",\"POD -> POD Vendor-Date\":\"podMaster.podVendorDate\",\"POD -> POD-Send to Customer Date\":\"podMaster.podSendToCustomerDate\",\"POD -> Doc No\":\"podMaster.docNo\",\"POD -> POD-Customer Rec\":\"podMaster.podCustomerRec\",\"POD -> Today\":\"podMaster.today\",\"POD -> Balance Overdue Days\":\"podMaster.balanceOverdueDays\",\"POD -> To be Collected Amount\":\"podMaster.toBeCollectedAmount\"};var x=()=>{const[e,t]=Object(r.useState)([]),[a,o]=Object(r.useState)({}),[l,c]=Object(r.useState)({}),d=e=>{const a=new FileReader;a.onload=(e=>{const a=M.a(e.target.result,{type:\"binary\"}),r=a.Sheets[a.SheetNames[0]],n=M.b.sheet_to_json(r,{header:1,defval:\"\",blankrows:!1}),l=n[0],s=n.slice(1).map(e=>{const t={};return l.forEach((a,r)=>{const n=(e=>j[e.trim()]||null)(a);n&&(t[n]=e[r])}),t});t(s),o({}),c({})}),a.readAsBinaryString(e)},m=async(e,t)=>{const a=b.currentUser;try{const n=await(async()=>{const e=Object(i.e)(p,\"Counters\",\"fleet_counter\");return await Object(i.j)(p,async t=>{const a=(await t.get(e)).data().nextFleetNo||1;return t.update(e,{nextFleetNo:a+1}),a})})(),l=Object(s.a)({},e);Object.keys(l).forEach(e=>{if(\"string\"===typeof l[e]&&l[e].match(/^\\d{2}-\\d{2}-\\d{4}$/)){const t=(e=>{const[t,a,r]=e.split(\"-\");return t&&a&&r?new Date(Number(r),Number(a)-1,Number(t)):null})(l[e]);t instanceof Date&&!isNaN(t)&&(l[e]=t)}}),l.placementDate&&!l.date&&(l.date=l.placementDate);const d=Object(s.a)(Object(s.a)({},l),{},{indentNumber:n,createdAt:new Date,createdBy:(null===a||void 0===a?void 0:a.email)||\"anonymous\",isCurrent:!0,versionDate:new Date});await Object(i.b)(Object(i.c)(p,\"fleet_records\"),d),o(e=>Object(s.a)(Object(s.a)({},e),{},{[t]:\"\\u2705 Saved\"})),c(e=>Object(s.a)(Object(s.a)({},e),{},{[t]:n}))}catch(r){o(e=>Object(s.a)(Object(s.a)({},e),{},{[t]:\"\\u274c Failed\"}))}};return n.a.createElement(\"div\",{style:{marginBottom:40}},n.a.createElement(\"h4\",null,\"Upload Excel & Preview\"),n.a.createElement(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"}},n.a.createElement(\"input\",{type:\"file\",accept:\".xlsx, .xls\",onChange:e=>{var t;const a=null===(t=e.target.files)||void 0===t?void 0:t[0];a&&(d(a),setTimeout(()=>{e.target.value=\"\"},100))}}),n.a.createElement(\"button\",{onClick:()=>{const e=Object.keys(j),t={};e.forEach(e=>{const a=j[e];S.includes(a)?t[e]=\"01-01-2025\":\"month\"===e.toLowerCase()||e.toLowerCase().includes(\"month\")?t[e]=\"July-2025\":e.toLowerCase().includes(\"rate\")||e.toLowerCase().includes(\"amount\")?t[e]=\"10000\":e.toLowerCase().includes(\"number\")||e.toLowerCase().includes(\"no\")?t[e]=\"ABC123\":t[e]=\"Sample\"});const a=M.b.json_to_sheet([t]),r=M.b.book_new();M.b.book_append_sheet(r,a,\"Template\"),M.c(r,\"FleetUploadTemplate.xlsx\")}},\"\\u2b07\\ufe0f Download Template\")),e.length>0&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h5\",{style:{marginTop:20}},\"\\ud83d\\udcc4 Preview Table (Excel Upload)\"),n.a.createElement(\"button\",{onClick:async()=>{for(let t=0;t<e.length;t++)a[t]||await m(e[t],t)}},\"\\ud83d\\udcbe Save All\"),n.a.createElement(\"button\",{onClick:()=>{t([]),o({}),c({})},style:{marginLeft:10,color:\"red\"}},\"\\ud83e\\uddf9 Clear\"),n.a.createElement(\"div\",{className:\"table-scroll-x\"},n.a.createElement(\"table\",null,n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,n.a.createElement(\"th\",null,\"Fleet Number\"),Object.keys(e[0]).map(e=>n.a.createElement(\"th\",{key:e},e)),n.a.createElement(\"th\",null,\"Status\"),n.a.createElement(\"th\",null,\"Action\"))),n.a.createElement(\"tbody\",null,e.map((r,d)=>n.a.createElement(\"tr\",{key:d},n.a.createElement(\"td\",null,l[d]||\"\"),Object.keys(r).map(a=>n.a.createElement(\"td\",{key:a},n.a.createElement(\"input\",{type:S.includes(a)?\"date\":\"text\",value:S.includes(a)&&r[a]?(()=>{try{const t=new Date(r[a]);return isNaN(t.getTime())?\"\":new Date(t.getTime()-6e4*t.getTimezoneOffset()).toISOString().split(\"T\")[0]}catch(e){return\"\"}})():r[a],onChange:r=>((a,r,n)=>{const o=[...e];o[a][r]=n,t(o)})(d,a,r.target.value),style:{width:\"120px\"}}))),n.a.createElement(\"td\",null,a[d]||\"\\u23f3 Pending\"),n.a.createElement(\"td\",null,n.a.createElement(\"button\",{onClick:()=>m(r,d),disabled:\"\\u2705 Saved\"===a[d]},\"Save\"),n.a.createElement(\"button\",{onClick:()=>(r=>{t(e.filter((e,t)=>t!==r));const n=Object(s.a)({},a);delete n[r];const d=Object(s.a)({},l);delete d[r],o(n),c(d)})(d),style:{marginLeft:6,color:\"red\"}},\"Delete\")))))))))},N=(a(38),a(8));a(39);const w=[\"id\",\"indentNumber\"],A=[\"date\",\"deliveryDate\",\"customerMaster.advanceRecDate\",\"customerMaster.balanceRecDate\",\"customerMaster.advDeviation\",\"customerMaster.validatedAdvanceUTRDescription\",\"customerMaster.validatedAdvanceAmount\",\"customerMaster.validatedBalanceUTR\",\"customerMaster.validatedBalanceUTRAmount\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.podCustomerRec\",\"podMaster.today\"],R=[\"indentNumber\",\"date\",\"deliveryDate\",\"months\",\"origin\",\"destination\",\"customer\",\"customerType\",\"vehicleNo\",\"vendor\",\"salesRate\",\"buyRate\",\"createdAt\",\"createdBy\",\"versionDate\",\"isCurrent\",\"updateDescription\",\"expiredAt\",\"customerMaster.toBeAdvance\",\"customerMaster.advanceReceived\",\"customerMaster.advDeviation\",\"customerMaster.advanceRecDate\",\"customerMaster.validatedAdvanceUTRDescription\",\"customerMaster.validatedAdvanceAmount\",\"customerMaster.balance\",\"customerMaster.processingCharges\",\"customerMaster.inwardMisCharges\",\"customerMaster.outwardMisCharges\",\"customerMaster.balanceReceived\",\"customerMaster.remainingBalance\",\"customerMaster.balanceRecDate\",\"customerMaster.validatedBalanceUTR\",\"customerMaster.validatedBalanceUTRAmount\",\"vendorMaster.vendorOutwardPayment\",\"vendorMaster.paidAmount\",\"vendorMaster.balancePending\",\"vendorMaster.vendorRemark\",\"podMaster.podVendorDate\",\"podMaster.podSendToCustomerDate\",\"podMaster.docNo\",\"podMaster.podCustomerRec\",\"podMaster.today\",\"podMaster.balanceOverdueDays\",\"podMaster.toBeCollectedAmount\"],k={indentNumber:\"Indent Number\",date:\"Placement Date\",deliveryDate:\"Delivery Date\",months:\"Month\",origin:\"Origin\",destination:\"Destination\",customer:\"Customer\",customerType:\"Customer Type\",vehicleNo:\"Vehicle Number\",vendor:\"Vendor\",salesRate:\"Sales Rate\",buyRate:\"Buy Rate\",createdAt:\"Created At\",createdBy:\"Created By\",versionDate:\"Version Date\",isCurrent:\"Is Current\",updateDescription:\"Update Description\",expiredAt:\"Expired At\",\"customerMaster.toBeAdvance\":\"Customer Master -> To be Advance (Sales)\",\"customerMaster.advanceReceived\":\"Customer Master -> Advance / Payment Received\",\"customerMaster.advDeviation\":\"Customer Master -> Adv Deviation (as on Date)\",\"customerMaster.advanceRecDate\":\"Customer Master -> Advance Rec Date\",\"customerMaster.validatedAdvanceUTRDescription\":\"Customer Master -> Validated-Advance UTR Description\",\"customerMaster.validatedAdvanceAmount\":\"Customer Master -> Validated UTR - Advance Amount\",\"customerMaster.balance\":\"Customer Master -> Balance\",\"customerMaster.processingCharges\":\"Customer Master -> Processing Charges\",\"customerMaster.inwardMisCharges\":\"Customer Master -> Inward-Mis Charges\",\"customerMaster.outwardMisCharges\":\"Customer Master -> Outward-Mis Charges\",\"customerMaster.balanceReceived\":\"Customer Master -> Bal Received\",\"customerMaster.remainingBalance\":\"Customer Master -> Remaining Balance\",\"customerMaster.balanceRecDate\":\"Customer Master -> Balance Rec Date\",\"customerMaster.validatedBalanceUTR\":\"Customer Master -> Validated-Balance UTR\",\"customerMaster.validatedBalanceUTRAmount\":\"Customer Master -> Validate Balance UTR-Amount\",\"vendorMaster.vendorOutwardPayment\":\"Vendor Master -> Outward Payment\",\"vendorMaster.paidAmount\":\"Vendor Master -> Paid Amount\",\"vendorMaster.balancePending\":\"Vendor Master -> Balance Pending\",\"vendorMaster.vendorRemark\":\"Vendor Master -> Vendor Remark\",\"podMaster.podVendorDate\":\"POD Master -> POD Vendor-Date\",\"podMaster.podSendToCustomerDate\":\"POD Master -> POD-Send to Customer Date\",\"podMaster.docNo\":\"POD Master -> Doc No\",\"podMaster.podCustomerRec\":\"POD Master -> POD-Customer Rec\",\"podMaster.today\":\"POD Master -> Today\",\"podMaster.balanceOverdueDays\":\"POD Master -> Balance Overdue Days\",\"podMaster.toBeCollectedAmount\":\"POD Master -> To be Collected Amount\"},T=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",a={};for(const r in e){const n=e[r],o=t?\"\".concat(t,\".\").concat(r):r;n&&\"object\"===typeof n&&!n.seconds?Object.assign(a,T(n,o)):a[o]=n}return a};var I=function(){const[e,t]=Object(r.useState)(null),[a,o]=Object(r.useState)(!0),[l,m]=Object(r.useState)([]),[u,g]=Object(r.useState)([]),[h,O]=Object(r.useState)(\"\"),[f,E]=Object(r.useState)(\"indentNumber\"),[C,S]=Object(r.useState)(\"\"),[j,I]=Object(r.useState)(\"\"),[B,P]=Object(r.useState)({}),[F,V]=Object(r.useState)(!1),[U,_]=Object(r.useState)(!1),[L,W]=Object(r.useState)(!1),[J,K]=Object(r.useState)(!1),[z,G]=Object(r.useState)(!1),[Z,q]=Object(r.useState)(!1),[Q,Y]=Object(r.useState)(!1);Object(r.useEffect)(()=>{const e=Object(d.c)(b,e=>{t(e),o(!1)});return()=>e()},[]);const $=async()=>{V(!0);try{const t=Object(i.c)(p,\"fleet_records\");let a;if(\"Date\"===f){const e=new Date(C),r=new Date(j+\"T23:59:59\");if(e>r)return N.b.warn(\"\\u26a0\\ufe0f 'From' date cannot be after 'To' date.\"),void V(!1);a=Object(i.i)(t,...J?[Object(i.l)(\"isCurrent\",\"==\",!0)]:[],Object(i.l)(\"createdAt\",\">=\",e),Object(i.l)(\"createdAt\",\"<=\",r))}else{if(!h)return N.b.warn(\"\\ud83d\\udd0d Please enter a search value.\"),void V(!1);{const e=\"indentNumber\"===f?Number(h):h;a=Object(i.i)(t,Object(i.l)(f,\"==\",e),...J?[Object(i.l)(\"isCurrent\",\"==\",!0)]:[])}}W(!0);const r=await Object(i.g)(a),n=[],o=[];r.forEach(e=>{const t=Object(s.a)({id:e.id},e.data()),a=T(t);n.push(a),a.isCurrent&&o.push(a)}),n.sort((e,t)=>e.isCurrent&&!t.isCurrent?-1:!e.isCurrent&&t.isCurrent?1:t.indentNumber-e.indentNumber),o.sort((e,t)=>t.indentNumber-e.indentNumber),\"indentNumber\"===f?(m(o),g(n)):(m([]),g(n)),(r.empty||0===n.length)&&N.b.info(\"\\u274c No records found.\")}catch(e){N.b.error(\"\\u274c Search failed: \"+e.message)}finally{V(!1)}};return a?n.a.createElement(\"p\",{style:{textAlign:\"center\"}},\"Checking authentication...\"):e?n.a.createElement(\"div\",{style:{maxWidth:\"100vw\",overflowX:\"hidden\",padding:\"40px 20px\"}},n.a.createElement(\"div\",{className:\"header\"},n.a.createElement(\"h2\",null,\"Fleet Billing Dashboard\"),n.a.createElement(\"div\",{style:{display:\"flex\",alignItems:\"center\"}},n.a.createElement(\"span\",{className:\"user-email\"},\"Welcome, \",e.email),n.a.createElement(\"img\",{src:\"/logo.png\",alt:\"Logo\",style:{height:\"50px\"}}))),n.a.createElement(\"button\",{onClick:()=>{localStorage.removeItem(\"inProgressFleetNumber\"),localStorage.removeItem(\"docId\"),localStorage.removeItem(\"fixedFields\"),localStorage.removeItem(\"customerFields\"),localStorage.removeItem(\"vendorFields\"),localStorage.removeItem(\"podFields\"),Object(d.e)(b)}},\"Logout\"),n.a.createElement(\"hr\",null),n.a.createElement(x,null),n.a.createElement(D,{onAddRow:(e,t)=>{m([e]),t&&g([e]),E(\"indentNumber\"),O(String(e.indentNumber)),W(!0),K(!1)}}),n.a.createElement(\"hr\",null),n.a.createElement(\"h4\",null,\"Search Existing Records\"),n.a.createElement(\"div\",{style:{display:\"flex\",flexWrap:\"wrap\",gap:\"10px\",alignItems:\"center\",justifyContent:\"space-between\",width:\"100%\"}},n.a.createElement(\"div\",{style:{display:\"flex\",gap:\"10px\",flexWrap:\"wrap\",alignItems:\"center\"}},n.a.createElement(\"select\",{value:f,onChange:e=>{E(e.target.value),O(\"\"),S(\"\"),I(\"\")}},n.a.createElement(\"option\",{value:\"indentNumber\"},\"Indent Number\"),n.a.createElement(\"option\",{value:\"Broker\"},\"Broker\"),n.a.createElement(\"option\",{value:\"Date\"},\"Date\")),\"Date\"===f?n.a.createElement(n.a.Fragment,null,n.a.createElement(\"label\",null,\"From:\"),n.a.createElement(\"input\",{type:\"date\",value:C,onChange:e=>S(e.target.value)}),n.a.createElement(\"label\",null,\"To:\"),n.a.createElement(\"input\",{type:\"date\",value:j,onChange:e=>I(e.target.value)})):n.a.createElement(\"input\",{type:\"text\",value:h,onChange:e=>O(e.target.value),placeholder:\"Search key\",style:{flex:1,width:\"250px\"}}),n.a.createElement(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"}},n.a.createElement(\"label\",{style:{display:\"flex\",alignItems:\"center\",fontSize:\"14px\",marginBottom:0}},n.a.createElement(\"input\",{type:\"checkbox\",checked:J,onChange:e=>K(e.target.checked),style:{marginRight:\"5px\"}}),\"Show only active\")),n.a.createElement(\"button\",{className:\"btn btn-primary\",onClick:$,disabled:F},F?\"Searching...\":\"Search\"))),n.a.createElement(\"hr\",null),\"indentNumber\"===f&&l.length>0&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"h4\",null,\"Editable Current Records\"),n.a.createElement(\"div\",{className:\"table-scroll-x\"},n.a.createElement(\"table\",null,n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,R.map(e=>n.a.createElement(\"th\",{key:e},k[e]||e)),n.a.createElement(\"th\",null,\"Action\"))),n.a.createElement(\"tbody\",null,l.map((t,a)=>n.a.createElement(\"tr\",{key:a},R.map((e,r)=>{var o;return n.a.createElement(\"td\",{key:r},n.a.createElement(\"input\",{type:A.includes(e)?\"date\":\"text\",value:A.includes(e)&&t[e]?(()=>{try{var a;const n=new Date(1e3*(null===(a=t[e])||void 0===a?void 0:a.seconds)||t[e]);return isNaN(n.getTime())?\"\":new Date(n.getTime()-6e4*n.getTimezoneOffset()).toISOString().split(\"T\")[0]}catch(r){return\"\"}})():null!==(o=t[e])&&void 0!==o?o:\"\",onChange:t=>{const r=[...l],n=t.target.value;A.includes(e)?r[a][e]=n?new Date(n):\"\":r[a][e]=n,m(r)},readOnly:[\"indentNumber\",\"createdAt\",\"createdBy\",\"isCurrent\",\"updateDescription\"].includes(e),style:{width:\"140px\"}}))}),n.a.createElement(\"td\",null,n.a.createElement(\"button\",{className:\"save\",onClick:()=>(async t=>{try{const{id:o,indentNumber:l}=t,d=Object(c.a)(t,w),m=(await Object(i.g)(Object(i.i)(Object(i.c)(p,\"fleet_records\"),Object(i.l)(\"indentNumber\",\"==\",l),Object(i.l)(\"isCurrent\",\"==\",!0)))).docs.find(e=>e.id===o),u=T((null===m||void 0===m?void 0:m.data())||{}),b={},g=[];for(const e in d){var a,r;if([\"id\",\"isCurrent\",\"createdAt\",\"createdBy\",\"versionDate\",\"updateDescription\",\"expiredAt\"].includes(e))continue;const t=null!==(a=d[e])&&void 0!==a?a:\"\",n=null!==(r=u[e])&&void 0!==r?r:\"\";b[e]=t,String(t).trim()!==String(n).trim()&&g.push(\"Updated \".concat(e))}return 0===g.length?void N.b.info(\"\\u2139\\ufe0f No changes to update.\"):void Object(y.confirmAlert)({title:\"Confirm Update\",message:\"Do you want to update changes: \".concat(g.join(\", \"),\"?\"),buttons:[{label:\"Yes\",onClick:async()=>{const t=T(m.data());await Object(i.k)(Object(i.e)(p,\"fleet_records\",o),Object(s.a)(Object(s.a)({},t),{},{isCurrent:!1,expiredAt:new Date,modifiedBy:e.email}));const a=Object(s.a)(Object(s.a)({},b),{},{indentNumber:l,createdAt:new Date,createdBy:e.email,isCurrent:!0,versionDate:new Date,updateDescription:g.join(\", \")});await Object(i.b)(Object(i.c)(p,\"fleet_records\"),a),E(\"indentNumber\"),O(String(l)),W(!0),K(!1),N.b.success(\"\\u2705 Record updated.\"),setTimeout(()=>{$()},500)}},{label:\"No\"}]})}catch(n){N.b.error(\"\\u274c Update failed: \"+n.message)}})(t)},\"Save\"),n.a.createElement(\"button\",{className:\"delete\",onClick:()=>(async e=>{try{const a=Object(i.i)(Object(i.c)(p,\"fleet_records\"),Object(i.l)(\"indentNumber\",\"==\",e)),r=await Object(i.g)(a);return r.empty?void N.b.error(\"\\u274c No records found for deletion.\"):void Object(y.confirmAlert)({title:\"Confirm Deletion\",message:\"Delete all versions of Indent No. \".concat(e,\"?\"),buttons:[{label:\"Yes\",onClick:async()=>{await Promise.all(r.docs.map(e=>Object(i.d)(Object(i.e)(p,\"fleet_records\",e.id)))),m(t=>t.filter(t=>t.indentNumber!==e)),g(t=>t.filter(t=>t.indentNumber!==e)),N.b.success(\"\\u2705 Deleted all versions.\")}},{label:\"No\"}]})}catch(t){N.b.error(\"\\u274c Delete failed: \"+t.message)}})(t.indentNumber)},\"Delete\")))))))),u.length>0&&n.a.createElement(n.a.Fragment,null,n.a.createElement(\"hr\",null),n.a.createElement(\"div\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"}},n.a.createElement(\"h4\",null,\"\\ud83d\\udd0d Full Version History\"),n.a.createElement(\"div\",{style:{display:\"flex\",gap:\"20px\",alignItems:\"center\"}},n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:z,onChange:e=>G(e.target.checked)}),\"Include Customer\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:Z,onChange:e=>q(e.target.checked)}),\"Include Vendor\"),n.a.createElement(\"label\",null,n.a.createElement(\"input\",{type:\"checkbox\",checked:Q,onChange:e=>Y(e.target.checked)}),\"Include POD\"),n.a.createElement(\"button\",{onClick:()=>{if(0===u.length)return void N.b.info(\"\\u274c No history data to export.\");const e=R.slice(0,17),t=R.slice(17,32),a=R.slice(32,36),r=R.slice(36),n=[...e,...z?t:[],...Z?a:[],...Q?r:[]],o=u.map(e=>{const t={};return n.forEach(a=>{const r=e[a];t[a]=(null===r||void 0===r?void 0:r.seconds)?new Date(1e3*r.seconds).toLocaleString():null!==r&&void 0!==r?r:\"\"}),t}),l=M.b.json_to_sheet(o),c=M.b.book_new();M.b.book_append_sheet(c,l,\"Filtered Export\");const s=\"FilteredExport_\".concat((new Date).toISOString().split(\"T\")[0],\".xlsx\");M.c(c,s)},disabled:0===u.length,className:\"export-button\"},\"\\u2b07\\ufe0f Export Selected\"))),n.a.createElement(\"div\",{className:\"table-scroll-x\"},n.a.createElement(\"table\",null,n.a.createElement(\"thead\",null,n.a.createElement(\"tr\",null,R.map(e=>n.a.createElement(\"th\",{key:e,className:\"tight-header\"},k[e]||e)))),n.a.createElement(\"tbody\",null,[...u].sort((e,t)=>{var a,r;if(e.isCurrent)return-1;if(t.isCurrent)return 1;const n=(null===(a=e.expiredAt)||void 0===a?void 0:a.seconds)||0;return((null===(r=t.expiredAt)||void 0===r?void 0:r.seconds)||0)-n}).map((e,t)=>n.a.createElement(\"tr\",{key:t},R.map((t,a)=>{var r,o;return n.a.createElement(\"td\",{key:a},\"object\"===typeof e[t]&&(null===(r=e[t])||void 0===r?void 0:r.seconds)?\"date\"===t?new Date(1e3*e[t].seconds).toLocaleDateString(\"en-GB\"):new Date(1e3*e[t].seconds).toLocaleString():String(null!==(o=e[t])&&void 0!==o?o:\"\"))}))))))),L&&!F&&0===l.length&&0===u.length&&n.a.createElement(\"p\",{style:{textAlign:\"center\",color:\"#888\",marginTop:\"30px\"}},\"No records to display.\"),n.a.createElement(N.a,{position:\"bottom-right\",autoClose:3e3}),n.a.createElement(\"p\",{style:{textAlign:\"center\",marginTop:\"30px\",color:\"#666\"}},\"\\xa9 2025 Fleet Billing System\")):n.a.createElement(v,null)};var B=e=>{e&&e instanceof Function&&a.e(3).then(a.bind(null,41)).then(t=>{let{getCLS:a,getFID:r,getFCP:n,getLCP:o,getTTFB:l}=t;a(e),r(e),n(e),o(e),l(e)})};l.a.createRoot(document.getElementById(\"root\")).render(n.a.createElement(n.a.StrictMode,null,n.a.createElement(I,null))),B()}},[[22,1,2]]]);","extractedComments":[]}